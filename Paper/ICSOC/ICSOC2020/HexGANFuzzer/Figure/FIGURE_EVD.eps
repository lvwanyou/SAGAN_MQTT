%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FIGURE_EVD.pdf
%%Creator: Adobe Acrobat 19.12.0
%%For: 11442
%%CreationDate: 2020/4/28, 11:44:10
%%BoundingBox: 0 0 432 295
%%HiResBoundingBox: 0 0 431.7007 294.8218
%%CropBox: 0 0 431.7007 294.8218
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 571 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2020-04-28T11:42:25+08:00"
   xmp:CreatorTool="matplotlib 3.1.0, http://matplotlib.org"
   pdf:Producer="matplotlib pdf backend 3.1.0"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -294.822 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 294.822 li
431.701 294.822 li
431.701 0 li
cp
clp
gsave
0 294.822 mo
432 294.822 li
432 -.178258 li
0 -.178258 li
0 294.822 li
clp
0 294.822 mo
431.701 294.822 li
431.701 0 li
0 0 li
0 294.822 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
91.3166 257.945 mo
91.3166 252.825 li
92.1166 252.825 li
92.1166 257.945 li
91.3166 257.945 li
91.3166 251.546 mo
91.3166 250.746 li
92.1166 250.746 li
92.1166 251.546 li
91.3166 251.546 li
91.3166 249.465 mo
91.3166 244.345 li
92.1166 244.345 li
92.1166 249.465 li
91.3166 249.465 li
91.3166 243.066 mo
91.3166 242.265 li
92.1166 242.265 li
92.1166 243.066 li
91.3166 243.066 li
91.3166 240.986 mo
91.3166 235.866 li
92.1166 235.866 li
92.1166 240.986 li
91.3166 240.986 li
91.3166 234.585 mo
91.3166 233.785 li
92.1166 233.785 li
92.1166 234.585 li
91.3166 234.585 li
91.3166 232.506 mo
91.3166 227.385 li
92.1166 227.385 li
92.1166 232.506 li
91.3166 232.506 li
91.3166 226.105 mo
91.3166 225.306 li
92.1166 225.306 li
92.1166 226.105 li
91.3166 226.105 li
91.3166 224.025 mo
91.3166 218.905 li
92.1166 218.905 li
92.1166 224.025 li
91.3166 224.025 li
91.3166 217.626 mo
91.3166 216.826 li
92.1166 216.826 li
92.1166 217.626 li
91.3166 217.626 li
91.3166 215.545 mo
91.3166 210.426 li
92.1166 210.426 li
92.1166 215.545 li
91.3166 215.545 li
91.3166 209.145 mo
91.3166 208.345 li
92.1166 208.345 li
92.1166 209.145 li
91.3166 209.145 li
91.3166 207.066 mo
91.3166 201.946 li
92.1166 201.946 li
92.1166 207.066 li
91.3166 207.066 li
91.3166 200.665 mo
91.3166 199.866 li
92.1166 199.866 li
92.1166 200.665 li
91.3166 200.665 li
91.3166 198.586 mo
91.3166 193.465 li
92.1166 193.465 li
92.1166 198.586 li
91.3166 198.586 li
91.3166 192.186 mo
91.3166 191.386 li
92.1166 191.386 li
92.1166 192.186 li
91.3166 192.186 li
91.3166 190.105 mo
91.3166 184.986 li
92.1166 184.986 li
92.1166 190.105 li
91.3166 190.105 li
91.3166 183.706 mo
91.3166 182.905 li
92.1166 182.905 li
92.1166 183.706 li
91.3166 183.706 li
91.3166 181.625 mo
91.3166 176.506 li
92.1166 176.506 li
92.1166 181.625 li
91.3166 181.625 li
91.3166 175.225 mo
91.3166 174.425 li
92.1166 174.425 li
92.1166 175.225 li
91.3166 175.225 li
91.3166 173.146 mo
91.3166 168.025 li
92.1166 168.025 li
92.1166 173.146 li
91.3166 173.146 li
91.3166 166.745 mo
91.3166 165.946 li
92.1166 165.946 li
92.1166 166.745 li
91.3166 166.745 li
91.3166 164.665 mo
91.3166 159.545 li
92.1166 159.545 li
92.1166 164.665 li
91.3166 164.665 li
91.3166 158.265 mo
91.3166 157.465 li
92.1166 157.465 li
92.1166 158.265 li
91.3166 158.265 li
91.3166 156.185 mo
91.3166 151.065 li
92.1166 151.065 li
92.1166 156.185 li
91.3166 156.185 li
91.3166 149.786 mo
91.3166 148.985 li
92.1166 148.985 li
92.1166 149.786 li
91.3166 149.786 li
91.3166 147.705 mo
91.3166 142.586 li
92.1166 142.586 li
92.1166 147.705 li
91.3166 147.705 li
91.3166 141.305 mo
91.3166 140.505 li
92.1166 140.505 li
92.1166 141.305 li
91.3166 141.305 li
91.3166 139.226 mo
91.3166 134.105 li
92.1166 134.105 li
92.1166 139.226 li
91.3166 139.226 li
91.3166 132.825 mo
91.3166 132.026 li
92.1166 132.026 li
92.1166 132.825 li
91.3166 132.825 li
91.3166 130.745 mo
91.3166 125.625 li
92.1166 125.625 li
92.1166 130.745 li
91.3166 130.745 li
91.3166 124.346 mo
91.3166 123.545 li
92.1166 123.545 li
92.1166 124.346 li
91.3166 124.346 li
91.3166 122.265 mo
91.3166 117.146 li
92.1166 117.146 li
92.1166 122.265 li
91.3166 122.265 li
91.3166 115.865 mo
91.3166 115.066 li
92.1166 115.066 li
92.1166 115.865 li
91.3166 115.865 li
91.3166 113.786 mo
91.3166 108.665 li
92.1166 108.665 li
92.1166 113.786 li
91.3166 113.786 li
91.3166 107.386 mo
91.3166 106.586 li
92.1166 106.586 li
92.1166 107.386 li
91.3166 107.386 li
91.3166 105.305 mo
91.3166 100.186 li
92.1166 100.186 li
92.1166 105.305 li
91.3166 105.305 li
91.3166 98.9055 mo
91.3166 98.1055 li
92.1166 98.1055 li
92.1166 98.9055 li
91.3166 98.9055 li
91.3166 96.8256 mo
91.3166 91.7055 li
92.1166 91.7055 li
92.1166 96.8256 li
91.3166 96.8256 li
91.3166 90.4255 mo
91.3166 89.6256 li
92.1166 89.6256 li
92.1166 90.4255 li
91.3166 90.4255 li
91.3166 88.3455 mo
91.3166 83.2256 li
92.1166 83.2256 li
92.1166 88.3455 li
91.3166 88.3455 li
91.3166 81.9456 mo
91.3166 81.1455 li
92.1166 81.1455 li
92.1166 81.9456 li
91.3166 81.9456 li
91.3166 79.8656 mo
91.3166 74.7456 li
92.1166 74.7456 li
92.1166 79.8656 li
91.3166 79.8656 li
91.3166 73.4655 mo
91.3166 72.6656 li
92.1166 72.6656 li
92.1166 73.4655 li
91.3166 73.4655 li
91.3166 71.3856 mo
91.3166 66.2655 li
92.1166 66.2655 li
92.1166 71.3856 li
91.3166 71.3856 li
91.3166 64.9856 mo
91.3166 64.1856 li
92.1166 64.1856 li
92.1166 64.9856 li
91.3166 64.9856 li
91.3166 62.9057 mo
91.3166 57.7856 li
92.1166 57.7856 li
92.1166 62.9057 li
91.3166 62.9057 li
91.3166 56.5056 mo
91.3166 55.7057 li
92.1166 55.7057 li
92.1166 56.5056 li
91.3166 56.5056 li
91.3166 54.4256 mo
91.3166 49.3056 li
92.1166 49.3056 li
92.1166 54.4256 li
91.3166 54.4256 li
91.3166 48.0257 mo
91.3166 47.2256 li
92.1166 47.2256 li
92.1166 48.0257 li
91.3166 48.0257 li
91.3166 45.9456 mo
91.3166 40.8257 li
92.1166 40.8257 li
92.1166 45.9456 li
91.3166 45.9456 li
91.3166 39.5456 mo
91.3166 38.7457 li
92.1166 38.7457 li
92.1166 39.5456 li
91.3166 39.5456 li
91.3166 37.4657 mo
91.3166 32.3456 li
92.1166 32.3456 li
92.1166 37.4657 li
91.3166 37.4657 li
91.3166 31.0657 mo
91.3166 30.2657 li
92.1166 30.2657 li
92.1166 31.0657 li
91.3166 31.0657 li
91.3166 28.9856 mo
91.3166 23.8657 li
92.1166 23.8657 li
92.1166 28.9856 li
91.3166 28.9856 li
91.3166 22.5857 mo
91.3166 21.7857 li
92.1166 21.7857 li
92.1166 22.5857 li
91.3166 22.5857 li
91.3166 20.5057 mo
91.3166 15.3857 li
92.1166 15.3857 li
92.1166 20.5057 li
91.3166 20.5057 li
91.3166 14.1058 mo
91.3166 13.3057 li
92.1166 13.3057 li
92.1166 14.1058 li
91.3166 14.1058 li
91.3166 12.0257 mo
91.3166 6.90577 li
92.1166 6.90577 li
92.1166 12.0257 li
91.3166 12.0257 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
91.7166 257.945 mo
91.7166 261.445 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
91.7166 257.945 mo
91.7166 261.445 li
@
85.063 273.741 mo
87.156 273.741 li
87.156 266.513 li
84.881 266.969 li
84.881 265.798 li
87.143 265.344 li
88.43 265.344 li
88.43 273.741 li
90.523 273.741 li
90.523 274.82 li
85.063 274.82 li
85.063 273.741 li
f
95.853 266.189 mo
95.19 266.189 94.696 266.513 94.358 267.163 cv
94.02 267.814 93.864 268.788 93.864 270.089 cv
93.864 271.388 94.02 272.363 94.358 273.013 cv
94.696 273.663 95.19 273.988 95.853 273.988 cv
96.516 273.988 97.01 273.663 97.348 273.013 cv
97.673 272.363 97.842 271.388 97.842 270.089 cv
97.842 268.788 97.673 267.814 97.348 267.163 cv
97.01 266.513 96.516 266.189 95.853 266.189 cv
95.853 265.174 mo
96.906 265.174 97.712 265.603 98.284 266.435 cv
98.843 267.28 99.129 268.503 99.129 270.089 cv
99.129 271.688 98.843 272.909 98.284 273.741 cv
97.712 274.573 96.906 274.99 95.853 274.99 cv
94.787 274.99 93.968 274.573 93.409 273.741 cv
92.85 272.909 92.577 271.688 92.577 270.089 cv
92.577 268.503 92.85 267.28 93.409 266.435 cv
93.968 265.603 94.787 265.174 95.853 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
127.029 257.945 mo
127.029 252.825 li
127.829 252.825 li
127.829 257.945 li
127.029 257.945 li
127.029 251.546 mo
127.029 250.746 li
127.829 250.746 li
127.829 251.546 li
127.029 251.546 li
127.029 249.465 mo
127.029 244.345 li
127.829 244.345 li
127.829 249.465 li
127.029 249.465 li
127.029 243.066 mo
127.029 242.265 li
127.829 242.265 li
127.829 243.066 li
127.029 243.066 li
127.029 240.986 mo
127.029 235.866 li
127.829 235.866 li
127.829 240.986 li
127.029 240.986 li
127.029 234.585 mo
127.029 233.785 li
127.829 233.785 li
127.829 234.585 li
127.029 234.585 li
127.029 232.506 mo
127.029 227.385 li
127.829 227.385 li
127.829 232.506 li
127.029 232.506 li
127.029 226.105 mo
127.029 225.306 li
127.829 225.306 li
127.829 226.105 li
127.029 226.105 li
127.029 224.025 mo
127.029 218.905 li
127.829 218.905 li
127.829 224.025 li
127.029 224.025 li
127.029 217.626 mo
127.029 216.826 li
127.829 216.826 li
127.829 217.626 li
127.029 217.626 li
127.029 215.545 mo
127.029 210.426 li
127.829 210.426 li
127.829 215.545 li
127.029 215.545 li
127.029 209.145 mo
127.029 208.345 li
127.829 208.345 li
127.829 209.145 li
127.029 209.145 li
127.029 207.066 mo
127.029 201.946 li
127.829 201.946 li
127.829 207.066 li
127.029 207.066 li
127.029 200.665 mo
127.029 199.866 li
127.829 199.866 li
127.829 200.665 li
127.029 200.665 li
127.029 198.586 mo
127.029 193.465 li
127.829 193.465 li
127.829 198.586 li
127.029 198.586 li
127.029 192.186 mo
127.029 191.386 li
127.829 191.386 li
127.829 192.186 li
127.029 192.186 li
127.029 190.105 mo
127.029 184.986 li
127.829 184.986 li
127.829 190.105 li
127.029 190.105 li
127.029 183.706 mo
127.029 182.905 li
127.829 182.905 li
127.829 183.706 li
127.029 183.706 li
127.029 181.625 mo
127.029 176.506 li
127.829 176.506 li
127.829 181.625 li
127.029 181.625 li
127.029 175.225 mo
127.029 174.425 li
127.829 174.425 li
127.829 175.225 li
127.029 175.225 li
127.029 173.146 mo
127.029 168.025 li
127.829 168.025 li
127.829 173.146 li
127.029 173.146 li
127.029 166.745 mo
127.029 165.946 li
127.829 165.946 li
127.829 166.745 li
127.029 166.745 li
127.029 164.665 mo
127.029 159.545 li
127.829 159.545 li
127.829 164.665 li
127.029 164.665 li
127.029 158.265 mo
127.029 157.465 li
127.829 157.465 li
127.829 158.265 li
127.029 158.265 li
127.029 156.185 mo
127.029 151.065 li
127.829 151.065 li
127.829 156.185 li
127.029 156.185 li
127.029 149.786 mo
127.029 148.985 li
127.829 148.985 li
127.829 149.786 li
127.029 149.786 li
127.029 147.705 mo
127.029 142.586 li
127.829 142.586 li
127.829 147.705 li
127.029 147.705 li
127.029 141.305 mo
127.029 140.505 li
127.829 140.505 li
127.829 141.305 li
127.029 141.305 li
127.029 139.226 mo
127.029 134.105 li
127.829 134.105 li
127.829 139.226 li
127.029 139.226 li
127.029 132.825 mo
127.029 132.026 li
127.829 132.026 li
127.829 132.825 li
127.029 132.825 li
127.029 130.745 mo
127.029 125.625 li
127.829 125.625 li
127.829 130.745 li
127.029 130.745 li
127.029 124.346 mo
127.029 123.545 li
127.829 123.545 li
127.829 124.346 li
127.029 124.346 li
127.029 122.265 mo
127.029 117.146 li
127.829 117.146 li
127.829 122.265 li
127.029 122.265 li
127.029 115.865 mo
127.029 115.066 li
127.829 115.066 li
127.829 115.865 li
127.029 115.865 li
127.029 113.786 mo
127.029 108.665 li
127.829 108.665 li
127.829 113.786 li
127.029 113.786 li
127.029 107.386 mo
127.029 106.586 li
127.829 106.586 li
127.829 107.386 li
127.029 107.386 li
127.029 105.305 mo
127.029 100.186 li
127.829 100.186 li
127.829 105.305 li
127.029 105.305 li
127.029 98.9055 mo
127.029 98.1055 li
127.829 98.1055 li
127.829 98.9055 li
127.029 98.9055 li
127.029 96.8256 mo
127.029 91.7055 li
127.829 91.7055 li
127.829 96.8256 li
127.029 96.8256 li
127.029 90.4255 mo
127.029 89.6256 li
127.829 89.6256 li
127.829 90.4255 li
127.029 90.4255 li
127.029 88.3455 mo
127.029 83.2256 li
127.829 83.2256 li
127.829 88.3455 li
127.029 88.3455 li
127.029 81.9456 mo
127.029 81.1455 li
127.829 81.1455 li
127.829 81.9456 li
127.029 81.9456 li
127.029 79.8656 mo
127.029 74.7456 li
127.829 74.7456 li
127.829 79.8656 li
127.029 79.8656 li
127.029 73.4655 mo
127.029 72.6656 li
127.829 72.6656 li
127.829 73.4655 li
127.029 73.4655 li
127.029 71.3856 mo
127.029 66.2655 li
127.829 66.2655 li
127.829 71.3856 li
127.029 71.3856 li
127.029 64.9856 mo
127.029 64.1856 li
127.829 64.1856 li
127.829 64.9856 li
127.029 64.9856 li
127.029 62.9057 mo
127.029 57.7856 li
127.829 57.7856 li
127.829 62.9057 li
127.029 62.9057 li
127.029 56.5056 mo
127.029 55.7057 li
127.829 55.7057 li
127.829 56.5056 li
127.029 56.5056 li
127.029 54.4256 mo
127.029 49.3056 li
127.829 49.3056 li
127.829 54.4256 li
127.029 54.4256 li
127.029 48.0257 mo
127.029 47.2256 li
127.829 47.2256 li
127.829 48.0257 li
127.029 48.0257 li
127.029 45.9456 mo
127.029 40.8257 li
127.829 40.8257 li
127.829 45.9456 li
127.029 45.9456 li
127.029 39.5456 mo
127.029 38.7457 li
127.829 38.7457 li
127.829 39.5456 li
127.029 39.5456 li
127.029 37.4657 mo
127.029 32.3456 li
127.829 32.3456 li
127.829 37.4657 li
127.029 37.4657 li
127.029 31.0657 mo
127.029 30.2657 li
127.829 30.2657 li
127.829 31.0657 li
127.029 31.0657 li
127.029 28.9856 mo
127.029 23.8657 li
127.829 23.8657 li
127.829 28.9856 li
127.029 28.9856 li
127.029 22.5857 mo
127.029 21.7857 li
127.829 21.7857 li
127.829 22.5857 li
127.029 22.5857 li
127.029 20.5057 mo
127.029 15.3857 li
127.829 15.3857 li
127.829 20.5057 li
127.029 20.5057 li
127.029 14.1058 mo
127.029 13.3057 li
127.829 13.3057 li
127.829 14.1058 li
127.029 14.1058 li
127.029 12.0257 mo
127.029 6.90577 li
127.829 6.90577 li
127.829 12.0257 li
127.029 12.0257 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
127.429 257.945 mo
127.429 261.445 li
f
127.429 257.945 mo
127.429 261.445 li
@
121.659 273.741 mo
126.131 273.741 li
126.131 274.82 li
120.112 274.82 li
120.112 273.741 li
120.593 273.247 121.256 272.572 122.101 271.714 cv
122.933 270.868 123.466 270.323 123.687 270.076 cv
124.103 269.62 124.389 269.23 124.545 268.905 cv
124.701 268.594 124.792 268.268 124.792 267.956 cv
124.792 267.462 124.61 267.047 124.259 266.734 cv
123.908 266.422 123.453 266.254 122.881 266.254 cv
122.478 266.254 122.049 266.331 121.607 266.461 cv
121.165 266.604 120.684 266.813 120.177 267.099 cv
120.177 265.798 li
120.697 265.59 121.178 265.435 121.62 265.331 cv
122.062 265.227 122.478 265.174 122.855 265.174 cv
123.83 265.174 124.61 265.422 125.195 265.915 cv
125.78 266.409 126.079 267.06 126.079 267.879 cv
126.079 268.268 126.001 268.646 125.858 268.983 cv
125.715 269.335 125.455 269.75 125.065 270.219 cv
124.961 270.349 124.623 270.699 124.051 271.284 cv
123.479 271.87 122.686 272.689 121.659 273.741 cv
f
131.565 266.189 mo
130.902 266.189 130.408 266.513 130.07 267.163 cv
129.732 267.814 129.576 268.788 129.576 270.089 cv
129.576 271.388 129.732 272.363 130.07 273.013 cv
130.408 273.663 130.902 273.988 131.565 273.988 cv
132.228 273.988 132.722 273.663 133.06 273.013 cv
133.385 272.363 133.554 271.388 133.554 270.089 cv
133.554 268.788 133.385 267.814 133.06 267.163 cv
132.722 266.513 132.228 266.189 131.565 266.189 cv
131.565 265.174 mo
132.618 265.174 133.424 265.603 133.996 266.435 cv
134.555 267.28 134.841 268.503 134.841 270.089 cv
134.841 271.688 134.555 272.909 133.996 273.741 cv
133.424 274.573 132.618 274.99 131.565 274.99 cv
130.499 274.99 129.68 274.573 129.121 273.741 cv
128.562 272.909 128.289 271.688 128.289 270.089 cv
128.289 268.503 128.562 267.28 129.121 266.435 cv
129.68 265.603 130.499 265.174 131.565 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
162.741 257.945 mo
162.741 252.825 li
163.541 252.825 li
163.541 257.945 li
162.741 257.945 li
162.741 251.546 mo
162.741 250.746 li
163.541 250.746 li
163.541 251.546 li
162.741 251.546 li
162.741 249.465 mo
162.741 244.345 li
163.541 244.345 li
163.541 249.465 li
162.741 249.465 li
162.741 243.066 mo
162.741 242.265 li
163.541 242.265 li
163.541 243.066 li
162.741 243.066 li
162.741 240.986 mo
162.741 235.866 li
163.541 235.866 li
163.541 240.986 li
162.741 240.986 li
162.741 234.585 mo
162.741 233.785 li
163.541 233.785 li
163.541 234.585 li
162.741 234.585 li
162.741 232.506 mo
162.741 227.385 li
163.541 227.385 li
163.541 232.506 li
162.741 232.506 li
162.741 226.105 mo
162.741 225.306 li
163.541 225.306 li
163.541 226.105 li
162.741 226.105 li
162.741 224.025 mo
162.741 218.905 li
163.541 218.905 li
163.541 224.025 li
162.741 224.025 li
162.741 217.626 mo
162.741 216.826 li
163.541 216.826 li
163.541 217.626 li
162.741 217.626 li
162.741 215.545 mo
162.741 210.426 li
163.541 210.426 li
163.541 215.545 li
162.741 215.545 li
162.741 209.145 mo
162.741 208.345 li
163.541 208.345 li
163.541 209.145 li
162.741 209.145 li
162.741 207.066 mo
162.741 201.946 li
163.541 201.946 li
163.541 207.066 li
162.741 207.066 li
162.741 200.665 mo
162.741 199.866 li
163.541 199.866 li
163.541 200.665 li
162.741 200.665 li
162.741 198.586 mo
162.741 193.465 li
163.541 193.465 li
163.541 198.586 li
162.741 198.586 li
162.741 192.186 mo
162.741 191.386 li
163.541 191.386 li
163.541 192.186 li
162.741 192.186 li
162.741 190.105 mo
162.741 184.986 li
163.541 184.986 li
163.541 190.105 li
162.741 190.105 li
162.741 183.706 mo
162.741 182.905 li
163.541 182.905 li
163.541 183.706 li
162.741 183.706 li
162.741 181.625 mo
162.741 176.506 li
163.541 176.506 li
163.541 181.625 li
162.741 181.625 li
162.741 175.225 mo
162.741 174.425 li
163.541 174.425 li
163.541 175.225 li
162.741 175.225 li
162.741 173.146 mo
162.741 168.025 li
163.541 168.025 li
163.541 173.146 li
162.741 173.146 li
162.741 166.745 mo
162.741 165.946 li
163.541 165.946 li
163.541 166.745 li
162.741 166.745 li
162.741 164.665 mo
162.741 159.545 li
163.541 159.545 li
163.541 164.665 li
162.741 164.665 li
162.741 158.265 mo
162.741 157.465 li
163.541 157.465 li
163.541 158.265 li
162.741 158.265 li
162.741 156.185 mo
162.741 151.065 li
163.541 151.065 li
163.541 156.185 li
162.741 156.185 li
162.741 149.786 mo
162.741 148.985 li
163.541 148.985 li
163.541 149.786 li
162.741 149.786 li
162.741 147.705 mo
162.741 142.586 li
163.541 142.586 li
163.541 147.705 li
162.741 147.705 li
162.741 141.305 mo
162.741 140.505 li
163.541 140.505 li
163.541 141.305 li
162.741 141.305 li
162.741 139.226 mo
162.741 134.105 li
163.541 134.105 li
163.541 139.226 li
162.741 139.226 li
162.741 132.825 mo
162.741 132.026 li
163.541 132.026 li
163.541 132.825 li
162.741 132.825 li
162.741 130.745 mo
162.741 125.625 li
163.541 125.625 li
163.541 130.745 li
162.741 130.745 li
162.741 124.346 mo
162.741 123.545 li
163.541 123.545 li
163.541 124.346 li
162.741 124.346 li
162.741 122.265 mo
162.741 117.146 li
163.541 117.146 li
163.541 122.265 li
162.741 122.265 li
162.741 115.865 mo
162.741 115.066 li
163.541 115.066 li
163.541 115.865 li
162.741 115.865 li
162.741 113.786 mo
162.741 108.665 li
163.541 108.665 li
163.541 113.786 li
162.741 113.786 li
162.741 107.386 mo
162.741 106.586 li
163.541 106.586 li
163.541 107.386 li
162.741 107.386 li
162.741 105.305 mo
162.741 100.186 li
163.541 100.186 li
163.541 105.305 li
162.741 105.305 li
162.741 98.9055 mo
162.741 98.1055 li
163.541 98.1055 li
163.541 98.9055 li
162.741 98.9055 li
162.741 96.8256 mo
162.741 91.7055 li
163.541 91.7055 li
163.541 96.8256 li
162.741 96.8256 li
162.741 90.4255 mo
162.741 89.6256 li
163.541 89.6256 li
163.541 90.4255 li
162.741 90.4255 li
162.741 88.3455 mo
162.741 83.2256 li
163.541 83.2256 li
163.541 88.3455 li
162.741 88.3455 li
162.741 81.9456 mo
162.741 81.1455 li
163.541 81.1455 li
163.541 81.9456 li
162.741 81.9456 li
162.741 79.8656 mo
162.741 74.7456 li
163.541 74.7456 li
163.541 79.8656 li
162.741 79.8656 li
162.741 73.4655 mo
162.741 72.6656 li
163.541 72.6656 li
163.541 73.4655 li
162.741 73.4655 li
162.741 71.3856 mo
162.741 66.2655 li
163.541 66.2655 li
163.541 71.3856 li
162.741 71.3856 li
162.741 64.9856 mo
162.741 64.1856 li
163.541 64.1856 li
163.541 64.9856 li
162.741 64.9856 li
162.741 62.9057 mo
162.741 57.7856 li
163.541 57.7856 li
163.541 62.9057 li
162.741 62.9057 li
162.741 56.5056 mo
162.741 55.7057 li
163.541 55.7057 li
163.541 56.5056 li
162.741 56.5056 li
162.741 54.4256 mo
162.741 49.3056 li
163.541 49.3056 li
163.541 54.4256 li
162.741 54.4256 li
162.741 48.0257 mo
162.741 47.2256 li
163.541 47.2256 li
163.541 48.0257 li
162.741 48.0257 li
162.741 45.9456 mo
162.741 40.8257 li
163.541 40.8257 li
163.541 45.9456 li
162.741 45.9456 li
162.741 39.5456 mo
162.741 38.7457 li
163.541 38.7457 li
163.541 39.5456 li
162.741 39.5456 li
162.741 37.4657 mo
162.741 32.3456 li
163.541 32.3456 li
163.541 37.4657 li
162.741 37.4657 li
162.741 31.0657 mo
162.741 30.2657 li
163.541 30.2657 li
163.541 31.0657 li
162.741 31.0657 li
162.741 28.9856 mo
162.741 23.8657 li
163.541 23.8657 li
163.541 28.9856 li
162.741 28.9856 li
162.741 22.5857 mo
162.741 21.7857 li
163.541 21.7857 li
163.541 22.5857 li
162.741 22.5857 li
162.741 20.5057 mo
162.741 15.3857 li
163.541 15.3857 li
163.541 20.5057 li
162.741 20.5057 li
162.741 14.1058 mo
162.741 13.3057 li
163.541 13.3057 li
163.541 14.1058 li
162.741 14.1058 li
162.741 12.0257 mo
162.741 6.90577 li
163.541 6.90577 li
163.541 12.0257 li
162.741 12.0257 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
163.141 257.945 mo
163.141 261.445 li
f
163.141 257.945 mo
163.141 261.445 li
@
160.153 269.711 mo
160.764 269.841 161.245 270.115 161.583 270.53 cv
161.921 270.947 162.103 271.466 162.103 272.064 cv
162.103 273 161.778 273.728 161.141 274.236 cv
160.491 274.742 159.581 274.99 158.398 274.99 cv
157.995 274.99 157.579 274.951 157.163 274.872 cv
156.747 274.807 156.305 274.69 155.863 274.534 cv
155.863 273.299 li
156.214 273.508 156.604 273.663 157.033 273.767 cv
157.449 273.871 157.891 273.923 158.359 273.923 cv
159.165 273.923 159.776 273.767 160.192 273.456 cv
160.608 273.143 160.829 272.676 160.829 272.064 cv
160.829 271.518 160.634 271.077 160.244 270.764 cv
159.854 270.452 159.308 270.284 158.606 270.284 cv
157.501 270.284 li
157.501 269.23 li
158.658 269.23 li
159.282 269.23 159.763 269.113 160.101 268.853 cv
160.439 268.607 160.608 268.242 160.608 267.762 cv
160.608 267.28 160.426 266.904 160.088 266.643 cv
159.737 266.383 159.243 266.254 158.606 266.254 cv
158.255 266.254 157.878 266.292 157.475 266.37 cv
157.072 266.448 156.63 266.565 156.149 266.721 cv
156.149 265.577 li
156.63 265.448 157.085 265.344 157.514 265.279 cv
157.93 265.214 158.333 265.174 158.723 265.174 cv
159.685 265.174 160.452 265.396 161.024 265.837 cv
161.596 266.279 161.882 266.878 161.882 267.632 cv
161.882 268.151 161.726 268.594 161.427 268.957 cv
161.128 269.322 160.699 269.581 160.153 269.711 cv
f
167.277 266.189 mo
166.614 266.189 166.12 266.513 165.782 267.163 cv
165.444 267.814 165.288 268.788 165.288 270.089 cv
165.288 271.388 165.444 272.363 165.782 273.013 cv
166.12 273.663 166.614 273.988 167.277 273.988 cv
167.94 273.988 168.434 273.663 168.772 273.013 cv
169.097 272.363 169.266 271.388 169.266 270.089 cv
169.266 268.788 169.097 267.814 168.772 267.163 cv
168.434 266.513 167.94 266.189 167.277 266.189 cv
167.277 265.174 mo
168.33 265.174 169.136 265.603 169.708 266.435 cv
170.267 267.28 170.553 268.503 170.553 270.089 cv
170.553 271.688 170.267 272.909 169.708 273.741 cv
169.136 274.573 168.33 274.99 167.277 274.99 cv
166.211 274.99 165.392 274.573 164.833 273.741 cv
164.274 272.909 164.001 271.688 164.001 270.089 cv
164.001 268.503 164.274 267.28 164.833 266.435 cv
165.392 265.603 166.211 265.174 167.277 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
198.453 257.945 mo
198.453 252.825 li
199.253 252.825 li
199.253 257.945 li
198.453 257.945 li
198.453 251.546 mo
198.453 250.746 li
199.253 250.746 li
199.253 251.546 li
198.453 251.546 li
198.453 249.465 mo
198.453 244.345 li
199.253 244.345 li
199.253 249.465 li
198.453 249.465 li
198.453 243.066 mo
198.453 242.265 li
199.253 242.265 li
199.253 243.066 li
198.453 243.066 li
198.453 240.986 mo
198.453 235.866 li
199.253 235.866 li
199.253 240.986 li
198.453 240.986 li
198.453 234.585 mo
198.453 233.785 li
199.253 233.785 li
199.253 234.585 li
198.453 234.585 li
198.453 232.506 mo
198.453 227.385 li
199.253 227.385 li
199.253 232.506 li
198.453 232.506 li
198.453 226.105 mo
198.453 225.306 li
199.253 225.306 li
199.253 226.105 li
198.453 226.105 li
198.453 224.025 mo
198.453 218.905 li
199.253 218.905 li
199.253 224.025 li
198.453 224.025 li
198.453 217.626 mo
198.453 216.826 li
199.253 216.826 li
199.253 217.626 li
198.453 217.626 li
198.453 215.545 mo
198.453 210.426 li
199.253 210.426 li
199.253 215.545 li
198.453 215.545 li
198.453 209.145 mo
198.453 208.345 li
199.253 208.345 li
199.253 209.145 li
198.453 209.145 li
198.453 207.066 mo
198.453 201.946 li
199.253 201.946 li
199.253 207.066 li
198.453 207.066 li
198.453 200.665 mo
198.453 199.866 li
199.253 199.866 li
199.253 200.665 li
198.453 200.665 li
198.453 198.586 mo
198.453 193.465 li
199.253 193.465 li
199.253 198.586 li
198.453 198.586 li
198.453 192.186 mo
198.453 191.386 li
199.253 191.386 li
199.253 192.186 li
198.453 192.186 li
198.453 190.105 mo
198.453 184.986 li
199.253 184.986 li
199.253 190.105 li
198.453 190.105 li
198.453 183.706 mo
198.453 182.905 li
199.253 182.905 li
199.253 183.706 li
198.453 183.706 li
198.453 181.625 mo
198.453 176.506 li
199.253 176.506 li
199.253 181.625 li
198.453 181.625 li
198.453 175.225 mo
198.453 174.425 li
199.253 174.425 li
199.253 175.225 li
198.453 175.225 li
198.453 173.146 mo
198.453 168.025 li
199.253 168.025 li
199.253 173.146 li
198.453 173.146 li
198.453 166.745 mo
198.453 165.946 li
199.253 165.946 li
199.253 166.745 li
198.453 166.745 li
198.453 164.665 mo
198.453 159.545 li
199.253 159.545 li
199.253 164.665 li
198.453 164.665 li
198.453 158.265 mo
198.453 157.465 li
199.253 157.465 li
199.253 158.265 li
198.453 158.265 li
198.453 156.185 mo
198.453 151.065 li
199.253 151.065 li
199.253 156.185 li
198.453 156.185 li
198.453 149.786 mo
198.453 148.985 li
199.253 148.985 li
199.253 149.786 li
198.453 149.786 li
198.453 147.705 mo
198.453 142.586 li
199.253 142.586 li
199.253 147.705 li
198.453 147.705 li
198.453 141.305 mo
198.453 140.505 li
199.253 140.505 li
199.253 141.305 li
198.453 141.305 li
198.453 139.226 mo
198.453 134.105 li
199.253 134.105 li
199.253 139.226 li
198.453 139.226 li
198.453 132.825 mo
198.453 132.026 li
199.253 132.026 li
199.253 132.825 li
198.453 132.825 li
198.453 130.745 mo
198.453 125.625 li
199.253 125.625 li
199.253 130.745 li
198.453 130.745 li
198.453 124.346 mo
198.453 123.545 li
199.253 123.545 li
199.253 124.346 li
198.453 124.346 li
198.453 122.265 mo
198.453 117.146 li
199.253 117.146 li
199.253 122.265 li
198.453 122.265 li
198.453 115.865 mo
198.453 115.066 li
199.253 115.066 li
199.253 115.865 li
198.453 115.865 li
198.453 113.786 mo
198.453 108.665 li
199.253 108.665 li
199.253 113.786 li
198.453 113.786 li
198.453 107.386 mo
198.453 106.586 li
199.253 106.586 li
199.253 107.386 li
198.453 107.386 li
198.453 105.305 mo
198.453 100.186 li
199.253 100.186 li
199.253 105.305 li
198.453 105.305 li
198.453 98.9055 mo
198.453 98.1055 li
199.253 98.1055 li
199.253 98.9055 li
198.453 98.9055 li
198.453 96.8256 mo
198.453 91.7055 li
199.253 91.7055 li
199.253 96.8256 li
198.453 96.8256 li
198.453 90.4255 mo
198.453 89.6256 li
199.253 89.6256 li
199.253 90.4255 li
198.453 90.4255 li
198.453 88.3455 mo
198.453 83.2256 li
199.253 83.2256 li
199.253 88.3455 li
198.453 88.3455 li
198.453 81.9456 mo
198.453 81.1455 li
199.253 81.1455 li
199.253 81.9456 li
198.453 81.9456 li
198.453 79.8656 mo
198.453 74.7456 li
199.253 74.7456 li
199.253 79.8656 li
198.453 79.8656 li
198.453 73.4655 mo
198.453 72.6656 li
199.253 72.6656 li
199.253 73.4655 li
198.453 73.4655 li
198.453 71.3856 mo
198.453 66.2655 li
199.253 66.2655 li
199.253 71.3856 li
198.453 71.3856 li
198.453 64.9856 mo
198.453 64.1856 li
199.253 64.1856 li
199.253 64.9856 li
198.453 64.9856 li
198.453 62.9057 mo
198.453 57.7856 li
199.253 57.7856 li
199.253 62.9057 li
198.453 62.9057 li
198.453 56.5056 mo
198.453 55.7057 li
199.253 55.7057 li
199.253 56.5056 li
198.453 56.5056 li
198.453 54.4256 mo
198.453 49.3056 li
199.253 49.3056 li
199.253 54.4256 li
198.453 54.4256 li
198.453 48.0257 mo
198.453 47.2256 li
199.253 47.2256 li
199.253 48.0257 li
198.453 48.0257 li
198.453 45.9456 mo
198.453 40.8257 li
199.253 40.8257 li
199.253 45.9456 li
198.453 45.9456 li
198.453 39.5456 mo
198.453 38.7457 li
199.253 38.7457 li
199.253 39.5456 li
198.453 39.5456 li
198.453 37.4657 mo
198.453 32.3456 li
199.253 32.3456 li
199.253 37.4657 li
198.453 37.4657 li
198.453 31.0657 mo
198.453 30.2657 li
199.253 30.2657 li
199.253 31.0657 li
198.453 31.0657 li
198.453 28.9856 mo
198.453 23.8657 li
199.253 23.8657 li
199.253 28.9856 li
198.453 28.9856 li
198.453 22.5857 mo
198.453 21.7857 li
199.253 21.7857 li
199.253 22.5857 li
198.453 22.5857 li
198.453 20.5057 mo
198.453 15.3857 li
199.253 15.3857 li
199.253 20.5057 li
198.453 20.5057 li
198.453 14.1058 mo
198.453 13.3057 li
199.253 13.3057 li
199.253 14.1058 li
198.453 14.1058 li
198.453 12.0257 mo
198.453 6.90577 li
199.253 6.90577 li
199.253 12.0257 li
198.453 12.0257 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
198.853 257.945 mo
198.853 261.445 li
f
198.853 257.945 mo
198.853 261.445 li
@
195.501 266.461 mo
192.264 271.518 li
195.501 271.518 li
195.501 266.461 li
195.163 265.344 mo
196.775 265.344 li
196.775 271.518 li
198.127 271.518 li
198.127 272.585 li
196.775 272.585 li
196.775 274.82 li
195.501 274.82 li
195.501 272.585 li
191.224 272.585 li
191.224 271.349 li
195.163 265.344 li
f
202.989 266.189 mo
202.326 266.189 201.832 266.513 201.494 267.163 cv
201.156 267.814 201 268.788 201 270.089 cv
201 271.388 201.156 272.363 201.494 273.013 cv
201.832 273.663 202.326 273.988 202.989 273.988 cv
203.652 273.988 204.146 273.663 204.484 273.013 cv
204.809 272.363 204.978 271.388 204.978 270.089 cv
204.978 268.788 204.809 267.814 204.484 267.163 cv
204.146 266.513 203.652 266.189 202.989 266.189 cv
202.989 265.174 mo
204.042 265.174 204.848 265.603 205.42 266.435 cv
205.979 267.28 206.265 268.503 206.265 270.089 cv
206.265 271.688 205.979 272.909 205.42 273.741 cv
204.848 274.573 204.042 274.99 202.989 274.99 cv
201.923 274.99 201.104 274.573 200.545 273.741 cv
199.986 272.909 199.713 271.688 199.713 270.089 cv
199.713 268.503 199.986 267.28 200.545 266.435 cv
201.104 265.603 201.923 265.174 202.989 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
234.565 257.945 mo
234.565 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
234.565 257.945 mo
234.565 261.445 li
f
234.565 257.945 mo
234.565 261.445 li
@
227.703 265.344 mo
232.734 265.344 li
232.734 266.422 li
228.873 266.422 li
228.873 268.749 li
229.055 268.685 229.25 268.633 229.432 268.607 cv
229.614 268.581 229.809 268.555 229.991 268.555 cv
231.044 268.555 231.876 268.853 232.5 269.426 cv
233.124 270.01 233.436 270.79 233.436 271.779 cv
233.436 272.805 233.111 273.599 232.474 274.158 cv
231.837 274.716 230.94 274.99 229.796 274.99 cv
229.393 274.99 228.99 274.951 228.574 274.898 cv
228.158 274.833 227.742 274.742 227.3 274.599 cv
227.3 273.313 li
227.677 273.521 228.067 273.676 228.483 273.78 cv
228.886 273.884 229.315 273.923 229.77 273.923 cv
230.498 273.923 231.083 273.741 231.512 273.352 cv
231.928 272.961 232.149 272.441 232.149 271.779 cv
232.149 271.129 231.928 270.608 231.512 270.219 cv
231.083 269.828 230.498 269.633 229.77 269.633 cv
229.432 269.633 229.081 269.672 228.743 269.75 cv
228.405 269.828 228.054 269.945 227.703 270.102 cv
227.703 265.344 li
f
238.701 266.189 mo
238.038 266.189 237.544 266.513 237.206 267.163 cv
236.868 267.814 236.712 268.788 236.712 270.089 cv
236.712 271.388 236.868 272.363 237.206 273.013 cv
237.544 273.663 238.038 273.988 238.701 273.988 cv
239.364 273.988 239.858 273.663 240.196 273.013 cv
240.521 272.363 240.69 271.388 240.69 270.089 cv
240.69 268.788 240.521 267.814 240.196 267.163 cv
239.858 266.513 239.364 266.189 238.701 266.189 cv
238.701 265.174 mo
239.754 265.174 240.56 265.603 241.132 266.435 cv
241.691 267.28 241.977 268.503 241.977 270.089 cv
241.977 271.688 241.691 272.909 241.132 273.741 cv
240.56 274.573 239.754 274.99 238.701 274.99 cv
237.635 274.99 236.816 274.573 236.257 273.741 cv
235.698 272.909 235.425 271.688 235.425 270.089 cv
235.425 268.503 235.698 267.28 236.257 266.435 cv
236.816 265.603 237.635 265.174 238.701 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
270.277 257.945 mo
270.277 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
270.277 257.945 mo
270.277 261.445 li
f
270.277 257.945 mo
270.277 261.445 li
@
266.301 269.568 mo
265.729 269.568 265.274 269.776 264.936 270.167 cv
264.598 270.556 264.429 271.103 264.429 271.779 cv
264.429 272.467 264.598 273.013 264.936 273.404 cv
265.274 273.793 265.729 273.988 266.301 273.988 cv
266.873 273.988 267.328 273.793 267.666 273.404 cv
268.004 273.013 268.173 272.467 268.173 271.779 cv
268.173 271.103 268.004 270.556 267.666 270.167 cv
267.328 269.776 266.873 269.568 266.301 269.568 cv
268.849 265.551 mo
268.849 266.721 li
268.524 266.565 268.199 266.448 267.874 266.37 cv
267.536 266.292 267.211 266.254 266.899 266.254 cv
266.041 266.254 265.391 266.539 264.949 267.111 cv
264.507 267.684 264.247 268.555 264.195 269.698 cv
264.442 269.335 264.754 269.048 265.131 268.853 cv
265.508 268.659 265.924 268.555 266.379 268.555 cv
267.328 268.555 268.082 268.853 268.628 269.426 cv
269.174 269.997 269.46 270.79 269.46 271.779 cv
269.46 272.754 269.161 273.534 268.589 274.118 cv
268.017 274.703 267.25 274.99 266.301 274.99 cv
265.209 274.99 264.364 274.573 263.792 273.741 cv
263.207 272.909 262.921 271.688 262.921 270.089 cv
262.921 268.594 263.272 267.397 263.987 266.513 cv
264.689 265.629 265.651 265.174 266.847 265.174 cv
267.159 265.174 267.484 265.214 267.822 265.266 cv
268.147 265.331 268.485 265.422 268.849 265.551 cv
f
274.413 266.189 mo
273.75 266.189 273.256 266.513 272.918 267.163 cv
272.58 267.814 272.424 268.788 272.424 270.089 cv
272.424 271.388 272.58 272.363 272.918 273.013 cv
273.256 273.663 273.75 273.988 274.413 273.988 cv
275.076 273.988 275.57 273.663 275.908 273.013 cv
276.233 272.363 276.402 271.388 276.402 270.089 cv
276.402 268.788 276.233 267.814 275.908 267.163 cv
275.57 266.513 275.076 266.189 274.413 266.189 cv
274.413 265.174 mo
275.466 265.174 276.272 265.603 276.844 266.435 cv
277.403 267.28 277.689 268.503 277.689 270.089 cv
277.689 271.688 277.403 272.909 276.844 273.741 cv
276.272 274.573 275.466 274.99 274.413 274.99 cv
273.347 274.99 272.528 274.573 271.969 273.741 cv
271.41 272.909 271.137 271.688 271.137 270.089 cv
271.137 268.503 271.41 267.28 271.969 266.435 cv
272.528 265.603 273.347 265.174 274.413 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
305.989 257.945 mo
305.989 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
305.989 257.945 mo
305.989 261.445 li
f
305.989 257.945 mo
305.989 261.445 li
@
298.789 265.344 mo
304.886 265.344 li
304.886 265.889 li
301.441 274.82 li
300.102 274.82 li
303.339 266.422 li
298.789 266.422 li
298.789 265.344 li
f
310.125 266.189 mo
309.462 266.189 308.968 266.513 308.63 267.163 cv
308.292 267.814 308.136 268.788 308.136 270.089 cv
308.136 271.388 308.292 272.363 308.63 273.013 cv
308.968 273.663 309.462 273.988 310.125 273.988 cv
310.788 273.988 311.282 273.663 311.62 273.013 cv
311.945 272.363 312.114 271.388 312.114 270.089 cv
312.114 268.788 311.945 267.814 311.62 267.163 cv
311.282 266.513 310.788 266.189 310.125 266.189 cv
310.125 265.174 mo
311.178 265.174 311.984 265.603 312.556 266.435 cv
313.115 267.28 313.401 268.503 313.401 270.089 cv
313.401 271.688 313.115 272.909 312.556 273.741 cv
311.984 274.573 311.178 274.99 310.125 274.99 cv
309.059 274.99 308.24 274.573 307.681 273.741 cv
307.122 272.909 306.849 271.688 306.849 270.089 cv
306.849 268.503 307.122 267.28 307.681 266.435 cv
308.24 265.603 309.059 265.174 310.125 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
341.701 257.945 mo
341.701 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
341.701 257.945 mo
341.701 261.445 li
f
341.701 257.945 mo
341.701 261.445 li
@
337.569 270.323 mo
336.958 270.323 336.477 270.491 336.126 270.816 cv
335.775 271.142 335.606 271.583 335.606 272.155 cv
335.606 272.728 335.775 273.182 336.126 273.508 cv
336.477 273.832 336.958 273.988 337.569 273.988 cv
338.167 273.988 338.648 273.832 338.999 273.495 cv
339.35 273.169 339.532 272.728 339.532 272.155 cv
339.532 271.583 339.35 271.142 339.012 270.816 cv
338.661 270.491 338.18 270.323 337.569 270.323 cv
336.282 269.776 mo
335.736 269.646 335.307 269.387 334.995 269.009 cv
334.683 268.633 334.54 268.177 334.54 267.632 cv
334.54 266.878 334.8 266.279 335.346 265.837 cv
335.879 265.396 336.62 265.174 337.569 265.174 cv
338.505 265.174 339.246 265.396 339.792 265.837 cv
340.325 266.279 340.598 266.878 340.598 267.632 cv
340.598 268.177 340.442 268.633 340.13 269.009 cv
339.818 269.387 339.402 269.646 338.856 269.776 cv
339.467 269.919 339.948 270.206 340.299 270.621 cv
340.637 271.038 340.819 271.557 340.819 272.155 cv
340.819 273.078 340.533 273.78 339.974 274.262 cv
339.402 274.755 338.609 274.99 337.569 274.99 cv
336.516 274.99 335.71 274.755 335.151 274.262 cv
334.592 273.78 334.319 273.078 334.319 272.155 cv
334.319 271.557 334.488 271.038 334.839 270.621 cv
335.177 270.206 335.658 269.919 336.282 269.776 cv
335.814 267.749 mo
335.814 268.242 335.957 268.633 336.269 268.905 cv
336.581 269.178 337.01 269.309 337.569 269.309 cv
338.115 269.309 338.544 269.178 338.856 268.905 cv
339.168 268.633 339.324 268.242 339.324 267.749 cv
339.324 267.254 339.168 266.878 338.856 266.604 cv
338.544 266.331 338.115 266.189 337.569 266.189 cv
337.01 266.189 336.581 266.331 336.269 266.604 cv
335.957 266.878 335.814 267.254 335.814 267.749 cv
f
345.837 266.189 mo
345.174 266.189 344.68 266.513 344.342 267.163 cv
344.004 267.814 343.848 268.788 343.848 270.089 cv
343.848 271.388 344.004 272.363 344.342 273.013 cv
344.68 273.663 345.174 273.988 345.837 273.988 cv
346.5 273.988 346.994 273.663 347.332 273.013 cv
347.657 272.363 347.826 271.388 347.826 270.089 cv
347.826 268.788 347.657 267.814 347.332 267.163 cv
346.994 266.513 346.5 266.189 345.837 266.189 cv
345.837 265.174 mo
346.89 265.174 347.696 265.603 348.268 266.435 cv
348.827 267.28 349.113 268.503 349.113 270.089 cv
349.113 271.688 348.827 272.909 348.268 273.741 cv
347.696 274.573 346.89 274.99 345.837 274.99 cv
344.771 274.99 343.952 274.573 343.393 273.741 cv
342.834 272.909 342.561 271.688 342.561 270.089 cv
342.561 268.503 342.834 267.28 343.393 266.435 cv
343.952 265.603 344.771 265.174 345.837 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
377.413 257.945 mo
377.413 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
377.413 257.945 mo
377.413 261.445 li
f
377.413 257.945 mo
377.413 261.445 li
@
370.577 274.625 mo
370.577 273.456 li
370.889 273.611 371.214 273.728 371.552 273.806 cv
371.877 273.884 372.202 273.923 372.527 273.923 cv
373.359 273.923 374.009 273.65 374.451 273.078 cv
374.893 272.507 375.153 271.648 375.231 270.478 cv
374.971 270.842 374.659 271.129 374.295 271.323 cv
373.918 271.518 373.502 271.609 373.047 271.609 cv
372.085 271.609 371.331 271.323 370.785 270.751 cv
370.239 270.18 369.966 269.4 369.966 268.398 cv
369.966 267.436 370.252 266.656 370.824 266.059 cv
371.396 265.474 372.163 265.174 373.125 265.174 cv
374.217 265.174 375.062 265.603 375.634 266.435 cv
376.206 267.28 376.505 268.503 376.505 270.089 cv
376.505 271.596 376.141 272.78 375.439 273.663 cv
374.724 274.547 373.775 274.99 372.579 274.99 cv
372.254 274.99 371.929 274.951 371.604 274.898 cv
371.266 274.846 370.928 274.755 370.577 274.625 cv
373.125 270.608 mo
373.697 270.608 374.152 270.413 374.49 270.023 cv
374.828 269.633 374.997 269.087 374.997 268.398 cv
374.997 267.723 374.828 267.176 374.49 266.786 cv
374.152 266.396 373.697 266.189 373.125 266.189 cv
372.553 266.189 372.098 266.396 371.76 266.786 cv
371.422 267.176 371.253 267.723 371.253 268.398 cv
371.253 269.087 371.422 269.633 371.76 270.023 cv
372.098 270.413 372.553 270.608 373.125 270.608 cv
f
381.549 266.189 mo
380.886 266.189 380.392 266.513 380.054 267.163 cv
379.716 267.814 379.56 268.788 379.56 270.089 cv
379.56 271.388 379.716 272.363 380.054 273.013 cv
380.392 273.663 380.886 273.988 381.549 273.988 cv
382.212 273.988 382.706 273.663 383.044 273.013 cv
383.369 272.363 383.538 271.388 383.538 270.089 cv
383.538 268.788 383.369 267.814 383.044 267.163 cv
382.706 266.513 382.212 266.189 381.549 266.189 cv
381.549 265.174 mo
382.602 265.174 383.408 265.603 383.98 266.435 cv
384.539 267.28 384.825 268.503 384.825 270.089 cv
384.825 271.688 384.539 272.909 383.98 273.741 cv
383.408 274.573 382.602 274.99 381.549 274.99 cv
380.483 274.99 379.664 274.573 379.105 273.741 cv
378.546 272.909 378.273 271.688 378.273 270.089 cv
378.273 268.503 378.546 267.28 379.105 266.435 cv
379.664 265.603 380.483 265.174 381.549 265.174 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
413.125 257.945 mo
413.125 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
413.125 257.945 mo
413.125 261.445 li
f
413.125 257.945 mo
413.125 261.445 li
@
402.338 273.741 mo
404.431 273.741 li
404.431 266.513 li
402.156 266.969 li
402.156 265.798 li
404.418 265.344 li
405.705 265.344 li
405.705 273.741 li
407.798 273.741 li
407.798 274.82 li
402.338 274.82 li
402.338 273.741 li
f
413.128 266.189 mo
412.465 266.189 411.971 266.513 411.633 267.163 cv
411.295 267.814 411.139 268.788 411.139 270.089 cv
411.139 271.388 411.295 272.363 411.633 273.013 cv
411.971 273.663 412.465 273.988 413.128 273.988 cv
413.791 273.988 414.285 273.663 414.623 273.013 cv
414.948 272.363 415.117 271.388 415.117 270.089 cv
415.117 268.788 414.948 267.814 414.623 267.163 cv
414.285 266.513 413.791 266.189 413.128 266.189 cv
413.128 265.174 mo
414.181 265.174 414.987 265.603 415.559 266.435 cv
416.118 267.28 416.404 268.503 416.404 270.089 cv
416.404 271.688 416.118 272.909 415.559 273.741 cv
414.987 274.573 414.181 274.99 413.128 274.99 cv
412.062 274.99 411.243 274.573 410.684 273.741 cv
410.125 272.909 409.852 271.688 409.852 270.089 cv
409.852 268.503 410.125 267.28 410.684 266.435 cv
411.243 265.603 412.062 265.174 413.128 265.174 cv
f
421.396 266.189 mo
420.733 266.189 420.239 266.513 419.901 267.163 cv
419.563 267.814 419.407 268.788 419.407 270.089 cv
419.407 271.388 419.563 272.363 419.901 273.013 cv
420.239 273.663 420.733 273.988 421.396 273.988 cv
422.059 273.988 422.553 273.663 422.891 273.013 cv
423.216 272.363 423.385 271.388 423.385 270.089 cv
423.385 268.788 423.216 267.814 422.891 267.163 cv
422.553 266.513 422.059 266.189 421.396 266.189 cv
421.396 265.174 mo
422.449 265.174 423.255 265.603 423.827 266.435 cv
424.386 267.28 424.672 268.503 424.672 270.089 cv
424.672 271.688 424.386 272.909 423.827 273.741 cv
423.255 274.573 422.449 274.99 421.396 274.99 cv
420.33 274.99 419.511 274.573 418.952 273.741 cv
418.393 272.909 418.12 271.688 418.12 270.089 cv
418.12 268.503 418.393 267.28 418.952 266.435 cv
419.511 265.603 420.33 265.174 421.396 265.174 cv
f
200.441 281.922 mo
208.449 281.922 li
208.449 283.001 li
205.083 283.001 li
205.083 291.399 li
203.796 291.399 li
203.796 283.001 li
200.441 283.001 li
200.441 281.922 li
f
213.753 285.38 mo
213.623 285.302 213.48 285.25 213.324 285.211 cv
213.168 285.185 212.999 285.159 212.817 285.159 cv
212.154 285.159 211.647 285.38 211.296 285.809 cv
210.932 286.238 210.763 286.849 210.763 287.655 cv
210.763 291.399 li
209.593 291.399 li
209.593 284.288 li
210.763 284.288 li
210.763 285.393 li
210.997 284.964 211.322 284.639 211.712 284.431 cv
212.102 284.223 212.583 284.119 213.155 284.119 cv
213.233 284.119 213.324 284.132 213.428 284.132 cv
213.519 284.145 213.623 284.158 213.753 284.184 cv
213.753 285.38 li
f
218.212 287.824 mo
217.263 287.824 216.613 287.941 216.249 288.149 cv
215.885 288.37 215.703 288.734 215.703 289.254 cv
215.703 289.67 215.833 290.008 216.106 290.242 cv
216.379 290.489 216.756 290.606 217.224 290.606 cv
217.874 290.606 218.394 290.385 218.784 289.917 cv
219.174 289.462 219.369 288.851 219.369 288.084 cv
219.369 287.824 li
218.212 287.824 li
220.539 287.343 mo
220.539 291.399 li
219.369 291.399 li
219.369 290.32 li
219.096 290.762 218.758 291.074 218.368 291.269 cv
217.978 291.464 217.484 291.568 216.912 291.568 cv
216.184 291.568 215.599 291.373 215.17 290.97 cv
214.741 290.567 214.533 290.021 214.533 289.332 cv
214.533 288.539 214.793 287.941 215.339 287.525 cv
215.872 287.122 216.665 286.914 217.731 286.914 cv
219.369 286.914 li
219.369 286.797 li
219.369 286.264 219.187 285.848 218.836 285.549 cv
218.485 285.263 217.991 285.107 217.354 285.107 cv
216.938 285.107 216.548 285.159 216.158 285.263 cv
215.768 285.367 215.404 285.51 215.053 285.692 cv
215.053 284.613 li
215.469 284.457 215.885 284.327 216.288 284.249 cv
216.691 284.171 217.081 284.119 217.471 284.119 cv
218.498 284.119 219.265 284.392 219.772 284.925 cv
220.279 285.458 220.539 286.264 220.539 287.343 cv
f
222.944 284.288 mo
224.114 284.288 li
224.114 291.399 li
222.944 291.399 li
222.944 284.288 li
222.944 281.519 mo
224.114 281.519 li
224.114 283.001 li
222.944 283.001 li
222.944 281.519 li
f
232.473 287.109 mo
232.473 291.399 li
231.303 291.399 li
231.303 287.148 li
231.303 286.472 231.16 285.978 230.9 285.64 cv
230.64 285.302 230.25 285.133 229.73 285.133 cv
229.093 285.133 228.599 285.341 228.235 285.744 cv
227.871 286.147 227.689 286.693 227.689 287.382 cv
227.689 291.399 li
226.519 291.399 li
226.519 284.288 li
227.689 284.288 li
227.689 285.393 li
227.962 284.977 228.287 284.652 228.677 284.444 cv
229.054 284.236 229.496 284.119 229.99 284.119 cv
230.796 284.119 231.42 284.379 231.836 284.886 cv
232.252 285.393 232.473 286.134 232.473 287.109 cv
f
234.8 284.288 mo
235.97 284.288 li
235.97 291.399 li
234.8 291.399 li
234.8 284.288 li
234.8 281.519 mo
235.97 281.519 li
235.97 283.001 li
234.8 283.001 li
234.8 281.519 li
f
244.329 287.109 mo
244.329 291.399 li
243.159 291.399 li
243.159 287.148 li
243.159 286.472 243.016 285.978 242.756 285.64 cv
242.496 285.302 242.106 285.133 241.586 285.133 cv
240.949 285.133 240.455 285.341 240.091 285.744 cv
239.727 286.147 239.545 286.693 239.545 287.382 cv
239.545 291.399 li
238.375 291.399 li
238.375 284.288 li
239.545 284.288 li
239.545 285.393 li
239.818 284.977 240.143 284.652 240.533 284.444 cv
240.91 284.236 241.352 284.119 241.846 284.119 cv
242.652 284.119 243.276 284.379 243.692 284.886 cv
244.108 285.393 244.329 286.134 244.329 287.109 cv
f
251.336 287.759 mo
251.336 286.927 251.154 286.264 250.816 285.796 cv
250.465 285.328 249.971 285.094 249.347 285.094 cv
248.723 285.094 248.229 285.328 247.878 285.796 cv
247.527 286.264 247.358 286.927 247.358 287.759 cv
247.358 288.604 247.527 289.254 247.878 289.722 cv
248.229 290.19 248.723 290.424 249.347 290.424 cv
249.971 290.424 250.465 290.19 250.816 289.722 cv
251.154 289.254 251.336 288.604 251.336 287.759 cv
252.507 290.515 mo
252.507 291.711 252.233 292.608 251.701 293.206 cv
251.154 293.791 250.335 294.09 249.23 294.09 cv
248.814 294.09 248.438 294.051 248.073 293.999 cv
247.709 293.934 247.345 293.843 247.007 293.713 cv
247.007 292.582 li
247.345 292.764 247.683 292.894 248.021 292.985 cv
248.359 293.076 248.697 293.128 249.048 293.128 cv
249.802 293.128 250.374 292.92 250.764 292.53 cv
251.141 292.127 251.336 291.529 251.336 290.723 cv
251.336 290.151 li
251.089 290.567 250.777 290.879 250.4 291.087 cv
250.023 291.295 249.581 291.399 249.061 291.399 cv
248.177 291.399 247.475 291.074 246.942 290.411 cv
246.41 289.748 246.149 288.864 246.149 287.759 cv
246.149 286.667 246.41 285.783 246.942 285.12 cv
247.475 284.457 248.177 284.119 249.061 284.119 cv
249.581 284.119 250.023 284.223 250.4 284.431 cv
250.777 284.639 251.089 284.951 251.336 285.367 cv
251.336 284.288 li
252.507 284.288 li
252.507 290.515 li
f
259.097 281.922 mo
265.09 281.922 li
265.09 283.001 li
260.384 283.001 li
260.384 285.809 li
264.895 285.809 li
264.895 286.888 li
260.384 286.888 li
260.384 290.32 li
265.207 290.32 li
265.207 291.399 li
259.097 291.399 li
259.097 281.922 li
f
268.392 290.333 mo
268.392 294.09 li
267.222 294.09 li
267.222 284.288 li
268.392 284.288 li
268.392 285.367 li
268.626 284.951 268.938 284.639 269.315 284.431 cv
269.692 284.223 270.147 284.119 270.667 284.119 cv
271.525 284.119 272.227 284.47 272.773 285.146 cv
273.306 285.835 273.579 286.732 273.579 287.85 cv
273.579 288.968 273.306 289.878 272.773 290.554 cv
272.227 291.23 271.525 291.568 270.667 291.568 cv
270.147 291.568 269.692 291.464 269.315 291.269 cv
268.938 291.074 268.626 290.762 268.392 290.333 cv
272.37 287.85 mo
272.37 286.992 272.188 286.329 271.837 285.835 cv
271.473 285.341 270.992 285.094 270.381 285.094 cv
269.757 285.094 269.276 285.341 268.925 285.835 cv
268.561 286.329 268.392 286.992 268.392 287.85 cv
268.392 288.708 268.561 289.384 268.925 289.878 cv
269.276 290.372 269.757 290.606 270.381 290.606 cv
270.992 290.606 271.473 290.372 271.837 289.878 cv
272.188 289.384 272.37 288.708 272.37 287.85 cv
f
278.272 285.107 mo
277.648 285.107 277.154 285.354 276.79 285.848 cv
276.426 286.342 276.244 287.005 276.244 287.85 cv
276.244 288.708 276.413 289.371 276.777 289.865 cv
277.141 290.359 277.635 290.593 278.272 290.593 cv
278.896 290.593 279.39 290.359 279.754 289.865 cv
280.118 289.371 280.3 288.708 280.3 287.85 cv
280.3 287.018 280.118 286.342 279.754 285.848 cv
279.39 285.354 278.896 285.107 278.272 285.107 cv
278.272 284.119 mo
279.286 284.119 280.079 284.457 280.664 285.107 cv
281.236 285.77 281.535 286.68 281.535 287.85 cv
281.535 289.02 281.236 289.93 280.664 290.58 cv
280.079 291.243 279.286 291.568 278.272 291.568 cv
277.245 291.568 276.439 291.243 275.867 290.58 cv
275.295 289.93 275.009 289.02 275.009 287.85 cv
275.009 286.68 275.295 285.77 275.867 285.107 cv
276.439 284.457 277.245 284.119 278.272 284.119 cv
f
288.594 284.561 mo
288.594 285.653 li
288.256 285.471 287.931 285.341 287.593 285.25 cv
287.255 285.159 286.93 285.107 286.592 285.107 cv
285.838 285.107 285.24 285.354 284.824 285.835 cv
284.408 286.316 284.2 286.992 284.2 287.85 cv
284.2 288.721 284.408 289.397 284.824 289.878 cv
285.24 290.359 285.838 290.593 286.592 290.593 cv
286.93 290.593 287.255 290.554 287.593 290.463 cv
287.931 290.372 288.256 290.229 288.594 290.047 cv
288.594 291.126 li
288.256 291.282 287.918 291.399 287.58 291.464 cv
287.229 291.529 286.852 291.568 286.462 291.568 cv
285.396 291.568 284.538 291.243 283.914 290.567 cv
283.277 289.904 282.965 288.994 282.965 287.85 cv
282.965 286.693 283.277 285.783 283.914 285.12 cv
284.551 284.457 285.422 284.119 286.54 284.119 cv
286.904 284.119 287.255 284.158 287.593 284.236 cv
287.931 284.314 288.269 284.418 288.594 284.561 cv
f
296.537 287.109 mo
296.537 291.399 li
295.367 291.399 li
295.367 287.148 li
295.367 286.472 295.224 285.978 294.964 285.64 cv
294.704 285.302 294.314 285.133 293.794 285.133 cv
293.157 285.133 292.663 285.341 292.299 285.744 cv
291.935 286.147 291.753 286.693 291.753 287.382 cv
291.753 291.399 li
290.583 291.399 li
290.583 281.519 li
291.753 281.519 li
291.753 285.393 li
292.026 284.977 292.351 284.652 292.741 284.444 cv
293.118 284.236 293.56 284.119 294.054 284.119 cv
294.86 284.119 295.484 284.379 295.9 284.886 cv
296.316 285.393 296.537 286.134 296.537 287.109 cv
f
303.401 284.496 mo
303.401 285.601 li
303.063 285.445 302.725 285.315 302.374 285.224 cv
302.01 285.146 301.646 285.094 301.269 285.094 cv
300.684 285.094 300.242 285.185 299.956 285.367 cv
299.67 285.549 299.527 285.809 299.527 286.16 cv
299.527 286.433 299.631 286.641 299.839 286.797 cv
300.047 286.953 300.463 287.109 301.087 287.239 cv
301.49 287.33 li
302.322 287.512 302.907 287.772 303.258 288.084 cv
303.596 288.409 303.778 288.864 303.778 289.436 cv
303.778 290.099 303.518 290.619 302.998 290.996 cv
302.478 291.386 301.75 291.568 300.84 291.568 cv
300.45 291.568 300.06 291.529 299.644 291.464 cv
299.228 291.399 298.799 291.295 298.344 291.139 cv
298.344 289.93 li
298.773 290.164 299.202 290.333 299.618 290.437 cv
300.034 290.554 300.45 290.606 300.866 290.606 cv
301.412 290.606 301.841 290.515 302.14 290.333 cv
302.426 290.151 302.582 289.878 302.582 289.527 cv
302.582 289.215 302.465 288.968 302.257 288.799 cv
302.049 288.63 301.581 288.461 300.853 288.305 cv
300.45 288.214 li
299.722 288.058 299.189 287.824 298.877 287.512 cv
298.552 287.2 298.396 286.771 298.396 286.212 cv
298.396 285.549 298.63 285.029 299.098 284.665 cv
299.566 284.301 300.242 284.119 301.126 284.119 cv
301.555 284.119 301.958 284.158 302.348 284.223 cv
302.725 284.288 303.076 284.379 303.401 284.496 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 257.945 mo
430.981 257.945 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 257.945 mo
70.3606 257.945 li
f
73.8606 257.945 mo
70.3606 257.945 li
@
27.1757 261.804 mo
29.2687 261.804 li
29.2687 254.576 li
26.9937 255.031 li
26.9937 253.861 li
29.2557 253.406 li
30.5427 253.406 li
30.5427 261.804 li
32.6357 261.804 li
32.6357 262.883 li
27.1757 262.883 li
27.1757 261.804 li
f
37.9658 254.251 mo
37.3028 254.251 36.8088 254.576 36.4708 255.226 cv
36.1328 255.876 35.9768 256.851 35.9768 258.151 cv
35.9768 259.451 36.1328 260.426 36.4708 261.076 cv
36.8088 261.726 37.3028 262.051 37.9658 262.051 cv
38.6288 262.051 39.1228 261.726 39.4608 261.076 cv
39.7858 260.426 39.9548 259.451 39.9548 258.151 cv
39.9548 256.851 39.7858 255.876 39.4608 255.226 cv
39.1228 254.576 38.6288 254.251 37.9658 254.251 cv
37.9658 253.237 mo
39.0188 253.237 39.8248 253.666 40.3968 254.498 cv
40.9558 255.343 41.2418 256.565 41.2418 258.151 cv
41.2418 259.75 40.9558 260.972 40.3968 261.804 cv
39.8248 262.636 39.0188 263.052 37.9658 263.052 cv
36.8998 263.052 36.0808 262.636 35.5218 261.804 cv
34.9628 260.972 34.6898 259.75 34.6898 258.151 cv
34.6898 256.565 34.9628 255.343 35.5218 254.498 cv
36.0808 253.666 36.8998 253.237 37.9658 253.237 cv
f
43.4908 261.271 mo
44.8298 261.271 li
44.8298 262.883 li
43.4908 262.883 li
43.4908 261.271 li
f
50.3677 254.251 mo
49.7047 254.251 49.2107 254.576 48.8727 255.226 cv
48.5347 255.876 48.3787 256.851 48.3787 258.151 cv
48.3787 259.451 48.5347 260.426 48.8727 261.076 cv
49.2107 261.726 49.7047 262.051 50.3677 262.051 cv
51.0307 262.051 51.5247 261.726 51.8627 261.076 cv
52.1877 260.426 52.3567 259.451 52.3567 258.151 cv
52.3567 256.851 52.1877 255.876 51.8627 255.226 cv
51.5247 254.576 51.0307 254.251 50.3677 254.251 cv
50.3677 253.237 mo
51.4207 253.237 52.2267 253.666 52.7987 254.498 cv
53.3577 255.343 53.6437 256.565 53.6437 258.151 cv
53.6437 259.75 53.3577 260.972 52.7987 261.804 cv
52.2267 262.636 51.4207 263.052 50.3677 263.052 cv
49.3017 263.052 48.4827 262.636 47.9237 261.804 cv
47.3647 260.972 47.0917 259.75 47.0917 258.151 cv
47.0917 256.565 47.3647 255.343 47.9237 254.498 cv
48.4827 253.666 49.3017 253.237 50.3677 253.237 cv
f
63.9527 258.71 mo
63.5887 258.71 63.2897 258.866 63.0817 259.178 cv
62.8737 259.49 62.7697 259.932 62.7697 260.491 cv
62.7697 261.037 62.8737 261.479 63.0817 261.791 cv
63.2897 262.103 63.5887 262.259 63.9527 262.259 cv
64.3167 262.259 64.6027 262.103 64.8107 261.791 cv
65.0187 261.479 65.1227 261.037 65.1227 260.491 cv
65.1227 259.945 65.0187 259.503 64.8107 259.191 cv
64.6027 258.879 64.3167 258.71 63.9527 258.71 cv
63.9527 257.904 mo
64.6157 257.904 65.1487 258.138 65.5387 258.606 cv
65.9287 259.074 66.1367 259.711 66.1367 260.491 cv
66.1367 261.284 65.9287 261.908 65.5387 262.363 cv
65.1487 262.831 64.6157 263.052 63.9527 263.052 cv
63.2767 263.052 62.7307 262.831 62.3407 262.363 cv
61.9507 261.908 61.7557 261.284 61.7557 260.491 cv
61.7557 259.698 61.9507 259.074 62.3407 258.606 cv
62.7307 258.138 63.2767 257.904 63.9527 257.904 cv
57.4007 254.043 mo
57.0367 254.043 56.7507 254.212 56.5427 254.524 cv
56.3347 254.836 56.2307 255.265 56.2307 255.811 cv
56.2307 256.383 56.3347 256.812 56.5427 257.124 cv
56.7507 257.436 57.0367 257.592 57.4007 257.592 cv
57.7647 257.592 58.0637 257.436 58.2717 257.124 cv
58.4797 256.812 58.5837 256.383 58.5837 255.811 cv
58.5837 255.265 58.4667 254.836 58.2587 254.524 cv
58.0507 254.212 57.7647 254.043 57.4007 254.043 cv
63.1337 253.237 mo
64.1477 253.237 li
58.2197 263.052 li
57.2057 263.052 li
63.1337 253.237 li
57.4007 253.237 mo
58.0637 253.237 58.5967 253.471 58.9997 253.939 cv
59.3897 254.407 59.5977 255.031 59.5977 255.811 cv
59.5977 256.617 59.3897 257.241 58.9997 257.709 cv
58.6097 258.177 58.0767 258.398 57.4007 258.398 cv
56.7247 258.398 56.1917 258.177 55.8017 257.709 cv
55.4117 257.241 55.2167 256.617 55.2167 255.811 cv
55.2167 255.031 55.4117 254.407 55.8017 253.939 cv
56.1917 253.471 56.7247 253.237 57.4007 253.237 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 229.913 mo
430.981 229.913 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 229.913 mo
70.3606 229.913 li
f
73.8606 229.913 mo
70.3606 229.913 li
@
28.0597 233.772 mo
32.5317 233.772 li
32.5317 234.851 li
26.5127 234.851 li
26.5127 233.772 li
26.9937 233.278 27.6567 232.602 28.5017 231.744 cv
29.3337 230.899 29.8667 230.353 30.0877 230.106 cv
30.5037 229.651 30.7897 229.261 30.9457 228.936 cv
31.1017 228.624 31.1927 228.299 31.1927 227.987 cv
31.1927 227.493 31.0107 227.077 30.6597 226.765 cv
30.3088 226.453 29.8537 226.284 29.2817 226.284 cv
28.8787 226.284 28.4497 226.362 28.0077 226.492 cv
27.5658 226.635 27.0847 226.843 26.5777 227.129 cv
26.5777 225.829 li
27.0977 225.621 27.5787 225.465 28.0208 225.361 cv
28.4627 225.257 28.8787 225.205 29.2557 225.205 cv
30.2307 225.205 31.0107 225.452 31.5957 225.946 cv
32.1807 226.44 32.4798 227.09 32.4798 227.909 cv
32.4798 228.299 32.4017 228.676 32.2588 229.014 cv
32.1157 229.365 31.8557 229.781 31.4657 230.249 cv
31.3617 230.379 31.0238 230.73 30.4517 231.315 cv
29.8797 231.9 29.0868 232.719 28.0597 233.772 cv
f
37.9658 226.219 mo
37.3028 226.219 36.8088 226.544 36.4708 227.194 cv
36.1328 227.844 35.9768 228.819 35.9768 230.119 cv
35.9768 231.419 36.1328 232.394 36.4708 233.044 cv
36.8088 233.694 37.3028 234.019 37.9658 234.019 cv
38.6288 234.019 39.1228 233.694 39.4608 233.044 cv
39.7858 232.394 39.9548 231.419 39.9548 230.119 cv
39.9548 228.819 39.7858 227.844 39.4608 227.194 cv
39.1228 226.544 38.6288 226.219 37.9658 226.219 cv
37.9658 225.205 mo
39.0188 225.205 39.8248 225.634 40.3968 226.466 cv
40.9558 227.311 41.2418 228.533 41.2418 230.119 cv
41.2418 231.718 40.9558 232.94 40.3968 233.772 cv
39.8248 234.604 39.0188 235.02 37.9658 235.02 cv
36.8998 235.02 36.0808 234.604 35.5218 233.772 cv
34.9628 232.94 34.6898 231.718 34.6898 230.119 cv
34.6898 228.533 34.9628 227.311 35.5218 226.466 cv
36.0808 225.634 36.8998 225.205 37.9658 225.205 cv
f
43.4908 233.239 mo
44.8298 233.239 li
44.8298 234.851 li
43.4908 234.851 li
43.4908 233.239 li
f
50.3677 226.219 mo
49.7047 226.219 49.2107 226.544 48.8727 227.194 cv
48.5347 227.844 48.3787 228.819 48.3787 230.119 cv
48.3787 231.419 48.5347 232.394 48.8727 233.044 cv
49.2107 233.694 49.7047 234.019 50.3677 234.019 cv
51.0307 234.019 51.5247 233.694 51.8627 233.044 cv
52.1877 232.394 52.3567 231.419 52.3567 230.119 cv
52.3567 228.819 52.1877 227.844 51.8627 227.194 cv
51.5247 226.544 51.0307 226.219 50.3677 226.219 cv
50.3677 225.205 mo
51.4207 225.205 52.2267 225.634 52.7987 226.466 cv
53.3577 227.311 53.6437 228.533 53.6437 230.119 cv
53.6437 231.718 53.3577 232.94 52.7987 233.772 cv
52.2267 234.604 51.4207 235.02 50.3677 235.02 cv
49.3017 235.02 48.4827 234.604 47.9237 233.772 cv
47.3647 232.94 47.0917 231.718 47.0917 230.119 cv
47.0917 228.533 47.3647 227.311 47.9237 226.466 cv
48.4827 225.634 49.3017 225.205 50.3677 225.205 cv
f
63.9527 230.678 mo
63.5887 230.678 63.2897 230.834 63.0817 231.146 cv
62.8737 231.458 62.7697 231.9 62.7697 232.459 cv
62.7697 233.005 62.8737 233.447 63.0817 233.759 cv
63.2897 234.071 63.5887 234.227 63.9527 234.227 cv
64.3167 234.227 64.6027 234.071 64.8107 233.759 cv
65.0187 233.447 65.1227 233.005 65.1227 232.459 cv
65.1227 231.913 65.0187 231.471 64.8107 231.159 cv
64.6027 230.847 64.3167 230.678 63.9527 230.678 cv
63.9527 229.872 mo
64.6157 229.872 65.1487 230.106 65.5387 230.574 cv
65.9287 231.042 66.1367 231.679 66.1367 232.459 cv
66.1367 233.252 65.9287 233.876 65.5387 234.331 cv
65.1487 234.799 64.6157 235.02 63.9527 235.02 cv
63.2767 235.02 62.7307 234.799 62.3407 234.331 cv
61.9507 233.876 61.7557 233.252 61.7557 232.459 cv
61.7557 231.666 61.9507 231.042 62.3407 230.574 cv
62.7307 230.106 63.2767 229.872 63.9527 229.872 cv
57.4007 226.011 mo
57.0367 226.011 56.7507 226.18 56.5427 226.492 cv
56.3347 226.804 56.2307 227.233 56.2307 227.779 cv
56.2307 228.351 56.3347 228.78 56.5427 229.092 cv
56.7507 229.404 57.0367 229.56 57.4007 229.56 cv
57.7647 229.56 58.0637 229.404 58.2717 229.092 cv
58.4797 228.78 58.5837 228.351 58.5837 227.779 cv
58.5837 227.233 58.4667 226.804 58.2587 226.492 cv
58.0507 226.18 57.7647 226.011 57.4007 226.011 cv
63.1337 225.205 mo
64.1477 225.205 li
58.2197 235.02 li
57.2057 235.02 li
63.1337 225.205 li
57.4007 225.205 mo
58.0637 225.205 58.5967 225.439 58.9997 225.907 cv
59.3897 226.375 59.5977 226.999 59.5977 227.779 cv
59.5977 228.585 59.3897 229.209 58.9997 229.677 cv
58.6097 230.145 58.0767 230.366 57.4007 230.366 cv
56.7247 230.366 56.1917 230.145 55.8017 229.677 cv
55.4117 229.209 55.2167 228.585 55.2167 227.779 cv
55.2167 226.999 55.4117 226.375 55.8017 225.907 cv
56.1917 225.439 56.7247 225.205 57.4007 225.205 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 201.882 mo
430.981 201.882 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 201.882 mo
70.3606 201.882 li
f
73.8606 201.882 mo
70.3606 201.882 li
@
30.8417 201.71 mo
31.4527 201.84 31.9338 202.113 32.2718 202.529 cv
32.6097 202.945 32.7917 203.465 32.7917 204.063 cv
32.7917 204.999 32.4668 205.727 31.8298 206.234 cv
31.1797 206.741 30.2697 206.988 29.0868 206.988 cv
28.6838 206.988 28.2677 206.949 27.8517 206.871 cv
27.4357 206.806 26.9937 206.689 26.5518 206.533 cv
26.5518 205.298 li
26.9028 205.506 27.2927 205.662 27.7217 205.766 cv
28.1377 205.87 28.5798 205.922 29.0477 205.922 cv
29.8537 205.922 30.4647 205.766 30.8807 205.454 cv
31.2967 205.142 31.5177 204.674 31.5177 204.063 cv
31.5177 203.517 31.3228 203.075 30.9327 202.763 cv
30.5427 202.451 29.9967 202.282 29.2948 202.282 cv
28.1897 202.282 li
28.1897 201.229 li
29.3467 201.229 li
29.9707 201.229 30.4517 201.112 30.7897 200.852 cv
31.1278 200.605 31.2967 200.241 31.2967 199.76 cv
31.2967 199.279 31.1147 198.902 30.7767 198.642 cv
30.4257 198.382 29.9317 198.252 29.2948 198.252 cv
28.9437 198.252 28.5667 198.291 28.1637 198.369 cv
27.7607 198.447 27.3187 198.564 26.8377 198.72 cv
26.8377 197.576 li
27.3187 197.446 27.7738 197.342 28.2027 197.277 cv
28.6187 197.212 29.0217 197.173 29.4117 197.173 cv
30.3737 197.173 31.1407 197.394 31.7127 197.836 cv
32.2847 198.278 32.5707 198.876 32.5707 199.63 cv
32.5707 200.15 32.4147 200.592 32.1157 200.956 cv
31.8167 201.32 31.3877 201.58 30.8417 201.71 cv
f
37.9658 198.187 mo
37.3028 198.187 36.8088 198.512 36.4708 199.162 cv
36.1328 199.812 35.9768 200.787 35.9768 202.087 cv
35.9768 203.387 36.1328 204.362 36.4708 205.012 cv
36.8088 205.662 37.3028 205.987 37.9658 205.987 cv
38.6288 205.987 39.1228 205.662 39.4608 205.012 cv
39.7858 204.362 39.9548 203.387 39.9548 202.087 cv
39.9548 200.787 39.7858 199.812 39.4608 199.162 cv
39.1228 198.512 38.6288 198.187 37.9658 198.187 cv
37.9658 197.173 mo
39.0188 197.173 39.8248 197.602 40.3968 198.434 cv
40.9558 199.279 41.2418 200.501 41.2418 202.087 cv
41.2418 203.686 40.9558 204.908 40.3968 205.74 cv
39.8248 206.572 39.0188 206.988 37.9658 206.988 cv
36.8998 206.988 36.0808 206.572 35.5218 205.74 cv
34.9628 204.908 34.6898 203.686 34.6898 202.087 cv
34.6898 200.501 34.9628 199.279 35.5218 198.434 cv
36.0808 197.602 36.8998 197.173 37.9658 197.173 cv
f
43.4908 205.207 mo
44.8298 205.207 li
44.8298 206.819 li
43.4908 206.819 li
43.4908 205.207 li
f
50.3677 198.187 mo
49.7047 198.187 49.2107 198.512 48.8727 199.162 cv
48.5347 199.812 48.3787 200.787 48.3787 202.087 cv
48.3787 203.387 48.5347 204.362 48.8727 205.012 cv
49.2107 205.662 49.7047 205.987 50.3677 205.987 cv
51.0307 205.987 51.5247 205.662 51.8627 205.012 cv
52.1877 204.362 52.3567 203.387 52.3567 202.087 cv
52.3567 200.787 52.1877 199.812 51.8627 199.162 cv
51.5247 198.512 51.0307 198.187 50.3677 198.187 cv
50.3677 197.173 mo
51.4207 197.173 52.2267 197.602 52.7987 198.434 cv
53.3577 199.279 53.6437 200.501 53.6437 202.087 cv
53.6437 203.686 53.3577 204.908 52.7987 205.74 cv
52.2267 206.572 51.4207 206.988 50.3677 206.988 cv
49.3017 206.988 48.4827 206.572 47.9237 205.74 cv
47.3647 204.908 47.0917 203.686 47.0917 202.087 cv
47.0917 200.501 47.3647 199.279 47.9237 198.434 cv
48.4827 197.602 49.3017 197.173 50.3677 197.173 cv
f
63.9527 202.646 mo
63.5887 202.646 63.2897 202.802 63.0817 203.114 cv
62.8737 203.426 62.7697 203.868 62.7697 204.427 cv
62.7697 204.973 62.8737 205.415 63.0817 205.727 cv
63.2897 206.039 63.5887 206.195 63.9527 206.195 cv
64.3167 206.195 64.6027 206.039 64.8107 205.727 cv
65.0187 205.415 65.1227 204.973 65.1227 204.427 cv
65.1227 203.881 65.0187 203.439 64.8107 203.127 cv
64.6027 202.815 64.3167 202.646 63.9527 202.646 cv
63.9527 201.84 mo
64.6157 201.84 65.1487 202.074 65.5387 202.542 cv
65.9287 203.01 66.1367 203.647 66.1367 204.427 cv
66.1367 205.22 65.9287 205.844 65.5387 206.299 cv
65.1487 206.767 64.6157 206.988 63.9527 206.988 cv
63.2767 206.988 62.7307 206.767 62.3407 206.299 cv
61.9507 205.844 61.7557 205.22 61.7557 204.427 cv
61.7557 203.634 61.9507 203.01 62.3407 202.542 cv
62.7307 202.074 63.2767 201.84 63.9527 201.84 cv
57.4007 197.979 mo
57.0367 197.979 56.7507 198.148 56.5427 198.46 cv
56.3347 198.772 56.2307 199.201 56.2307 199.747 cv
56.2307 200.319 56.3347 200.748 56.5427 201.06 cv
56.7507 201.372 57.0367 201.528 57.4007 201.528 cv
57.7647 201.528 58.0637 201.372 58.2717 201.06 cv
58.4797 200.748 58.5837 200.319 58.5837 199.747 cv
58.5837 199.201 58.4667 198.772 58.2587 198.46 cv
58.0507 198.148 57.7647 197.979 57.4007 197.979 cv
63.1337 197.173 mo
64.1477 197.173 li
58.2197 206.988 li
57.2057 206.988 li
63.1337 197.173 li
57.4007 197.173 mo
58.0637 197.173 58.5967 197.407 58.9997 197.875 cv
59.3897 198.343 59.5977 198.967 59.5977 199.747 cv
59.5977 200.553 59.3897 201.177 58.9997 201.645 cv
58.6097 202.113 58.0767 202.334 57.4007 202.334 cv
56.7247 202.334 56.1917 202.113 55.8017 201.645 cv
55.4117 201.177 55.2167 200.553 55.2167 199.747 cv
55.2167 198.967 55.4117 198.343 55.8017 197.875 cv
56.1917 197.407 56.7247 197.173 57.4007 197.173 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 173.849 mo
430.981 173.849 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 173.849 mo
70.3606 173.849 li
f
73.8606 173.849 mo
70.3606 173.849 li
@
30.4777 170.428 mo
27.2407 175.485 li
30.4777 175.485 li
30.4777 170.428 li
30.1397 169.31 mo
31.7517 169.31 li
31.7517 175.485 li
33.1037 175.485 li
33.1037 176.551 li
31.7517 176.551 li
31.7517 178.787 li
30.4777 178.787 li
30.4777 176.551 li
26.2007 176.551 li
26.2007 175.316 li
30.1397 169.31 li
f
37.9658 170.155 mo
37.3028 170.155 36.8088 170.48 36.4708 171.13 cv
36.1328 171.78 35.9768 172.755 35.9768 174.055 cv
35.9768 175.355 36.1328 176.33 36.4708 176.98 cv
36.8088 177.63 37.3028 177.955 37.9658 177.955 cv
38.6288 177.955 39.1228 177.63 39.4608 176.98 cv
39.7858 176.33 39.9548 175.355 39.9548 174.055 cv
39.9548 172.755 39.7858 171.78 39.4608 171.13 cv
39.1228 170.48 38.6288 170.155 37.9658 170.155 cv
37.9658 169.141 mo
39.0188 169.141 39.8248 169.57 40.3968 170.402 cv
40.9558 171.247 41.2418 172.469 41.2418 174.055 cv
41.2418 175.654 40.9558 176.876 40.3968 177.708 cv
39.8248 178.54 39.0188 178.956 37.9658 178.956 cv
36.8998 178.956 36.0808 178.54 35.5218 177.708 cv
34.9628 176.876 34.6898 175.654 34.6898 174.055 cv
34.6898 172.469 34.9628 171.247 35.5218 170.402 cv
36.0808 169.57 36.8998 169.141 37.9658 169.141 cv
f
43.4908 177.175 mo
44.8298 177.175 li
44.8298 178.787 li
43.4908 178.787 li
43.4908 177.175 li
f
50.3677 170.155 mo
49.7047 170.155 49.2107 170.48 48.8727 171.13 cv
48.5347 171.78 48.3787 172.755 48.3787 174.055 cv
48.3787 175.355 48.5347 176.33 48.8727 176.98 cv
49.2107 177.63 49.7047 177.955 50.3677 177.955 cv
51.0307 177.955 51.5247 177.63 51.8627 176.98 cv
52.1877 176.33 52.3567 175.355 52.3567 174.055 cv
52.3567 172.755 52.1877 171.78 51.8627 171.13 cv
51.5247 170.48 51.0307 170.155 50.3677 170.155 cv
50.3677 169.141 mo
51.4207 169.141 52.2267 169.57 52.7987 170.402 cv
53.3577 171.247 53.6437 172.469 53.6437 174.055 cv
53.6437 175.654 53.3577 176.876 52.7987 177.708 cv
52.2267 178.54 51.4207 178.956 50.3677 178.956 cv
49.3017 178.956 48.4827 178.54 47.9237 177.708 cv
47.3647 176.876 47.0917 175.654 47.0917 174.055 cv
47.0917 172.469 47.3647 171.247 47.9237 170.402 cv
48.4827 169.57 49.3017 169.141 50.3677 169.141 cv
f
63.9527 174.614 mo
63.5887 174.614 63.2897 174.77 63.0817 175.082 cv
62.8737 175.394 62.7697 175.836 62.7697 176.395 cv
62.7697 176.941 62.8737 177.383 63.0817 177.695 cv
63.2897 178.007 63.5887 178.163 63.9527 178.163 cv
64.3167 178.163 64.6027 178.007 64.8107 177.695 cv
65.0187 177.383 65.1227 176.941 65.1227 176.395 cv
65.1227 175.849 65.0187 175.407 64.8107 175.095 cv
64.6027 174.783 64.3167 174.614 63.9527 174.614 cv
63.9527 173.808 mo
64.6157 173.808 65.1487 174.042 65.5387 174.51 cv
65.9287 174.978 66.1367 175.615 66.1367 176.395 cv
66.1367 177.188 65.9287 177.812 65.5387 178.267 cv
65.1487 178.735 64.6157 178.956 63.9527 178.956 cv
63.2767 178.956 62.7307 178.735 62.3407 178.267 cv
61.9507 177.812 61.7557 177.188 61.7557 176.395 cv
61.7557 175.602 61.9507 174.978 62.3407 174.51 cv
62.7307 174.042 63.2767 173.808 63.9527 173.808 cv
57.4007 169.947 mo
57.0367 169.947 56.7507 170.116 56.5427 170.428 cv
56.3347 170.74 56.2307 171.169 56.2307 171.715 cv
56.2307 172.287 56.3347 172.716 56.5427 173.028 cv
56.7507 173.34 57.0367 173.496 57.4007 173.496 cv
57.7647 173.496 58.0637 173.34 58.2717 173.028 cv
58.4797 172.716 58.5837 172.287 58.5837 171.715 cv
58.5837 171.169 58.4667 170.74 58.2587 170.428 cv
58.0507 170.116 57.7647 169.947 57.4007 169.947 cv
63.1337 169.141 mo
64.1477 169.141 li
58.2197 178.956 li
57.2057 178.956 li
63.1337 169.141 li
57.4007 169.141 mo
58.0637 169.141 58.5967 169.375 58.9997 169.843 cv
59.3897 170.311 59.5977 170.935 59.5977 171.715 cv
59.5977 172.521 59.3897 173.145 58.9997 173.613 cv
58.6097 174.081 58.0767 174.302 57.4007 174.302 cv
56.7247 174.302 56.1917 174.081 55.8017 173.613 cv
55.4117 173.145 55.2167 172.521 55.2167 171.715 cv
55.2167 170.935 55.4117 170.311 55.8017 169.843 cv
56.1917 169.375 56.7247 169.141 57.4007 169.141 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 145.817 mo
430.981 145.817 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 145.817 mo
70.3606 145.817 li
f
73.8606 145.817 mo
70.3606 145.817 li
@
26.9677 141.278 mo
31.9987 141.278 li
31.9987 142.357 li
28.1377 142.357 li
28.1377 144.684 li
28.3197 144.619 28.5147 144.567 28.6967 144.541 cv
28.8787 144.515 29.0737 144.489 29.2557 144.489 cv
30.3088 144.489 31.1407 144.788 31.7647 145.36 cv
32.3887 145.945 32.7007 146.725 32.7007 147.713 cv
32.7007 148.74 32.3757 149.533 31.7388 150.092 cv
31.1017 150.651 30.2048 150.924 29.0607 150.924 cv
28.6577 150.924 28.2547 150.885 27.8387 150.833 cv
27.4227 150.768 27.0068 150.677 26.5647 150.534 cv
26.5647 149.247 li
26.9417 149.455 27.3317 149.611 27.7477 149.715 cv
28.1507 149.819 28.5798 149.858 29.0347 149.858 cv
29.7627 149.858 30.3477 149.676 30.7767 149.286 cv
31.1927 148.896 31.4137 148.376 31.4137 147.713 cv
31.4137 147.063 31.1927 146.543 30.7767 146.153 cv
30.3477 145.763 29.7627 145.568 29.0347 145.568 cv
28.6967 145.568 28.3457 145.607 28.0077 145.685 cv
27.6698 145.763 27.3187 145.88 26.9677 146.036 cv
26.9677 141.278 li
f
37.9658 142.123 mo
37.3028 142.123 36.8088 142.448 36.4708 143.098 cv
36.1328 143.748 35.9768 144.723 35.9768 146.023 cv
35.9768 147.323 36.1328 148.298 36.4708 148.948 cv
36.8088 149.598 37.3028 149.923 37.9658 149.923 cv
38.6288 149.923 39.1228 149.598 39.4608 148.948 cv
39.7858 148.298 39.9548 147.323 39.9548 146.023 cv
39.9548 144.723 39.7858 143.748 39.4608 143.098 cv
39.1228 142.448 38.6288 142.123 37.9658 142.123 cv
37.9658 141.109 mo
39.0188 141.109 39.8248 141.538 40.3968 142.37 cv
40.9558 143.215 41.2418 144.437 41.2418 146.023 cv
41.2418 147.622 40.9558 148.844 40.3968 149.676 cv
39.8248 150.508 39.0188 150.924 37.9658 150.924 cv
36.8998 150.924 36.0808 150.508 35.5218 149.676 cv
34.9628 148.844 34.6898 147.622 34.6898 146.023 cv
34.6898 144.437 34.9628 143.215 35.5218 142.37 cv
36.0808 141.538 36.8998 141.109 37.9658 141.109 cv
f
43.4908 149.143 mo
44.8298 149.143 li
44.8298 150.755 li
43.4908 150.755 li
43.4908 149.143 li
f
50.3677 142.123 mo
49.7047 142.123 49.2107 142.448 48.8727 143.098 cv
48.5347 143.748 48.3787 144.723 48.3787 146.023 cv
48.3787 147.323 48.5347 148.298 48.8727 148.948 cv
49.2107 149.598 49.7047 149.923 50.3677 149.923 cv
51.0307 149.923 51.5247 149.598 51.8627 148.948 cv
52.1877 148.298 52.3567 147.323 52.3567 146.023 cv
52.3567 144.723 52.1877 143.748 51.8627 143.098 cv
51.5247 142.448 51.0307 142.123 50.3677 142.123 cv
50.3677 141.109 mo
51.4207 141.109 52.2267 141.538 52.7987 142.37 cv
53.3577 143.215 53.6437 144.437 53.6437 146.023 cv
53.6437 147.622 53.3577 148.844 52.7987 149.676 cv
52.2267 150.508 51.4207 150.924 50.3677 150.924 cv
49.3017 150.924 48.4827 150.508 47.9237 149.676 cv
47.3647 148.844 47.0917 147.622 47.0917 146.023 cv
47.0917 144.437 47.3647 143.215 47.9237 142.37 cv
48.4827 141.538 49.3017 141.109 50.3677 141.109 cv
f
63.9527 146.582 mo
63.5887 146.582 63.2897 146.738 63.0817 147.05 cv
62.8737 147.362 62.7697 147.804 62.7697 148.363 cv
62.7697 148.909 62.8737 149.351 63.0817 149.663 cv
63.2897 149.975 63.5887 150.131 63.9527 150.131 cv
64.3167 150.131 64.6027 149.975 64.8107 149.663 cv
65.0187 149.351 65.1227 148.909 65.1227 148.363 cv
65.1227 147.817 65.0187 147.375 64.8107 147.063 cv
64.6027 146.751 64.3167 146.582 63.9527 146.582 cv
63.9527 145.776 mo
64.6157 145.776 65.1487 146.01 65.5387 146.478 cv
65.9287 146.946 66.1367 147.583 66.1367 148.363 cv
66.1367 149.156 65.9287 149.78 65.5387 150.235 cv
65.1487 150.703 64.6157 150.924 63.9527 150.924 cv
63.2767 150.924 62.7307 150.703 62.3407 150.235 cv
61.9507 149.78 61.7557 149.156 61.7557 148.363 cv
61.7557 147.57 61.9507 146.946 62.3407 146.478 cv
62.7307 146.01 63.2767 145.776 63.9527 145.776 cv
57.4007 141.915 mo
57.0367 141.915 56.7507 142.084 56.5427 142.396 cv
56.3347 142.708 56.2307 143.137 56.2307 143.683 cv
56.2307 144.255 56.3347 144.684 56.5427 144.996 cv
56.7507 145.308 57.0367 145.464 57.4007 145.464 cv
57.7647 145.464 58.0637 145.308 58.2717 144.996 cv
58.4797 144.684 58.5837 144.255 58.5837 143.683 cv
58.5837 143.137 58.4667 142.708 58.2587 142.396 cv
58.0507 142.084 57.7647 141.915 57.4007 141.915 cv
63.1337 141.109 mo
64.1477 141.109 li
58.2197 150.924 li
57.2057 150.924 li
63.1337 141.109 li
57.4007 141.109 mo
58.0637 141.109 58.5967 141.343 58.9997 141.811 cv
59.3897 142.279 59.5977 142.903 59.5977 143.683 cv
59.5977 144.489 59.3897 145.113 58.9997 145.581 cv
58.6097 146.049 58.0767 146.27 57.4007 146.27 cv
56.7247 146.27 56.1917 146.049 55.8017 145.581 cv
55.4117 145.113 55.2167 144.489 55.2167 143.683 cv
55.2167 142.903 55.4117 142.279 55.8017 141.811 cv
56.1917 141.343 56.7247 141.109 57.4007 141.109 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 117.785 mo
430.981 117.785 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 117.785 mo
70.3606 117.785 li
f
73.8606 117.785 mo
70.3606 117.785 li
@
29.8537 117.471 mo
29.2817 117.471 28.8267 117.679 28.4887 118.069 cv
28.1507 118.459 27.9817 119.005 27.9817 119.681 cv
27.9817 120.37 28.1507 120.916 28.4887 121.306 cv
28.8267 121.696 29.2817 121.891 29.8537 121.891 cv
30.4257 121.891 30.8807 121.696 31.2188 121.306 cv
31.5567 120.916 31.7257 120.37 31.7257 119.681 cv
31.7257 119.005 31.5567 118.459 31.2188 118.069 cv
30.8807 117.679 30.4257 117.471 29.8537 117.471 cv
32.4017 113.454 mo
32.4017 114.624 li
32.0767 114.468 31.7517 114.351 31.4268 114.273 cv
31.0887 114.195 30.7638 114.156 30.4517 114.156 cv
29.5938 114.156 28.9437 114.442 28.5017 115.014 cv
28.0597 115.586 27.7997 116.457 27.7477 117.601 cv
27.9947 117.237 28.3067 116.951 28.6838 116.756 cv
29.0607 116.561 29.4767 116.457 29.9317 116.457 cv
30.8807 116.457 31.6348 116.756 32.1807 117.328 cv
32.7267 117.9 33.0127 118.693 33.0127 119.681 cv
33.0127 120.656 32.7137 121.436 32.1418 122.021 cv
31.5697 122.606 30.8027 122.892 29.8537 122.892 cv
28.7617 122.892 27.9167 122.476 27.3447 121.644 cv
26.7597 120.812 26.4737 119.59 26.4737 117.991 cv
26.4737 116.496 26.8247 115.3 27.5397 114.416 cv
28.2417 113.532 29.2037 113.077 30.3997 113.077 cv
30.7118 113.077 31.0367 113.116 31.3748 113.168 cv
31.6997 113.233 32.0378 113.324 32.4017 113.454 cv
f
37.9658 114.091 mo
37.3028 114.091 36.8088 114.416 36.4708 115.066 cv
36.1328 115.716 35.9768 116.691 35.9768 117.991 cv
35.9768 119.291 36.1328 120.266 36.4708 120.916 cv
36.8088 121.566 37.3028 121.891 37.9658 121.891 cv
38.6288 121.891 39.1228 121.566 39.4608 120.916 cv
39.7858 120.266 39.9548 119.291 39.9548 117.991 cv
39.9548 116.691 39.7858 115.716 39.4608 115.066 cv
39.1228 114.416 38.6288 114.091 37.9658 114.091 cv
37.9658 113.077 mo
39.0188 113.077 39.8248 113.506 40.3968 114.338 cv
40.9558 115.183 41.2418 116.405 41.2418 117.991 cv
41.2418 119.59 40.9558 120.812 40.3968 121.644 cv
39.8248 122.476 39.0188 122.892 37.9658 122.892 cv
36.8998 122.892 36.0808 122.476 35.5218 121.644 cv
34.9628 120.812 34.6898 119.59 34.6898 117.991 cv
34.6898 116.405 34.9628 115.183 35.5218 114.338 cv
36.0808 113.506 36.8998 113.077 37.9658 113.077 cv
f
43.4908 121.111 mo
44.8298 121.111 li
44.8298 122.723 li
43.4908 122.723 li
43.4908 121.111 li
f
50.3677 114.091 mo
49.7047 114.091 49.2107 114.416 48.8727 115.066 cv
48.5347 115.716 48.3787 116.691 48.3787 117.991 cv
48.3787 119.291 48.5347 120.266 48.8727 120.916 cv
49.2107 121.566 49.7047 121.891 50.3677 121.891 cv
51.0307 121.891 51.5247 121.566 51.8627 120.916 cv
52.1877 120.266 52.3567 119.291 52.3567 117.991 cv
52.3567 116.691 52.1877 115.716 51.8627 115.066 cv
51.5247 114.416 51.0307 114.091 50.3677 114.091 cv
50.3677 113.077 mo
51.4207 113.077 52.2267 113.506 52.7987 114.338 cv
53.3577 115.183 53.6437 116.405 53.6437 117.991 cv
53.6437 119.59 53.3577 120.812 52.7987 121.644 cv
52.2267 122.476 51.4207 122.892 50.3677 122.892 cv
49.3017 122.892 48.4827 122.476 47.9237 121.644 cv
47.3647 120.812 47.0917 119.59 47.0917 117.991 cv
47.0917 116.405 47.3647 115.183 47.9237 114.338 cv
48.4827 113.506 49.3017 113.077 50.3677 113.077 cv
f
63.9527 118.55 mo
63.5887 118.55 63.2897 118.706 63.0817 119.018 cv
62.8737 119.33 62.7697 119.772 62.7697 120.331 cv
62.7697 120.877 62.8737 121.319 63.0817 121.631 cv
63.2897 121.943 63.5887 122.099 63.9527 122.099 cv
64.3167 122.099 64.6027 121.943 64.8107 121.631 cv
65.0187 121.319 65.1227 120.877 65.1227 120.331 cv
65.1227 119.785 65.0187 119.343 64.8107 119.031 cv
64.6027 118.719 64.3167 118.55 63.9527 118.55 cv
63.9527 117.744 mo
64.6157 117.744 65.1487 117.978 65.5387 118.446 cv
65.9287 118.914 66.1367 119.551 66.1367 120.331 cv
66.1367 121.124 65.9287 121.748 65.5387 122.203 cv
65.1487 122.671 64.6157 122.892 63.9527 122.892 cv
63.2767 122.892 62.7307 122.671 62.3407 122.203 cv
61.9507 121.748 61.7557 121.124 61.7557 120.331 cv
61.7557 119.538 61.9507 118.914 62.3407 118.446 cv
62.7307 117.978 63.2767 117.744 63.9527 117.744 cv
57.4007 113.883 mo
57.0367 113.883 56.7507 114.052 56.5427 114.364 cv
56.3347 114.676 56.2307 115.105 56.2307 115.651 cv
56.2307 116.223 56.3347 116.652 56.5427 116.964 cv
56.7507 117.276 57.0367 117.432 57.4007 117.432 cv
57.7647 117.432 58.0637 117.276 58.2717 116.964 cv
58.4797 116.652 58.5837 116.223 58.5837 115.651 cv
58.5837 115.105 58.4667 114.676 58.2587 114.364 cv
58.0507 114.052 57.7647 113.883 57.4007 113.883 cv
63.1337 113.077 mo
64.1477 113.077 li
58.2197 122.892 li
57.2057 122.892 li
63.1337 113.077 li
57.4007 113.077 mo
58.0637 113.077 58.5967 113.311 58.9997 113.779 cv
59.3897 114.247 59.5977 114.871 59.5977 115.651 cv
59.5977 116.457 59.3897 117.081 58.9997 117.549 cv
58.6097 118.017 58.0767 118.238 57.4007 118.238 cv
56.7247 118.238 56.1917 118.017 55.8017 117.549 cv
55.4117 117.081 55.2167 116.457 55.2167 115.651 cv
55.2167 114.871 55.4117 114.247 55.8017 113.779 cv
56.1917 113.311 56.7247 113.077 57.4007 113.077 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 89.7535 mo
430.981 89.7535 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 89.7535 mo
70.3606 89.7535 li
f
73.8606 89.7535 mo
70.3606 89.7535 li
@
26.6297 85.214 mo
32.7267 85.214 li
32.7267 85.76 li
29.2817 94.691 li
27.9427 94.691 li
31.1797 86.293 li
26.6297 86.293 li
26.6297 85.214 li
f
37.9658 86.059 mo
37.3028 86.059 36.8088 86.384 36.4708 87.034 cv
36.1328 87.684 35.9768 88.659 35.9768 89.959 cv
35.9768 91.259 36.1328 92.234 36.4708 92.884 cv
36.8088 93.534 37.3028 93.859 37.9658 93.859 cv
38.6288 93.859 39.1228 93.534 39.4608 92.884 cv
39.7858 92.234 39.9548 91.259 39.9548 89.959 cv
39.9548 88.659 39.7858 87.684 39.4608 87.034 cv
39.1228 86.384 38.6288 86.059 37.9658 86.059 cv
37.9658 85.045 mo
39.0188 85.045 39.8248 85.474 40.3968 86.306 cv
40.9558 87.151 41.2418 88.373 41.2418 89.959 cv
41.2418 91.558 40.9558 92.78 40.3968 93.612 cv
39.8248 94.444 39.0188 94.86 37.9658 94.86 cv
36.8998 94.86 36.0808 94.444 35.5218 93.612 cv
34.9628 92.78 34.6898 91.558 34.6898 89.959 cv
34.6898 88.373 34.9628 87.151 35.5218 86.306 cv
36.0808 85.474 36.8998 85.045 37.9658 85.045 cv
f
43.4908 93.079 mo
44.8298 93.079 li
44.8298 94.691 li
43.4908 94.691 li
43.4908 93.079 li
f
50.3677 86.059 mo
49.7047 86.059 49.2107 86.384 48.8727 87.034 cv
48.5347 87.684 48.3787 88.659 48.3787 89.959 cv
48.3787 91.259 48.5347 92.234 48.8727 92.884 cv
49.2107 93.534 49.7047 93.859 50.3677 93.859 cv
51.0307 93.859 51.5247 93.534 51.8627 92.884 cv
52.1877 92.234 52.3567 91.259 52.3567 89.959 cv
52.3567 88.659 52.1877 87.684 51.8627 87.034 cv
51.5247 86.384 51.0307 86.059 50.3677 86.059 cv
50.3677 85.045 mo
51.4207 85.045 52.2267 85.474 52.7987 86.306 cv
53.3577 87.151 53.6437 88.373 53.6437 89.959 cv
53.6437 91.558 53.3577 92.78 52.7987 93.612 cv
52.2267 94.444 51.4207 94.86 50.3677 94.86 cv
49.3017 94.86 48.4827 94.444 47.9237 93.612 cv
47.3647 92.78 47.0917 91.558 47.0917 89.959 cv
47.0917 88.373 47.3647 87.151 47.9237 86.306 cv
48.4827 85.474 49.3017 85.045 50.3677 85.045 cv
f
63.9527 90.518 mo
63.5887 90.518 63.2897 90.674 63.0817 90.986 cv
62.8737 91.298 62.7697 91.74 62.7697 92.299 cv
62.7697 92.845 62.8737 93.287 63.0817 93.599 cv
63.2897 93.911 63.5887 94.067 63.9527 94.067 cv
64.3167 94.067 64.6027 93.911 64.8107 93.599 cv
65.0187 93.287 65.1227 92.845 65.1227 92.299 cv
65.1227 91.753 65.0187 91.311 64.8107 90.999 cv
64.6027 90.687 64.3167 90.518 63.9527 90.518 cv
63.9527 89.712 mo
64.6157 89.712 65.1487 89.946 65.5387 90.414 cv
65.9287 90.882 66.1367 91.519 66.1367 92.299 cv
66.1367 93.092 65.9287 93.716 65.5387 94.171 cv
65.1487 94.639 64.6157 94.86 63.9527 94.86 cv
63.2767 94.86 62.7307 94.639 62.3407 94.171 cv
61.9507 93.716 61.7557 93.092 61.7557 92.299 cv
61.7557 91.506 61.9507 90.882 62.3407 90.414 cv
62.7307 89.946 63.2767 89.712 63.9527 89.712 cv
57.4007 85.851 mo
57.0367 85.851 56.7507 86.02 56.5427 86.332 cv
56.3347 86.644 56.2307 87.073 56.2307 87.619 cv
56.2307 88.191 56.3347 88.62 56.5427 88.932 cv
56.7507 89.244 57.0367 89.4 57.4007 89.4 cv
57.7647 89.4 58.0637 89.244 58.2717 88.932 cv
58.4797 88.62 58.5837 88.191 58.5837 87.619 cv
58.5837 87.073 58.4667 86.644 58.2587 86.332 cv
58.0507 86.02 57.7647 85.851 57.4007 85.851 cv
63.1337 85.045 mo
64.1477 85.045 li
58.2197 94.86 li
57.2057 94.86 li
63.1337 85.045 li
57.4007 85.045 mo
58.0637 85.045 58.5967 85.279 58.9997 85.747 cv
59.3897 86.215 59.5977 86.839 59.5977 87.619 cv
59.5977 88.425 59.3897 89.049 58.9997 89.517 cv
58.6097 89.985 58.0767 90.206 57.4007 90.206 cv
56.7247 90.206 56.1917 89.985 55.8017 89.517 cv
55.4117 89.049 55.2167 88.425 55.2167 87.619 cv
55.2167 86.839 55.4117 86.215 55.8017 85.747 cv
56.1917 85.279 56.7247 85.045 57.4007 85.045 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
73.8606 61.3215 mo
78.9806 61.3215 li
78.9806 62.1215 li
73.8606 62.1215 li
73.8606 61.3215 li
80.2607 61.3215 mo
81.0606 61.3215 li
81.0606 62.1215 li
80.2607 62.1215 li
80.2607 61.3215 li
82.3406 61.3215 mo
87.4607 61.3215 li
87.4607 62.1215 li
82.3406 62.1215 li
82.3406 61.3215 li
88.7406 61.3215 mo
89.5406 61.3215 li
89.5406 62.1215 li
88.7406 62.1215 li
88.7406 61.3215 li
90.8207 61.3215 mo
95.9406 61.3215 li
95.9406 62.1215 li
90.8207 62.1215 li
90.8207 61.3215 li
97.2206 61.3215 mo
98.0207 61.3215 li
98.0207 62.1215 li
97.2206 62.1215 li
97.2206 61.3215 li
99.3006 61.3215 mo
104.421 61.3215 li
104.421 62.1215 li
99.3006 62.1215 li
99.3006 61.3215 li
105.701 61.3215 mo
106.501 61.3215 li
106.501 62.1215 li
105.701 62.1215 li
105.701 61.3215 li
107.781 61.3215 mo
112.901 61.3215 li
112.901 62.1215 li
107.781 62.1215 li
107.781 61.3215 li
114.181 61.3215 mo
114.981 61.3215 li
114.981 62.1215 li
114.181 62.1215 li
114.181 61.3215 li
116.261 61.3215 mo
121.381 61.3215 li
121.381 62.1215 li
116.261 62.1215 li
116.261 61.3215 li
122.661 61.3215 mo
123.461 61.3215 li
123.461 62.1215 li
122.661 62.1215 li
122.661 61.3215 li
124.741 61.3215 mo
129.861 61.3215 li
129.861 62.1215 li
124.741 62.1215 li
124.741 61.3215 li
131.141 61.3215 mo
131.941 61.3215 li
131.941 62.1215 li
131.141 62.1215 li
131.141 61.3215 li
133.221 61.3215 mo
138.341 61.3215 li
138.341 62.1215 li
133.221 62.1215 li
133.221 61.3215 li
139.621 61.3215 mo
140.421 61.3215 li
140.421 62.1215 li
139.621 62.1215 li
139.621 61.3215 li
141.701 61.3215 mo
146.821 61.3215 li
146.821 62.1215 li
141.701 62.1215 li
141.701 61.3215 li
148.101 61.3215 mo
148.901 61.3215 li
148.901 62.1215 li
148.101 62.1215 li
148.101 61.3215 li
150.181 61.3215 mo
155.301 61.3215 li
155.301 62.1215 li
150.181 62.1215 li
150.181 61.3215 li
156.581 61.3215 mo
157.381 61.3215 li
157.381 62.1215 li
156.581 62.1215 li
156.581 61.3215 li
158.661 61.3215 mo
163.781 61.3215 li
163.781 62.1215 li
158.661 62.1215 li
158.661 61.3215 li
165.061 61.3215 mo
165.861 61.3215 li
165.861 62.1215 li
165.061 62.1215 li
165.061 61.3215 li
167.141 61.3215 mo
172.261 61.3215 li
172.261 62.1215 li
167.141 62.1215 li
167.141 61.3215 li
173.541 61.3215 mo
174.341 61.3215 li
174.341 62.1215 li
173.541 62.1215 li
173.541 61.3215 li
175.621 61.3215 mo
180.741 61.3215 li
180.741 62.1215 li
175.621 62.1215 li
175.621 61.3215 li
182.021 61.3215 mo
182.821 61.3215 li
182.821 62.1215 li
182.021 62.1215 li
182.021 61.3215 li
184.101 61.3215 mo
189.221 61.3215 li
189.221 62.1215 li
184.101 62.1215 li
184.101 61.3215 li
190.501 61.3215 mo
191.301 61.3215 li
191.301 62.1215 li
190.501 62.1215 li
190.501 61.3215 li
192.581 61.3215 mo
197.701 61.3215 li
197.701 62.1215 li
192.581 62.1215 li
192.581 61.3215 li
198.981 61.3215 mo
199.781 61.3215 li
199.781 62.1215 li
198.981 62.1215 li
198.981 61.3215 li
201.061 61.3215 mo
206.181 61.3215 li
206.181 62.1215 li
201.061 62.1215 li
201.061 61.3215 li
207.461 61.3215 mo
208.261 61.3215 li
208.261 62.1215 li
207.461 62.1215 li
207.461 61.3215 li
209.541 61.3215 mo
214.661 61.3215 li
214.661 62.1215 li
209.541 62.1215 li
209.541 61.3215 li
215.941 61.3215 mo
216.741 61.3215 li
216.741 62.1215 li
215.941 62.1215 li
215.941 61.3215 li
218.021 61.3215 mo
223.141 61.3215 li
223.141 62.1215 li
218.021 62.1215 li
218.021 61.3215 li
224.421 61.3215 mo
225.221 61.3215 li
225.221 62.1215 li
224.421 62.1215 li
224.421 61.3215 li
226.501 61.3215 mo
231.621 61.3215 li
231.621 62.1215 li
226.501 62.1215 li
226.501 61.3215 li
232.901 61.3215 mo
233.701 61.3215 li
233.701 62.1215 li
232.901 62.1215 li
232.901 61.3215 li
234.981 61.3215 mo
240.101 61.3215 li
240.101 62.1215 li
234.981 62.1215 li
234.981 61.3215 li
241.381 61.3215 mo
242.181 61.3215 li
242.181 62.1215 li
241.381 62.1215 li
241.381 61.3215 li
243.461 61.3215 mo
248.581 61.3215 li
248.581 62.1215 li
243.461 62.1215 li
243.461 61.3215 li
249.861 61.3215 mo
250.661 61.3215 li
250.661 62.1215 li
249.861 62.1215 li
249.861 61.3215 li
251.941 61.3215 mo
257.061 61.3215 li
257.061 62.1215 li
251.941 62.1215 li
251.941 61.3215 li
258.341 61.3215 mo
259.141 61.3215 li
259.141 62.1215 li
258.341 62.1215 li
258.341 61.3215 li
260.421 61.3215 mo
265.541 61.3215 li
265.541 62.1215 li
260.421 62.1215 li
260.421 61.3215 li
266.821 61.3215 mo
267.621 61.3215 li
267.621 62.1215 li
266.821 62.1215 li
266.821 61.3215 li
268.901 61.3215 mo
274.021 61.3215 li
274.021 62.1215 li
268.901 62.1215 li
268.901 61.3215 li
275.301 61.3215 mo
276.101 61.3215 li
276.101 62.1215 li
275.301 62.1215 li
275.301 61.3215 li
277.381 61.3215 mo
282.501 61.3215 li
282.501 62.1215 li
277.381 62.1215 li
277.381 61.3215 li
283.781 61.3215 mo
284.581 61.3215 li
284.581 62.1215 li
283.781 62.1215 li
283.781 61.3215 li
285.861 61.3215 mo
290.981 61.3215 li
290.981 62.1215 li
285.861 62.1215 li
285.861 61.3215 li
292.261 61.3215 mo
293.061 61.3215 li
293.061 62.1215 li
292.261 62.1215 li
292.261 61.3215 li
294.341 61.3215 mo
299.461 61.3215 li
299.461 62.1215 li
294.341 62.1215 li
294.341 61.3215 li
300.741 61.3215 mo
301.541 61.3215 li
301.541 62.1215 li
300.741 62.1215 li
300.741 61.3215 li
302.821 61.3215 mo
307.941 61.3215 li
307.941 62.1215 li
302.821 62.1215 li
302.821 61.3215 li
309.221 61.3215 mo
310.021 61.3215 li
310.021 62.1215 li
309.221 62.1215 li
309.221 61.3215 li
311.301 61.3215 mo
316.421 61.3215 li
316.421 62.1215 li
311.301 62.1215 li
311.301 61.3215 li
317.701 61.3215 mo
318.501 61.3215 li
318.501 62.1215 li
317.701 62.1215 li
317.701 61.3215 li
319.781 61.3215 mo
324.901 61.3215 li
324.901 62.1215 li
319.781 62.1215 li
319.781 61.3215 li
326.181 61.3215 mo
326.981 61.3215 li
326.981 62.1215 li
326.181 62.1215 li
326.181 61.3215 li
328.261 61.3215 mo
333.381 61.3215 li
333.381 62.1215 li
328.261 62.1215 li
328.261 61.3215 li
334.661 61.3215 mo
335.461 61.3215 li
335.461 62.1215 li
334.661 62.1215 li
334.661 61.3215 li
336.74 61.3215 mo
341.861 61.3215 li
341.861 62.1215 li
336.74 62.1215 li
336.74 61.3215 li
343.141 61.3215 mo
343.94 61.3215 li
343.94 62.1215 li
343.141 62.1215 li
343.141 61.3215 li
345.221 61.3215 mo
350.341 61.3215 li
350.341 62.1215 li
345.221 62.1215 li
345.221 61.3215 li
351.62 61.3215 mo
352.421 61.3215 li
352.421 62.1215 li
351.62 62.1215 li
351.62 61.3215 li
353.701 61.3215 mo
358.82 61.3215 li
358.82 62.1215 li
353.701 62.1215 li
353.701 61.3215 li
360.1 61.3215 mo
360.901 61.3215 li
360.901 62.1215 li
360.1 62.1215 li
360.1 61.3215 li
362.18 61.3215 mo
367.301 61.3215 li
367.301 62.1215 li
362.18 62.1215 li
362.18 61.3215 li
368.581 61.3215 mo
369.38 61.3215 li
369.38 62.1215 li
368.581 62.1215 li
368.581 61.3215 li
370.66 61.3215 mo
375.781 61.3215 li
375.781 62.1215 li
370.66 62.1215 li
370.66 61.3215 li
377.06 61.3215 mo
377.861 61.3215 li
377.861 62.1215 li
377.06 62.1215 li
377.06 61.3215 li
379.14 61.3215 mo
384.26 61.3215 li
384.26 62.1215 li
379.14 62.1215 li
379.14 61.3215 li
385.54 61.3215 mo
386.34 61.3215 li
386.34 62.1215 li
385.54 62.1215 li
385.54 61.3215 li
387.62 61.3215 mo
392.74 61.3215 li
392.74 62.1215 li
387.62 62.1215 li
387.62 61.3215 li
394.02 61.3215 mo
394.82 61.3215 li
394.82 62.1215 li
394.02 62.1215 li
394.02 61.3215 li
396.1 61.3215 mo
401.22 61.3215 li
401.22 62.1215 li
396.1 62.1215 li
396.1 61.3215 li
402.5 61.3215 mo
403.3 61.3215 li
403.3 62.1215 li
402.5 62.1215 li
402.5 61.3215 li
404.58 61.3215 mo
409.7 61.3215 li
409.7 62.1215 li
404.58 62.1215 li
404.58 61.3215 li
410.98 61.3215 mo
411.78 61.3215 li
411.78 62.1215 li
410.98 62.1215 li
410.98 61.3215 li
413.06 61.3215 mo
418.18 61.3215 li
418.18 62.1215 li
413.06 62.1215 li
413.06 61.3215 li
419.46 61.3215 mo
420.26 61.3215 li
420.26 62.1215 li
419.46 62.1215 li
419.46 61.3215 li
421.54 61.3215 mo
426.66 61.3215 li
426.66 62.1215 li
421.54 62.1215 li
421.54 61.3215 li
427.94 61.3215 mo
428.74 61.3215 li
428.74 62.1215 li
427.94 62.1215 li
427.94 61.3215 li
430.02 61.3215 mo
430.981 61.3215 li
430.981 62.1215 li
430.02 62.1215 li
430.02 61.3215 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
73.8606 61.7215 mo
70.3606 61.7215 li
f
73.8606 61.7215 mo
70.3606 61.7215 li
@
29.6978 62.161 mo
29.0868 62.161 28.6057 62.33 28.2547 62.655 cv
27.9037 62.98 27.7347 63.422 27.7347 63.994 cv
27.7347 64.566 27.9037 65.021 28.2547 65.346 cv
28.6057 65.671 29.0868 65.827 29.6978 65.827 cv
30.2957 65.827 30.7767 65.671 31.1278 65.333 cv
31.4787 65.008 31.6607 64.566 31.6607 63.994 cv
31.6607 63.422 31.4787 62.98 31.1407 62.655 cv
30.7897 62.33 30.3088 62.161 29.6978 62.161 cv
28.4107 61.615 mo
27.8647 61.485 27.4357 61.225 27.1237 60.848 cv
26.8117 60.471 26.6687 60.016 26.6687 59.47 cv
26.6687 58.716 26.9287 58.118 27.4747 57.676 cv
28.0077 57.234 28.7487 57.013 29.6978 57.013 cv
30.6337 57.013 31.3748 57.234 31.9207 57.676 cv
32.4538 58.118 32.7267 58.716 32.7267 59.47 cv
32.7267 60.016 32.5707 60.471 32.2588 60.848 cv
31.9467 61.225 31.5308 61.485 30.9847 61.615 cv
31.5957 61.758 32.0767 62.044 32.4277 62.46 cv
32.7658 62.876 32.9478 63.396 32.9478 63.994 cv
32.9478 64.917 32.6618 65.619 32.1027 66.1 cv
31.5308 66.594 30.7377 66.828 29.6978 66.828 cv
28.6447 66.828 27.8387 66.594 27.2797 66.1 cv
26.7207 65.619 26.4478 64.917 26.4478 63.994 cv
26.4478 63.396 26.6167 62.876 26.9677 62.46 cv
27.3057 62.044 27.7867 61.758 28.4107 61.615 cv
27.9427 59.587 mo
27.9427 60.081 28.0857 60.471 28.3977 60.744 cv
28.7097 61.017 29.1388 61.147 29.6978 61.147 cv
30.2437 61.147 30.6727 61.017 30.9847 60.744 cv
31.2967 60.471 31.4527 60.081 31.4527 59.587 cv
31.4527 59.093 31.2967 58.716 30.9847 58.443 cv
30.6727 58.17 30.2437 58.027 29.6978 58.027 cv
29.1388 58.027 28.7097 58.17 28.3977 58.443 cv
28.0857 58.716 27.9427 59.093 27.9427 59.587 cv
f
37.9658 58.027 mo
37.3028 58.027 36.8088 58.352 36.4708 59.002 cv
36.1328 59.652 35.9768 60.627 35.9768 61.927 cv
35.9768 63.227 36.1328 64.202 36.4708 64.852 cv
36.8088 65.502 37.3028 65.827 37.9658 65.827 cv
38.6288 65.827 39.1228 65.502 39.4608 64.852 cv
39.7858 64.202 39.9548 63.227 39.9548 61.927 cv
39.9548 60.627 39.7858 59.652 39.4608 59.002 cv
39.1228 58.352 38.6288 58.027 37.9658 58.027 cv
37.9658 57.013 mo
39.0188 57.013 39.8248 57.442 40.3968 58.274 cv
40.9558 59.119 41.2418 60.341 41.2418 61.927 cv
41.2418 63.526 40.9558 64.748 40.3968 65.58 cv
39.8248 66.412 39.0188 66.828 37.9658 66.828 cv
36.8998 66.828 36.0808 66.412 35.5218 65.58 cv
34.9628 64.748 34.6898 63.526 34.6898 61.927 cv
34.6898 60.341 34.9628 59.119 35.5218 58.274 cv
36.0808 57.442 36.8998 57.013 37.9658 57.013 cv
f
43.4908 65.047 mo
44.8298 65.047 li
44.8298 66.659 li
43.4908 66.659 li
43.4908 65.047 li
f
50.3677 58.027 mo
49.7047 58.027 49.2107 58.352 48.8727 59.002 cv
48.5347 59.652 48.3787 60.627 48.3787 61.927 cv
48.3787 63.227 48.5347 64.202 48.8727 64.852 cv
49.2107 65.502 49.7047 65.827 50.3677 65.827 cv
51.0307 65.827 51.5247 65.502 51.8627 64.852 cv
52.1877 64.202 52.3567 63.227 52.3567 61.927 cv
52.3567 60.627 52.1877 59.652 51.8627 59.002 cv
51.5247 58.352 51.0307 58.027 50.3677 58.027 cv
50.3677 57.013 mo
51.4207 57.013 52.2267 57.442 52.7987 58.274 cv
53.3577 59.119 53.6437 60.341 53.6437 61.927 cv
53.6437 63.526 53.3577 64.748 52.7987 65.58 cv
52.2267 66.412 51.4207 66.828 50.3677 66.828 cv
49.3017 66.828 48.4827 66.412 47.9237 65.58 cv
47.3647 64.748 47.0917 63.526 47.0917 61.927 cv
47.0917 60.341 47.3647 59.119 47.9237 58.274 cv
48.4827 57.442 49.3017 57.013 50.3677 57.013 cv
f
63.9527 62.486 mo
63.5887 62.486 63.2897 62.642 63.0817 62.954 cv
62.8737 63.266 62.7697 63.708 62.7697 64.267 cv
62.7697 64.813 62.8737 65.255 63.0817 65.567 cv
63.2897 65.879 63.5887 66.035 63.9527 66.035 cv
64.3167 66.035 64.6027 65.879 64.8107 65.567 cv
65.0187 65.255 65.1227 64.813 65.1227 64.267 cv
65.1227 63.721 65.0187 63.279 64.8107 62.967 cv
64.6027 62.655 64.3167 62.486 63.9527 62.486 cv
63.9527 61.68 mo
64.6157 61.68 65.1487 61.914 65.5387 62.382 cv
65.9287 62.85 66.1367 63.487 66.1367 64.267 cv
66.1367 65.06 65.9287 65.684 65.5387 66.139 cv
65.1487 66.607 64.6157 66.828 63.9527 66.828 cv
63.2767 66.828 62.7307 66.607 62.3407 66.139 cv
61.9507 65.684 61.7557 65.06 61.7557 64.267 cv
61.7557 63.474 61.9507 62.85 62.3407 62.382 cv
62.7307 61.914 63.2767 61.68 63.9527 61.68 cv
57.4007 57.819 mo
57.0367 57.819 56.7507 57.988 56.5427 58.3 cv
56.3347 58.612 56.2307 59.041 56.2307 59.587 cv
56.2307 60.159 56.3347 60.588 56.5427 60.9 cv
56.7507 61.212 57.0367 61.368 57.4007 61.368 cv
57.7647 61.368 58.0637 61.212 58.2717 60.9 cv
58.4797 60.588 58.5837 60.159 58.5837 59.587 cv
58.5837 59.041 58.4667 58.612 58.2587 58.3 cv
58.0507 57.988 57.7647 57.819 57.4007 57.819 cv
63.1337 57.013 mo
64.1477 57.013 li
58.2197 66.828 li
57.2057 66.828 li
63.1337 57.013 li
57.4007 57.013 mo
58.0637 57.013 58.5967 57.247 58.9997 57.715 cv
59.3897 58.183 59.5977 58.807 59.5977 59.587 cv
59.5977 60.393 59.3897 61.017 58.9997 61.485 cv
58.6097 61.953 58.0767 62.174 57.4007 62.174 cv
56.7247 62.174 56.1917 61.953 55.8017 61.485 cv
55.4117 61.017 55.2167 60.393 55.2167 59.587 cv
55.2167 58.807 55.4117 58.183 55.8017 57.715 cv
56.1917 57.247 56.7247 57.013 57.4007 57.013 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
73.8606 33.2895 mo
78.9806 33.2895 li
78.9806 34.0895 li
73.8606 34.0895 li
73.8606 33.2895 li
80.2607 33.2895 mo
81.0606 33.2895 li
81.0606 34.0895 li
80.2607 34.0895 li
80.2607 33.2895 li
82.3406 33.2895 mo
87.4607 33.2895 li
87.4607 34.0895 li
82.3406 34.0895 li
82.3406 33.2895 li
88.7406 33.2895 mo
89.5406 33.2895 li
89.5406 34.0895 li
88.7406 34.0895 li
88.7406 33.2895 li
90.8207 33.2895 mo
95.9406 33.2895 li
95.9406 34.0895 li
90.8207 34.0895 li
90.8207 33.2895 li
97.2206 33.2895 mo
98.0207 33.2895 li
98.0207 34.0895 li
97.2206 34.0895 li
97.2206 33.2895 li
99.3006 33.2895 mo
104.421 33.2895 li
104.421 34.0895 li
99.3006 34.0895 li
99.3006 33.2895 li
105.701 33.2895 mo
106.501 33.2895 li
106.501 34.0895 li
105.701 34.0895 li
105.701 33.2895 li
107.781 33.2895 mo
112.901 33.2895 li
112.901 34.0895 li
107.781 34.0895 li
107.781 33.2895 li
114.181 33.2895 mo
114.981 33.2895 li
114.981 34.0895 li
114.181 34.0895 li
114.181 33.2895 li
116.261 33.2895 mo
121.381 33.2895 li
121.381 34.0895 li
116.261 34.0895 li
116.261 33.2895 li
122.661 33.2895 mo
123.461 33.2895 li
123.461 34.0895 li
122.661 34.0895 li
122.661 33.2895 li
124.741 33.2895 mo
129.861 33.2895 li
129.861 34.0895 li
124.741 34.0895 li
124.741 33.2895 li
131.141 33.2895 mo
131.941 33.2895 li
131.941 34.0895 li
131.141 34.0895 li
131.141 33.2895 li
133.221 33.2895 mo
138.341 33.2895 li
138.341 34.0895 li
133.221 34.0895 li
133.221 33.2895 li
139.621 33.2895 mo
140.421 33.2895 li
140.421 34.0895 li
139.621 34.0895 li
139.621 33.2895 li
141.701 33.2895 mo
146.821 33.2895 li
146.821 34.0895 li
141.701 34.0895 li
141.701 33.2895 li
148.101 33.2895 mo
148.901 33.2895 li
148.901 34.0895 li
148.101 34.0895 li
148.101 33.2895 li
150.181 33.2895 mo
155.301 33.2895 li
155.301 34.0895 li
150.181 34.0895 li
150.181 33.2895 li
156.581 33.2895 mo
157.381 33.2895 li
157.381 34.0895 li
156.581 34.0895 li
156.581 33.2895 li
158.661 33.2895 mo
163.781 33.2895 li
163.781 34.0895 li
158.661 34.0895 li
158.661 33.2895 li
165.061 33.2895 mo
165.861 33.2895 li
165.861 34.0895 li
165.061 34.0895 li
165.061 33.2895 li
167.141 33.2895 mo
172.261 33.2895 li
172.261 34.0895 li
167.141 34.0895 li
167.141 33.2895 li
173.541 33.2895 mo
174.341 33.2895 li
174.341 34.0895 li
173.541 34.0895 li
173.541 33.2895 li
175.621 33.2895 mo
180.741 33.2895 li
180.741 34.0895 li
175.621 34.0895 li
175.621 33.2895 li
182.021 33.2895 mo
182.821 33.2895 li
182.821 34.0895 li
182.021 34.0895 li
182.021 33.2895 li
184.101 33.2895 mo
189.221 33.2895 li
189.221 34.0895 li
184.101 34.0895 li
184.101 33.2895 li
190.501 33.2895 mo
191.301 33.2895 li
191.301 34.0895 li
190.501 34.0895 li
190.501 33.2895 li
192.581 33.2895 mo
197.701 33.2895 li
197.701 34.0895 li
192.581 34.0895 li
192.581 33.2895 li
198.981 33.2895 mo
199.781 33.2895 li
199.781 34.0895 li
198.981 34.0895 li
198.981 33.2895 li
201.061 33.2895 mo
206.181 33.2895 li
206.181 34.0895 li
201.061 34.0895 li
201.061 33.2895 li
207.461 33.2895 mo
208.261 33.2895 li
208.261 34.0895 li
207.461 34.0895 li
207.461 33.2895 li
209.541 33.2895 mo
214.661 33.2895 li
214.661 34.0895 li
209.541 34.0895 li
209.541 33.2895 li
215.941 33.2895 mo
216.741 33.2895 li
216.741 34.0895 li
215.941 34.0895 li
215.941 33.2895 li
218.021 33.2895 mo
223.141 33.2895 li
223.141 34.0895 li
218.021 34.0895 li
218.021 33.2895 li
224.421 33.2895 mo
225.221 33.2895 li
225.221 34.0895 li
224.421 34.0895 li
224.421 33.2895 li
226.501 33.2895 mo
231.621 33.2895 li
231.621 34.0895 li
226.501 34.0895 li
226.501 33.2895 li
232.901 33.2895 mo
233.701 33.2895 li
233.701 34.0895 li
232.901 34.0895 li
232.901 33.2895 li
234.981 33.2895 mo
240.101 33.2895 li
240.101 34.0895 li
234.981 34.0895 li
234.981 33.2895 li
241.381 33.2895 mo
242.181 33.2895 li
242.181 34.0895 li
241.381 34.0895 li
241.381 33.2895 li
243.461 33.2895 mo
248.581 33.2895 li
248.581 34.0895 li
243.461 34.0895 li
243.461 33.2895 li
249.861 33.2895 mo
250.661 33.2895 li
250.661 34.0895 li
249.861 34.0895 li
249.861 33.2895 li
251.941 33.2895 mo
257.061 33.2895 li
257.061 34.0895 li
251.941 34.0895 li
251.941 33.2895 li
258.341 33.2895 mo
259.141 33.2895 li
259.141 34.0895 li
258.341 34.0895 li
258.341 33.2895 li
260.421 33.2895 mo
265.541 33.2895 li
265.541 34.0895 li
260.421 34.0895 li
260.421 33.2895 li
266.821 33.2895 mo
267.621 33.2895 li
267.621 34.0895 li
266.821 34.0895 li
266.821 33.2895 li
268.901 33.2895 mo
274.021 33.2895 li
274.021 34.0895 li
268.901 34.0895 li
268.901 33.2895 li
275.301 33.2895 mo
276.101 33.2895 li
276.101 34.0895 li
275.301 34.0895 li
275.301 33.2895 li
277.381 33.2895 mo
282.501 33.2895 li
282.501 34.0895 li
277.381 34.0895 li
277.381 33.2895 li
283.781 33.2895 mo
284.581 33.2895 li
284.581 34.0895 li
283.781 34.0895 li
283.781 33.2895 li
285.861 33.2895 mo
290.981 33.2895 li
290.981 34.0895 li
285.861 34.0895 li
285.861 33.2895 li
292.261 33.2895 mo
293.061 33.2895 li
293.061 34.0895 li
292.261 34.0895 li
292.261 33.2895 li
294.341 33.2895 mo
299.461 33.2895 li
299.461 34.0895 li
294.341 34.0895 li
294.341 33.2895 li
300.741 33.2895 mo
301.541 33.2895 li
301.541 34.0895 li
300.741 34.0895 li
300.741 33.2895 li
302.821 33.2895 mo
307.941 33.2895 li
307.941 34.0895 li
302.821 34.0895 li
302.821 33.2895 li
309.221 33.2895 mo
310.021 33.2895 li
310.021 34.0895 li
309.221 34.0895 li
309.221 33.2895 li
311.301 33.2895 mo
316.421 33.2895 li
316.421 34.0895 li
311.301 34.0895 li
311.301 33.2895 li
317.701 33.2895 mo
318.501 33.2895 li
318.501 34.0895 li
317.701 34.0895 li
317.701 33.2895 li
319.781 33.2895 mo
324.901 33.2895 li
324.901 34.0895 li
319.781 34.0895 li
319.781 33.2895 li
326.181 33.2895 mo
326.981 33.2895 li
326.981 34.0895 li
326.181 34.0895 li
326.181 33.2895 li
328.261 33.2895 mo
333.381 33.2895 li
333.381 34.0895 li
328.261 34.0895 li
328.261 33.2895 li
334.661 33.2895 mo
335.461 33.2895 li
335.461 34.0895 li
334.661 34.0895 li
334.661 33.2895 li
336.74 33.2895 mo
341.861 33.2895 li
341.861 34.0895 li
336.74 34.0895 li
336.74 33.2895 li
343.141 33.2895 mo
343.94 33.2895 li
343.94 34.0895 li
343.141 34.0895 li
343.141 33.2895 li
345.221 33.2895 mo
350.341 33.2895 li
350.341 34.0895 li
345.221 34.0895 li
345.221 33.2895 li
351.62 33.2895 mo
352.421 33.2895 li
352.421 34.0895 li
351.62 34.0895 li
351.62 33.2895 li
353.701 33.2895 mo
358.82 33.2895 li
358.82 34.0895 li
353.701 34.0895 li
353.701 33.2895 li
360.1 33.2895 mo
360.901 33.2895 li
360.901 34.0895 li
360.1 34.0895 li
360.1 33.2895 li
362.18 33.2895 mo
367.301 33.2895 li
367.301 34.0895 li
362.18 34.0895 li
362.18 33.2895 li
368.581 33.2895 mo
369.38 33.2895 li
369.38 34.0895 li
368.581 34.0895 li
368.581 33.2895 li
370.66 33.2895 mo
375.781 33.2895 li
375.781 34.0895 li
370.66 34.0895 li
370.66 33.2895 li
377.06 33.2895 mo
377.861 33.2895 li
377.861 34.0895 li
377.06 34.0895 li
377.06 33.2895 li
379.14 33.2895 mo
384.26 33.2895 li
384.26 34.0895 li
379.14 34.0895 li
379.14 33.2895 li
385.54 33.2895 mo
386.34 33.2895 li
386.34 34.0895 li
385.54 34.0895 li
385.54 33.2895 li
387.62 33.2895 mo
392.74 33.2895 li
392.74 34.0895 li
387.62 34.0895 li
387.62 33.2895 li
394.02 33.2895 mo
394.82 33.2895 li
394.82 34.0895 li
394.02 34.0895 li
394.02 33.2895 li
396.1 33.2895 mo
401.22 33.2895 li
401.22 34.0895 li
396.1 34.0895 li
396.1 33.2895 li
402.5 33.2895 mo
403.3 33.2895 li
403.3 34.0895 li
402.5 34.0895 li
402.5 33.2895 li
404.58 33.2895 mo
409.7 33.2895 li
409.7 34.0895 li
404.58 34.0895 li
404.58 33.2895 li
410.98 33.2895 mo
411.78 33.2895 li
411.78 34.0895 li
410.98 34.0895 li
410.98 33.2895 li
413.06 33.2895 mo
418.18 33.2895 li
418.18 34.0895 li
413.06 34.0895 li
413.06 33.2895 li
419.46 33.2895 mo
420.26 33.2895 li
420.26 34.0895 li
419.46 34.0895 li
419.46 33.2895 li
421.54 33.2895 mo
426.66 33.2895 li
426.66 34.0895 li
421.54 34.0895 li
421.54 33.2895 li
427.94 33.2895 mo
428.74 33.2895 li
428.74 34.0895 li
427.94 34.0895 li
427.94 33.2895 li
430.02 33.2895 mo
430.981 33.2895 li
430.981 34.0895 li
430.02 34.0895 li
430.02 33.2895 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
73.8606 33.6895 mo
70.3606 33.6895 li
f
73.8606 33.6895 mo
70.3606 33.6895 li
@
26.9937 38.432 mo
26.9937 37.262 li
27.3057 37.418 27.6307 37.535 27.9688 37.613 cv
28.2937 37.691 28.6187 37.73 28.9437 37.73 cv
29.7757 37.73 30.4257 37.457 30.8677 36.885 cv
31.3097 36.313 31.5697 35.455 31.6477 34.285 cv
31.3877 34.649 31.0757 34.935 30.7118 35.13 cv
30.3347 35.325 29.9187 35.416 29.4637 35.416 cv
28.5017 35.416 27.7477 35.13 27.2017 34.558 cv
26.6558 33.986 26.3827 33.206 26.3827 32.205 cv
26.3827 31.243 26.6687 30.463 27.2407 29.865 cv
27.8127 29.28 28.5798 28.981 29.5417 28.981 cv
30.6337 28.981 31.4787 29.41 32.0508 30.242 cv
32.6227 31.087 32.9217 32.309 32.9217 33.895 cv
32.9217 35.403 32.5578 36.586 31.8557 37.47 cv
31.1407 38.354 30.1917 38.796 28.9958 38.796 cv
28.6707 38.796 28.3457 38.757 28.0208 38.705 cv
27.6827 38.653 27.3447 38.562 26.9937 38.432 cv
29.5417 34.415 mo
30.1138 34.415 30.5687 34.22 30.9067 33.83 cv
31.2447 33.44 31.4137 32.894 31.4137 32.205 cv
31.4137 31.529 31.2447 30.983 30.9067 30.593 cv
30.5687 30.203 30.1138 29.995 29.5417 29.995 cv
28.9697 29.995 28.5147 30.203 28.1768 30.593 cv
27.8387 30.983 27.6698 31.529 27.6698 32.205 cv
27.6698 32.894 27.8387 33.44 28.1768 33.83 cv
28.5147 34.22 28.9697 34.415 29.5417 34.415 cv
f
37.9658 29.995 mo
37.3028 29.995 36.8088 30.32 36.4708 30.97 cv
36.1328 31.62 35.9768 32.595 35.9768 33.895 cv
35.9768 35.195 36.1328 36.17 36.4708 36.82 cv
36.8088 37.47 37.3028 37.795 37.9658 37.795 cv
38.6288 37.795 39.1228 37.47 39.4608 36.82 cv
39.7858 36.17 39.9548 35.195 39.9548 33.895 cv
39.9548 32.595 39.7858 31.62 39.4608 30.97 cv
39.1228 30.32 38.6288 29.995 37.9658 29.995 cv
37.9658 28.981 mo
39.0188 28.981 39.8248 29.41 40.3968 30.242 cv
40.9558 31.087 41.2418 32.309 41.2418 33.895 cv
41.2418 35.494 40.9558 36.716 40.3968 37.548 cv
39.8248 38.38 39.0188 38.796 37.9658 38.796 cv
36.8998 38.796 36.0808 38.38 35.5218 37.548 cv
34.9628 36.716 34.6898 35.494 34.6898 33.895 cv
34.6898 32.309 34.9628 31.087 35.5218 30.242 cv
36.0808 29.41 36.8998 28.981 37.9658 28.981 cv
f
43.4908 37.015 mo
44.8298 37.015 li
44.8298 38.627 li
43.4908 38.627 li
43.4908 37.015 li
f
50.3677 29.995 mo
49.7047 29.995 49.2107 30.32 48.8727 30.97 cv
48.5347 31.62 48.3787 32.595 48.3787 33.895 cv
48.3787 35.195 48.5347 36.17 48.8727 36.82 cv
49.2107 37.47 49.7047 37.795 50.3677 37.795 cv
51.0307 37.795 51.5247 37.47 51.8627 36.82 cv
52.1877 36.17 52.3567 35.195 52.3567 33.895 cv
52.3567 32.595 52.1877 31.62 51.8627 30.97 cv
51.5247 30.32 51.0307 29.995 50.3677 29.995 cv
50.3677 28.981 mo
51.4207 28.981 52.2267 29.41 52.7987 30.242 cv
53.3577 31.087 53.6437 32.309 53.6437 33.895 cv
53.6437 35.494 53.3577 36.716 52.7987 37.548 cv
52.2267 38.38 51.4207 38.796 50.3677 38.796 cv
49.3017 38.796 48.4827 38.38 47.9237 37.548 cv
47.3647 36.716 47.0917 35.494 47.0917 33.895 cv
47.0917 32.309 47.3647 31.087 47.9237 30.242 cv
48.4827 29.41 49.3017 28.981 50.3677 28.981 cv
f
63.9527 34.454 mo
63.5887 34.454 63.2897 34.61 63.0817 34.922 cv
62.8737 35.234 62.7697 35.676 62.7697 36.235 cv
62.7697 36.781 62.8737 37.223 63.0817 37.535 cv
63.2897 37.847 63.5887 38.003 63.9527 38.003 cv
64.3167 38.003 64.6027 37.847 64.8107 37.535 cv
65.0187 37.223 65.1227 36.781 65.1227 36.235 cv
65.1227 35.689 65.0187 35.247 64.8107 34.935 cv
64.6027 34.623 64.3167 34.454 63.9527 34.454 cv
63.9527 33.648 mo
64.6157 33.648 65.1487 33.882 65.5387 34.35 cv
65.9287 34.818 66.1367 35.455 66.1367 36.235 cv
66.1367 37.028 65.9287 37.652 65.5387 38.107 cv
65.1487 38.575 64.6157 38.796 63.9527 38.796 cv
63.2767 38.796 62.7307 38.575 62.3407 38.107 cv
61.9507 37.652 61.7557 37.028 61.7557 36.235 cv
61.7557 35.442 61.9507 34.818 62.3407 34.35 cv
62.7307 33.882 63.2767 33.648 63.9527 33.648 cv
57.4007 29.787 mo
57.0367 29.787 56.7507 29.956 56.5427 30.268 cv
56.3347 30.58 56.2307 31.009 56.2307 31.555 cv
56.2307 32.127 56.3347 32.556 56.5427 32.868 cv
56.7507 33.18 57.0367 33.336 57.4007 33.336 cv
57.7647 33.336 58.0637 33.18 58.2717 32.868 cv
58.4797 32.556 58.5837 32.127 58.5837 31.555 cv
58.5837 31.009 58.4667 30.58 58.2587 30.268 cv
58.0507 29.956 57.7647 29.787 57.4007 29.787 cv
63.1337 28.981 mo
64.1477 28.981 li
58.2197 38.796 li
57.2057 38.796 li
63.1337 28.981 li
57.4007 28.981 mo
58.0637 28.981 58.5967 29.215 58.9997 29.683 cv
59.3897 30.151 59.5977 30.775 59.5977 31.555 cv
59.5977 32.361 59.3897 32.985 58.9997 33.453 cv
58.6097 33.921 58.0767 34.142 57.4007 34.142 cv
56.7247 34.142 56.1917 33.921 55.8017 33.453 cv
55.4117 32.985 55.2167 32.361 55.2167 31.555 cv
55.2167 30.775 55.4117 30.151 55.8017 29.683 cv
56.1917 29.215 56.7247 28.981 57.4007 28.981 cv
f
gsave
73.8606 257.945 mo
430.981 257.945 li
430.981 5.65753 li
73.8606 5.65753 li
73.8606 257.945 li
clp
[5.12 1.28 .8 1.28 ] 0 dsh
73.8606 5.6575 mo
430.981 5.6575 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
73.8606 5.6575 mo
70.3606 5.6575 li
f
73.8606 5.6575 mo
70.3606 5.6575 li
@
18.9101 9.516 mo
21.0031 9.516 li
21.0031 2.288 li
18.7281 2.743 li
18.7281 1.573 li
20.9901 1.118 li
22.2771 1.118 li
22.2771 9.516 li
24.3701 9.516 li
24.3701 10.595 li
18.9101 10.595 li
18.9101 9.516 li
f
29.7001 1.963 mo
29.0371 1.963 28.5431 2.288 28.2051 2.938 cv
27.8671 3.588 27.7111 4.563 27.7111 5.863 cv
27.7111 7.163 27.8671 8.138 28.2051 8.788 cv
28.5431 9.438 29.0371 9.763 29.7001 9.763 cv
30.3631 9.763 30.8571 9.438 31.1951 8.788 cv
31.5201 8.138 31.6891 7.163 31.6891 5.863 cv
31.6891 4.563 31.5201 3.588 31.1951 2.938 cv
30.8571 2.288 30.3631 1.963 29.7001 1.963 cv
29.7001 .949001 mo
30.7531 .949001 31.5591 1.378 32.1311 2.21 cv
32.6901 3.055 32.9761 4.277 32.9761 5.863 cv
32.9761 7.462 32.6901 8.684 32.1311 9.516 cv
31.5591 10.348 30.7531 10.764 29.7001 10.764 cv
28.6341 10.764 27.8151 10.348 27.2561 9.516 cv
26.6971 8.684 26.4241 7.462 26.4241 5.863 cv
26.4241 4.277 26.6971 3.055 27.2561 2.21 cv
27.8151 1.378 28.6341 .949001 29.7001 .949001 cv
f
37.9682 1.963 mo
37.3052 1.963 36.8112 2.288 36.4732 2.938 cv
36.1352 3.588 35.9792 4.563 35.9792 5.863 cv
35.9792 7.163 36.1352 8.138 36.4732 8.788 cv
36.8112 9.438 37.3052 9.763 37.9682 9.763 cv
38.6312 9.763 39.1252 9.438 39.4632 8.788 cv
39.7882 8.138 39.9572 7.163 39.9572 5.863 cv
39.9572 4.563 39.7882 3.588 39.4632 2.938 cv
39.1252 2.288 38.6312 1.963 37.9682 1.963 cv
37.9682 .949001 mo
39.0212 .949001 39.8272 1.378 40.3992 2.21 cv
40.9582 3.055 41.2442 4.277 41.2442 5.863 cv
41.2442 7.462 40.9582 8.684 40.3992 9.516 cv
39.8272 10.348 39.0212 10.764 37.9682 10.764 cv
36.9022 10.764 36.0832 10.348 35.5242 9.516 cv
34.9652 8.684 34.6922 7.462 34.6922 5.863 cv
34.6922 4.277 34.9652 3.055 35.5242 2.21 cv
36.0832 1.378 36.9022 .949001 37.9682 .949001 cv
f
43.4932 8.983 mo
44.8322 8.983 li
44.8322 10.595 li
43.4932 10.595 li
43.4932 8.983 li
f
50.3701 1.963 mo
49.7071 1.963 49.2131 2.288 48.8751 2.938 cv
48.5371 3.588 48.3811 4.563 48.3811 5.863 cv
48.3811 7.163 48.5371 8.138 48.8751 8.788 cv
49.2131 9.438 49.7071 9.763 50.3701 9.763 cv
51.0331 9.763 51.5271 9.438 51.8651 8.788 cv
52.1901 8.138 52.3591 7.163 52.3591 5.863 cv
52.3591 4.563 52.1901 3.588 51.8651 2.938 cv
51.5271 2.288 51.0331 1.963 50.3701 1.963 cv
50.3701 .949001 mo
51.4231 .949001 52.2291 1.378 52.8011 2.21 cv
53.3601 3.055 53.6461 4.277 53.6461 5.863 cv
53.6461 7.462 53.3601 8.684 52.8011 9.516 cv
52.2291 10.348 51.4231 10.764 50.3701 10.764 cv
49.3041 10.764 48.4851 10.348 47.9261 9.516 cv
47.3671 8.684 47.0941 7.462 47.0941 5.863 cv
47.0941 4.277 47.3671 3.055 47.9261 2.21 cv
48.4851 1.378 49.3041 .949001 50.3701 .949001 cv
f
63.9551 6.422 mo
63.5911 6.422 63.2921 6.578 63.0841 6.89 cv
62.8761 7.202 62.7721 7.644 62.7721 8.203 cv
62.7721 8.749 62.8761 9.191 63.0841 9.503 cv
63.2921 9.815 63.5911 9.971 63.9551 9.971 cv
64.3191 9.971 64.6051 9.815 64.8131 9.503 cv
65.0211 9.191 65.1251 8.749 65.1251 8.203 cv
65.1251 7.657 65.0211 7.215 64.8131 6.903 cv
64.6051 6.591 64.3191 6.422 63.9551 6.422 cv
63.9551 5.616 mo
64.6181 5.616 65.1511 5.85 65.5411 6.318 cv
65.9311 6.786 66.1391 7.423 66.1391 8.203 cv
66.1391 8.996 65.9311 9.62 65.5411 10.075 cv
65.1511 10.543 64.6181 10.764 63.9551 10.764 cv
63.2791 10.764 62.7331 10.543 62.3431 10.075 cv
61.9531 9.62 61.7581 8.996 61.7581 8.203 cv
61.7581 7.41 61.9531 6.786 62.3431 6.318 cv
62.7331 5.85 63.2791 5.616 63.9551 5.616 cv
57.4031 1.755 mo
57.0391 1.755 56.7531 1.924 56.5451 2.236 cv
56.3371 2.548 56.2331 2.977 56.2331 3.523 cv
56.2331 4.095 56.3371 4.524 56.5451 4.836 cv
56.7531 5.148 57.0391 5.304 57.4031 5.304 cv
57.7671 5.304 58.0661 5.148 58.2741 4.836 cv
58.4821 4.524 58.5861 4.095 58.5861 3.523 cv
58.5861 2.977 58.4691 2.548 58.2611 2.236 cv
58.0531 1.924 57.7671 1.755 57.4031 1.755 cv
63.1361 .949001 mo
64.1501 .949001 li
58.2221 10.764 li
57.2081 10.764 li
63.1361 .949001 li
57.4031 .949001 mo
58.0661 .949001 58.5991 1.183 59.0021 1.651 cv
59.3921 2.119 59.6001 2.743 59.6001 3.523 cv
59.6001 4.329 59.3921 4.953 59.0021 5.421 cv
58.6121 5.889 58.0791 6.11 57.4031 6.11 cv
56.7271 6.11 56.1941 5.889 55.8041 5.421 cv
55.4141 4.953 55.2191 4.329 55.2191 3.523 cv
55.2191 2.743 55.4141 2.119 55.8041 1.651 cv
56.1941 1.183 56.7271 .949001 57.4031 .949001 cv
f
1.118 144.09 mo
1.118 138.097 li
2.197 138.097 li
2.197 142.803 li
5.005 142.803 li
5.005 138.292 li
6.084 138.292 li
6.084 142.803 li
9.516 142.803 li
9.516 137.98 li
10.595 137.98 li
10.595 144.09 li
1.118 144.09 li
f
10.595 133.43 mo
1.118 137.044 li
1.118 135.705 li
9.1 132.702 li
1.118 129.699 li
1.118 128.36 li
10.595 131.974 li
10.595 133.43 li
f
2.171 125.695 mo
9.542 125.695 li
9.542 124.148 li
9.542 122.848 9.256 121.886 8.658 121.275 cv
8.06 120.677 7.124 120.365 5.85 120.365 cv
4.576 120.365 3.653 120.677 3.055 121.275 cv
2.47 121.886 2.171 122.848 2.171 124.148 cv
2.171 125.695 li
1.118 126.982 mo
1.118 124.343 li
1.118 122.51 1.508 121.158 2.262 120.3 cv
3.029 119.442 4.225 119.013 5.85 119.013 cv
7.488 119.013 8.684 119.455 9.451 120.313 cv
10.218 121.171 10.595 122.523 10.595 124.343 cv
10.595 126.982 li
1.118 126.982 li
f
90.8616 251.82 mo
126.574 192.953 li
126.612 192.894 li
162.293 142.482 li
197.978 78.0561 li
198.035 77.9523 198.109 77.8614 198.199 77.7838 cv
233.911 46.9486 li
234.017 46.8573 234.132 46.7932 234.265 46.7514 cv
269.977 35.5386 li
270.198 35.4958 li
305.762 32.7042 li
341.335 18.7426 li
341.569 18.6507 341.832 18.6507 342.066 18.7426 cv
377.526 32.6595 li
413.957 26.9401 li
414.268 28.916 li
377.568 34.6774 li
377.39 34.7054 377.215 34.6861 377.047 34.6204 cv
341.701 20.7478 li
306.354 34.6204 li
306.258 34.6579 306.169 34.6785 306.067 34.6864 cv
270.468 37.4808 li
235.062 48.5976 li
199.641 79.1811 li
164.015 143.499 li
163.957 143.592 li
128.265 194.021 li
92.0529 253.713 li
90.343 252.675 li
90.8616 251.82 li
/1 
[/DeviceCMYK] /CSA add_res
.847868 .481636 .0599985 .000640879 cmyk
f
gsave
87.9666 256.089 mo
95.4666 256.089 li
95.4666 248.589 li
87.9666 248.589 li
87.9666 256.089 li
clp
88.4666 255.589 mo
94.9666 255.589 li
94.9666 249.089 li
88.4666 249.089 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
88.4666 255.589 mo
94.9666 255.589 li
94.9666 249.089 li
88.4666 249.089 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
123.679 197.222 mo
131.179 197.222 li
131.179 189.722 li
123.679 189.722 li
123.679 197.222 li
clp
124.179 196.722 mo
130.679 196.722 li
130.679 190.222 li
124.179 190.222 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
124.179 196.722 mo
130.679 196.722 li
130.679 190.222 li
124.179 190.222 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
159.391 146.764 mo
166.891 146.764 li
166.891 139.264 li
159.391 139.264 li
159.391 146.764 li
clp
159.891 146.264 mo
166.391 146.264 li
166.391 139.764 li
159.891 139.764 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
159.891 146.264 mo
166.391 146.264 li
166.391 139.764 li
159.891 139.764 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
195.103 82.2907 mo
202.603 82.2907 li
202.603 74.7907 li
195.103 74.7907 li
195.103 82.2907 li
clp
195.603 81.7907 mo
202.103 81.7907 li
202.103 75.2907 li
195.603 75.2907 li
195.603 81.7907 li
.302342 .0311284 .066041 0 cmyk
f
195.603 81.7907 mo
195.603 81.2907 li
201.603 81.2907 li
201.603 75.7907 li
196.103 75.7907 li
196.103 81.7907 li
195.603 81.7907 li
195.603 81.2907 li
195.603 81.7907 li
195.103 81.7907 li
195.103 74.7907 li
202.603 74.7907 li
202.603 82.2907 li
195.103 82.2907 li
195.103 81.7907 li
195.603 81.7907 li
.883665 .769162 0 0 cmyk
f
grestore
gsave
230.815 51.4555 mo
238.315 51.4555 li
238.315 43.9555 li
230.815 43.9555 li
230.815 51.4555 li
clp
231.315 50.9555 mo
237.815 50.9555 li
237.815 44.4555 li
231.315 44.4555 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
231.315 50.9555 mo
237.815 50.9555 li
237.815 44.4555 li
231.315 44.4555 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
266.527 40.2427 mo
274.027 40.2427 li
274.027 32.7427 li
266.527 32.7427 li
266.527 40.2427 li
clp
267.027 39.7427 mo
273.527 39.7427 li
273.527 33.2427 li
267.027 33.2427 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
267.027 39.7427 mo
273.527 39.7427 li
273.527 33.2427 li
267.027 33.2427 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
302.239 37.4394 mo
309.739 37.4394 li
309.739 29.9394 li
302.239 29.9394 li
302.239 37.4394 li
clp
302.739 36.9395 mo
309.239 36.9395 li
309.239 30.4395 li
302.739 30.4395 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
302.739 36.9395 mo
309.239 36.9395 li
309.239 30.4395 li
302.739 30.4395 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
337.951 23.4235 mo
345.451 23.4235 li
345.451 15.9235 li
337.951 15.9235 li
337.951 23.4235 li
clp
338.451 22.9235 mo
344.951 22.9235 li
344.951 16.4235 li
338.451 16.4235 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
338.451 22.9235 mo
344.951 22.9235 li
344.951 16.4235 li
338.451 16.4235 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
373.663 37.4394 mo
381.163 37.4394 li
381.163 29.9394 li
373.663 29.9394 li
373.663 37.4394 li
clp
374.163 36.9395 mo
380.663 36.9395 li
380.663 30.4395 li
374.163 30.4395 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
374.163 36.9395 mo
380.663 36.9395 li
380.663 30.4395 li
374.163 30.4395 li
cp
.883665 .769162 0 0 cmyk
@
grestore
gsave
409.375 31.8331 mo
416.875 31.8331 li
416.875 24.3331 li
409.375 24.3331 li
409.375 31.8331 li
clp
409.875 31.3331 mo
416.375 31.3331 li
416.375 24.8331 li
409.875 24.8331 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lj
409.875 31.3331 mo
416.375 31.3331 li
416.375 24.8331 li
409.875 24.8331 li
cp
.883665 .769162 0 0 cmyk
@
grestore
2 lc
91.7166 246.733 mo
127.429 182.259 li
163.141 126.195 li
198.853 103.77 li
234.565 84.1471 li
270.277 53.3119 li
305.989 61.7215 li
341.701 53.3119 li
377.413 44.9023 li
413.125 50.5087 li
0 .620539 1 0 cmyk
@
gsave
88.7166 249.733 mo
94.7166 249.733 li
94.7166 243.733 li
88.7166 243.733 li
88.7166 249.733 li
clp
91.7166 249.233 mo
92.3796 249.233 93.0156 248.969 93.4844 248.5 cv
93.9532 248.032 94.2166 247.396 94.2166 246.733 cv
94.2166 246.07 93.9532 245.434 93.4844 244.965 cv
93.0156 244.496 92.3796 244.233 91.7166 244.233 cv
91.0536 244.233 90.4177 244.496 89.9489 244.965 cv
89.48 245.434 89.2166 246.07 89.2166 246.733 cv
89.2166 247.396 89.48 248.032 89.9489 248.5 cv
90.4177 248.969 91.0536 249.233 91.7166 249.233 cv
cp
f
1 lw
0 lc
91.7166 249.233 mo
92.3796 249.233 93.0156 248.969 93.4844 248.5 cv
93.9532 248.032 94.2166 247.396 94.2166 246.733 cv
94.2166 246.07 93.9532 245.434 93.4844 244.965 cv
93.0156 244.496 92.3796 244.233 91.7166 244.233 cv
91.0536 244.233 90.4177 244.496 89.9489 244.965 cv
89.48 245.434 89.2166 246.07 89.2166 246.733 cv
89.2166 247.396 89.48 248.032 89.9489 248.5 cv
90.4177 248.969 91.0536 249.233 91.7166 249.233 cv
cp
@
grestore
gsave
124.429 185.259 mo
130.429 185.259 li
130.429 179.259 li
124.429 179.259 li
124.429 185.259 li
clp
127.429 184.759 mo
128.092 184.759 128.728 184.496 129.196 184.027 cv
129.665 183.558 129.929 182.922 129.929 182.259 cv
129.929 181.596 129.665 180.96 129.196 180.491 cv
128.728 180.023 128.092 179.759 127.429 179.759 cv
126.766 179.759 126.13 180.023 125.661 180.491 cv
125.192 180.96 124.929 181.596 124.929 182.259 cv
124.929 182.922 125.192 183.558 125.661 184.027 cv
126.13 184.496 126.766 184.759 127.429 184.759 cv
cp
f
1 lw
0 lc
127.429 184.759 mo
128.092 184.759 128.728 184.496 129.196 184.027 cv
129.665 183.558 129.929 182.922 129.929 182.259 cv
129.929 181.596 129.665 180.96 129.196 180.491 cv
128.728 180.023 128.092 179.759 127.429 179.759 cv
126.766 179.759 126.13 180.023 125.661 180.491 cv
125.192 180.96 124.929 181.596 124.929 182.259 cv
124.929 182.922 125.192 183.558 125.661 184.027 cv
126.13 184.496 126.766 184.759 127.429 184.759 cv
cp
@
grestore
gsave
160.141 129.195 mo
166.141 129.195 li
166.141 123.195 li
160.141 123.195 li
160.141 129.195 li
clp
163.141 128.695 mo
163.804 128.695 164.44 128.432 164.908 127.963 cv
165.377 127.494 165.641 126.858 165.641 126.195 cv
165.641 125.532 165.377 124.896 164.908 124.427 cv
164.44 123.959 163.804 123.695 163.141 123.695 cv
162.478 123.695 161.842 123.959 161.373 124.427 cv
160.904 124.896 160.641 125.532 160.641 126.195 cv
160.641 126.858 160.904 127.494 161.373 127.963 cv
161.842 128.432 162.478 128.695 163.141 128.695 cv
cp
f
1 lw
0 lc
163.141 128.695 mo
163.804 128.695 164.44 128.432 164.908 127.963 cv
165.377 127.494 165.641 126.858 165.641 126.195 cv
165.641 125.532 165.377 124.896 164.908 124.427 cv
164.44 123.959 163.804 123.695 163.141 123.695 cv
162.478 123.695 161.842 123.959 161.373 124.427 cv
160.904 124.896 160.641 125.532 160.641 126.195 cv
160.641 126.858 160.904 127.494 161.373 127.963 cv
161.842 128.432 162.478 128.695 163.141 128.695 cv
cp
@
grestore
gsave
195.853 106.77 mo
201.853 106.77 li
201.853 100.769 li
195.853 100.769 li
195.853 106.77 li
clp
198.853 106.27 mo
199.516 106.27 200.152 106.006 200.62 105.537 cv
201.089 105.068 201.353 104.433 201.353 103.77 cv
201.353 103.106 201.089 102.471 200.62 102.002 cv
200.152 101.533 199.516 101.27 198.853 101.27 cv
198.19 101.27 197.554 101.533 197.085 102.002 cv
196.616 102.471 196.353 103.106 196.353 103.77 cv
196.353 104.433 196.616 105.068 197.085 105.537 cv
197.554 106.006 198.19 106.27 198.853 106.27 cv
cp
f
1 lw
0 lc
198.853 106.27 mo
199.516 106.27 200.152 106.006 200.62 105.537 cv
201.089 105.068 201.353 104.433 201.353 103.77 cv
201.353 103.106 201.089 102.471 200.62 102.002 cv
200.152 101.533 199.516 101.27 198.853 101.27 cv
198.19 101.27 197.554 101.533 197.085 102.002 cv
196.616 102.471 196.353 103.106 196.353 103.77 cv
196.353 104.433 196.616 105.068 197.085 105.537 cv
197.554 106.006 198.19 106.27 198.853 106.27 cv
cp
@
grestore
gsave
231.565 87.1471 mo
237.565 87.1471 li
237.565 81.1471 li
231.565 81.1471 li
231.565 87.1471 li
clp
234.565 86.6471 mo
235.228 86.6471 235.864 86.3837 236.332 85.9149 cv
236.801 85.446 237.065 84.8101 237.065 84.1471 cv
237.065 83.4841 236.801 82.8481 236.332 82.3793 cv
235.864 81.9105 235.228 81.6471 234.565 81.6471 cv
233.902 81.6471 233.266 81.9105 232.797 82.3793 cv
232.328 82.8481 232.065 83.4841 232.065 84.1471 cv
232.065 84.8101 232.328 85.446 232.797 85.9149 cv
233.266 86.3837 233.902 86.6471 234.565 86.6471 cv
cp
f
1 lw
0 lc
234.565 86.6471 mo
235.228 86.6471 235.864 86.3837 236.332 85.9149 cv
236.801 85.446 237.065 84.8101 237.065 84.1471 cv
237.065 83.4841 236.801 82.8481 236.332 82.3793 cv
235.864 81.9105 235.228 81.6471 234.565 81.6471 cv
233.902 81.6471 233.266 81.9105 232.797 82.3793 cv
232.328 82.8481 232.065 83.4841 232.065 84.1471 cv
232.065 84.8101 232.328 85.446 232.797 85.9149 cv
233.266 86.3837 233.902 86.6471 234.565 86.6471 cv
cp
@
grestore
gsave
267.277 56.3119 mo
273.277 56.3119 li
273.277 50.3119 li
267.277 50.3119 li
267.277 56.3119 li
clp
270.277 55.8119 mo
270.94 55.8119 271.576 55.5485 272.044 55.0797 cv
272.513 54.6108 272.777 53.9749 272.777 53.3119 cv
272.777 52.6489 272.513 52.0129 272.044 51.5441 cv
271.576 51.0753 270.94 50.8119 270.277 50.8119 cv
269.614 50.8119 268.978 51.0753 268.509 51.5441 cv
268.04 52.0129 267.777 52.6489 267.777 53.3119 cv
267.777 53.9749 268.04 54.6108 268.509 55.0797 cv
268.978 55.5485 269.614 55.8119 270.277 55.8119 cv
cp
f
1 lw
0 lc
270.277 55.8119 mo
270.94 55.8119 271.576 55.5485 272.044 55.0797 cv
272.513 54.6108 272.777 53.9749 272.777 53.3119 cv
272.777 52.6489 272.513 52.0129 272.044 51.5441 cv
271.576 51.0753 270.94 50.8119 270.277 50.8119 cv
269.614 50.8119 268.978 51.0753 268.509 51.5441 cv
268.04 52.0129 267.777 52.6489 267.777 53.3119 cv
267.777 53.9749 268.04 54.6108 268.509 55.0797 cv
268.978 55.5485 269.614 55.8119 270.277 55.8119 cv
cp
@
grestore
gsave
302.989 64.7215 mo
308.989 64.7215 li
308.989 58.7215 li
302.989 58.7215 li
302.989 64.7215 li
clp
305.989 64.2215 mo
306.652 64.2215 307.288 63.9581 307.756 63.4893 cv
308.225 63.0204 308.489 62.3845 308.489 61.7215 cv
308.489 61.0585 308.225 60.4225 307.756 59.9537 cv
307.288 59.4849 306.652 59.2215 305.989 59.2215 cv
305.326 59.2215 304.69 59.4849 304.221 59.9537 cv
303.752 60.4225 303.489 61.0585 303.489 61.7215 cv
303.489 62.3845 303.752 63.0204 304.221 63.4893 cv
304.69 63.9581 305.326 64.2215 305.989 64.2215 cv
cp
f
1 lw
0 lc
305.989 64.2215 mo
306.652 64.2215 307.288 63.9581 307.756 63.4893 cv
308.225 63.0204 308.489 62.3845 308.489 61.7215 cv
308.489 61.0585 308.225 60.4225 307.756 59.9537 cv
307.288 59.4849 306.652 59.2215 305.989 59.2215 cv
305.326 59.2215 304.69 59.4849 304.221 59.9537 cv
303.752 60.4225 303.489 61.0585 303.489 61.7215 cv
303.489 62.3845 303.752 63.0204 304.221 63.4893 cv
304.69 63.9581 305.326 64.2215 305.989 64.2215 cv
cp
@
grestore
gsave
338.701 56.3119 mo
344.701 56.3119 li
344.701 50.3119 li
338.701 50.3119 li
338.701 56.3119 li
clp
341.701 55.8119 mo
342.364 55.8119 343 55.5485 343.468 55.0797 cv
343.937 54.6108 344.201 53.9749 344.201 53.3119 cv
344.201 52.6489 343.937 52.0129 343.468 51.5441 cv
343 51.0753 342.364 50.8119 341.701 50.8119 cv
341.038 50.8119 340.402 51.0753 339.933 51.5441 cv
339.464 52.0129 339.201 52.6489 339.201 53.3119 cv
339.201 53.9749 339.464 54.6108 339.933 55.0797 cv
340.402 55.5485 341.038 55.8119 341.701 55.8119 cv
cp
f
1 lw
0 lc
341.701 55.8119 mo
342.364 55.8119 343 55.5485 343.468 55.0797 cv
343.937 54.6108 344.201 53.9749 344.201 53.3119 cv
344.201 52.6489 343.937 52.0129 343.468 51.5441 cv
343 51.0753 342.364 50.8119 341.701 50.8119 cv
341.038 50.8119 340.402 51.0753 339.933 51.5441 cv
339.464 52.0129 339.201 52.6489 339.201 53.3119 cv
339.201 53.9749 339.464 54.6108 339.933 55.0797 cv
340.402 55.5485 341.038 55.8119 341.701 55.8119 cv
cp
@
grestore
gsave
374.413 47.9023 mo
380.413 47.9023 li
380.413 41.9023 li
374.413 41.9023 li
374.413 47.9023 li
clp
377.413 47.4023 mo
378.076 47.4023 378.712 47.1389 379.18 46.6701 cv
379.649 46.2012 379.913 45.5653 379.913 44.9023 cv
379.913 44.2393 379.649 43.6033 379.18 43.1345 cv
378.712 42.6657 378.076 42.4023 377.413 42.4023 cv
376.75 42.4023 376.114 42.6657 375.645 43.1345 cv
375.176 43.6033 374.913 44.2393 374.913 44.9023 cv
374.913 45.5653 375.176 46.2012 375.645 46.6701 cv
376.114 47.1389 376.75 47.4023 377.413 47.4023 cv
cp
f
1 lw
0 lc
377.413 47.4023 mo
378.076 47.4023 378.712 47.1389 379.18 46.6701 cv
379.649 46.2012 379.913 45.5653 379.913 44.9023 cv
379.913 44.2393 379.649 43.6033 379.18 43.1345 cv
378.712 42.6657 378.076 42.4023 377.413 42.4023 cv
376.75 42.4023 376.114 42.6657 375.645 43.1345 cv
375.176 43.6033 374.913 44.2393 374.913 44.9023 cv
374.913 45.5653 375.176 46.2012 375.645 46.6701 cv
376.114 47.1389 376.75 47.4023 377.413 47.4023 cv
cp
@
grestore
gsave
410.125 53.5086 mo
416.125 53.5086 li
416.125 47.5086 li
410.125 47.5086 li
410.125 53.5086 li
clp
413.125 53.0087 mo
413.788 53.0087 414.424 52.7453 414.892 52.2765 cv
415.361 51.8076 415.625 51.1717 415.625 50.5087 cv
415.625 49.8457 415.361 49.2097 414.892 48.7409 cv
414.424 48.2721 413.788 48.0087 413.125 48.0087 cv
412.462 48.0087 411.826 48.2721 411.357 48.7409 cv
410.888 49.2097 410.625 49.8457 410.625 50.5087 cv
410.625 51.1717 410.888 51.8076 411.357 52.2765 cv
411.826 52.7453 412.462 53.0087 413.125 53.0087 cv
cp
f
1 lw
0 lc
413.125 53.0087 mo
413.788 53.0087 414.424 52.7453 414.892 52.2765 cv
415.361 51.8076 415.625 51.1717 415.625 50.5087 cv
415.625 49.8457 415.361 49.2097 414.892 48.7409 cv
414.424 48.2721 413.788 48.0087 413.125 48.0087 cv
412.462 48.0087 411.826 48.2721 411.357 48.7409 cv
410.888 49.2097 410.625 49.8457 410.625 50.5087 cv
410.625 51.1717 410.888 51.8076 411.357 52.2765 cv
411.826 52.7453 412.462 53.0087 413.125 53.0087 cv
cp
@
grestore
91.7166 229.913 mo
127.429 176.653 li
163.141 126.195 li
198.853 109.376 li
234.565 120.589 li
270.277 117.785 li
305.989 126.195 li
341.701 103.77 li
377.413 106.573 li
413.125 95.3599 li
.801419 .109255 1 .0133364 cmyk
@
gsave
88.7166 232.914 mo
94.7166 232.914 li
94.7166 226.914 li
88.7166 226.914 li
88.7166 232.914 li
clp
91.7166 232.413 mo
94.2166 227.413 li
89.2166 227.413 li
cp
f
1 lw
0 lc
0 lj
91.7166 232.413 mo
94.2166 227.413 li
89.2166 227.413 li
cp
@
grestore
gsave
124.429 179.653 mo
130.429 179.653 li
130.429 173.653 li
124.429 173.653 li
124.429 179.653 li
clp
127.429 179.153 mo
129.929 174.153 li
124.929 174.153 li
cp
f
1 lw
0 lc
0 lj
127.429 179.153 mo
129.929 174.153 li
124.929 174.153 li
cp
@
grestore
gsave
160.141 129.195 mo
166.141 129.195 li
166.141 123.195 li
160.141 123.195 li
160.141 129.195 li
clp
163.141 128.695 mo
165.641 123.695 li
160.641 123.695 li
cp
f
1 lw
0 lc
0 lj
163.141 128.695 mo
165.641 123.695 li
160.641 123.695 li
cp
@
grestore
gsave
195.853 112.376 mo
201.853 112.376 li
201.853 106.376 li
195.853 106.376 li
195.853 112.376 li
clp
198.853 111.876 mo
201.353 106.876 li
196.353 106.876 li
cp
f
1 lw
0 lc
0 lj
198.853 111.876 mo
201.353 106.876 li
196.353 106.876 li
cp
@
grestore
gsave
231.565 123.589 mo
237.565 123.589 li
237.565 117.589 li
231.565 117.589 li
231.565 123.589 li
clp
234.565 123.089 mo
237.065 118.089 li
232.065 118.089 li
cp
f
1 lw
0 lc
0 lj
234.565 123.089 mo
237.065 118.089 li
232.065 118.089 li
cp
@
grestore
gsave
267.277 120.785 mo
273.277 120.785 li
273.277 114.785 li
267.277 114.785 li
267.277 120.785 li
clp
270.277 120.285 mo
272.777 115.285 li
267.777 115.285 li
cp
f
1 lw
0 lc
0 lj
270.277 120.285 mo
272.777 115.285 li
267.777 115.285 li
cp
@
grestore
gsave
302.989 129.195 mo
308.989 129.195 li
308.989 123.195 li
302.989 123.195 li
302.989 129.195 li
clp
305.989 128.695 mo
308.489 123.695 li
303.489 123.695 li
cp
f
1 lw
0 lc
0 lj
305.989 128.695 mo
308.489 123.695 li
303.489 123.695 li
cp
@
grestore
gsave
338.701 106.77 mo
344.701 106.77 li
344.701 100.769 li
338.701 100.769 li
338.701 106.77 li
clp
341.701 106.27 mo
344.201 101.27 li
339.201 101.27 li
cp
f
1 lw
0 lc
0 lj
341.701 106.27 mo
344.201 101.27 li
339.201 101.27 li
cp
@
grestore
gsave
374.413 109.573 mo
380.413 109.573 li
380.413 103.573 li
374.413 103.573 li
374.413 109.573 li
clp
377.413 109.073 mo
379.913 104.073 li
374.913 104.073 li
cp
f
1 lw
0 lc
0 lj
377.413 109.073 mo
379.913 104.073 li
374.913 104.073 li
cp
@
grestore
gsave
410.125 98.3599 mo
416.125 98.3599 li
416.125 92.3599 li
410.125 92.3599 li
410.125 98.3599 li
clp
413.125 97.8599 mo
415.625 92.8599 li
410.625 92.8599 li
cp
f
1 lw
0 lc
0 lj
413.125 97.8599 mo
415.625 92.8599 li
410.625 92.8599 li
cp
@
grestore
91.7166 235.52 mo
127.429 154.227 li
163.141 145.817 li
198.853 137.408 li
234.565 140.211 li
270.277 126.195 li
305.989 117.785 li
341.701 123.392 li
377.413 109.376 li
413.125 114.982 li
.101625 .977569 .984863 .015259 cmyk
@
gsave
88.7166 238.52 mo
94.7166 238.52 li
94.7166 232.52 li
88.7166 232.52 li
88.7166 238.52 li
clp
91.7166 233.02 mo
89.2166 238.02 li
94.2166 238.02 li
cp
f
1 lw
0 lc
0 lj
91.7166 233.02 mo
89.2166 238.02 li
94.2166 238.02 li
cp
@
grestore
gsave
124.429 157.227 mo
130.429 157.227 li
130.429 151.227 li
124.429 151.227 li
124.429 157.227 li
clp
127.429 151.727 mo
124.929 156.727 li
129.929 156.727 li
cp
f
1 lw
0 lc
0 lj
127.429 151.727 mo
124.929 156.727 li
129.929 156.727 li
cp
@
grestore
gsave
160.141 148.817 mo
166.141 148.817 li
166.141 142.817 li
160.141 142.817 li
160.141 148.817 li
clp
163.141 143.317 mo
160.641 148.317 li
165.641 148.317 li
cp
f
1 lw
0 lc
0 lj
163.141 143.317 mo
160.641 148.317 li
165.641 148.317 li
cp
@
grestore
gsave
195.853 140.408 mo
201.853 140.408 li
201.853 134.408 li
195.853 134.408 li
195.853 140.408 li
clp
198.853 134.908 mo
196.353 139.908 li
201.353 139.908 li
cp
f
1 lw
0 lc
0 lj
198.853 134.908 mo
196.353 139.908 li
201.353 139.908 li
cp
@
grestore
gsave
231.565 143.211 mo
237.565 143.211 li
237.565 137.211 li
231.565 137.211 li
231.565 143.211 li
clp
234.565 137.711 mo
232.065 142.711 li
237.065 142.711 li
cp
f
1 lw
0 lc
0 lj
234.565 137.711 mo
232.065 142.711 li
237.065 142.711 li
cp
@
grestore
gsave
267.277 129.195 mo
273.277 129.195 li
273.277 123.195 li
267.277 123.195 li
267.277 129.195 li
clp
270.277 123.695 mo
267.777 128.695 li
272.777 128.695 li
cp
f
1 lw
0 lc
0 lj
270.277 123.695 mo
267.777 128.695 li
272.777 128.695 li
cp
@
grestore
gsave
302.989 120.785 mo
308.989 120.785 li
308.989 114.785 li
302.989 114.785 li
302.989 120.785 li
clp
305.989 115.285 mo
303.489 120.285 li
308.489 120.285 li
cp
f
1 lw
0 lc
0 lj
305.989 115.285 mo
303.489 120.285 li
308.489 120.285 li
cp
@
grestore
gsave
338.701 126.392 mo
344.701 126.392 li
344.701 120.392 li
338.701 120.392 li
338.701 126.392 li
clp
341.701 120.892 mo
339.201 125.892 li
344.201 125.892 li
cp
f
1 lw
0 lc
0 lj
341.701 120.892 mo
339.201 125.892 li
344.201 125.892 li
cp
@
grestore
gsave
374.413 112.376 mo
380.413 112.376 li
380.413 106.376 li
374.413 106.376 li
374.413 112.376 li
clp
377.413 106.876 mo
374.913 111.876 li
379.913 111.876 li
cp
f
1 lw
0 lc
0 lj
377.413 106.876 mo
374.913 111.876 li
379.913 111.876 li
cp
@
grestore
gsave
410.125 117.982 mo
416.125 117.982 li
416.125 111.982 li
410.125 111.982 li
410.125 117.982 li
clp
413.125 112.482 mo
410.625 117.482 li
415.625 117.482 li
cp
f
1 lw
0 lc
0 lj
413.125 112.482 mo
410.625 117.482 li
415.625 117.482 li
cp
@
grestore
91.7166 126.195 mo
127.429 165.44 li
163.141 187.865 li
198.853 201.882 li
234.565 227.11 li
270.277 232.717 li
305.989 235.52 li
341.701 238.323 li
377.413 238.323 li
413.125 239.725 li
.470466 .680446 0 0 cmyk
@
gsave
89.9666 127.945 mo
93.4667 127.945 li
93.4667 124.445 li
89.9666 124.445 li
89.9666 127.945 li
clp
91.7166 127.445 mo
92.0481 127.445 92.3661 127.313 92.6005 127.079 cv
92.8349 126.845 92.9666 126.527 92.9666 126.195 cv
92.9666 125.864 92.8349 125.546 92.6005 125.311 cv
92.3661 125.077 92.0481 124.945 91.7166 124.945 cv
91.3851 124.945 91.0671 125.077 90.8327 125.311 cv
90.5983 125.546 90.4666 125.864 90.4666 126.195 cv
90.4666 126.527 90.5983 126.845 90.8327 127.079 cv
91.0671 127.313 91.3851 127.445 91.7166 127.445 cv
cp
f
1 lw
0 lc
91.7166 127.445 mo
92.0481 127.445 92.3661 127.313 92.6005 127.079 cv
92.8349 126.845 92.9666 126.527 92.9666 126.195 cv
92.9666 125.864 92.8349 125.546 92.6005 125.311 cv
92.3661 125.077 92.0481 124.945 91.7166 124.945 cv
91.3851 124.945 91.0671 125.077 90.8327 125.311 cv
90.5983 125.546 90.4666 125.864 90.4666 126.195 cv
90.4666 126.527 90.5983 126.845 90.8327 127.079 cv
91.0671 127.313 91.3851 127.445 91.7166 127.445 cv
cp
@
grestore
gsave
125.679 167.19 mo
129.179 167.19 li
129.179 163.69 li
125.679 163.69 li
125.679 167.19 li
clp
127.429 166.69 mo
127.76 166.69 128.078 166.558 128.313 166.324 cv
128.547 166.089 128.679 165.771 128.679 165.44 cv
128.679 165.108 128.547 164.79 128.313 164.556 cv
128.078 164.322 127.76 164.19 127.429 164.19 cv
127.097 164.19 126.779 164.322 126.545 164.556 cv
126.31 164.79 126.179 165.108 126.179 165.44 cv
126.179 165.771 126.31 166.089 126.545 166.324 cv
126.779 166.558 127.097 166.69 127.429 166.69 cv
cp
f
1 lw
0 lc
127.429 166.69 mo
127.76 166.69 128.078 166.558 128.313 166.324 cv
128.547 166.089 128.679 165.771 128.679 165.44 cv
128.679 165.108 128.547 164.79 128.313 164.556 cv
128.078 164.322 127.76 164.19 127.429 164.19 cv
127.097 164.19 126.779 164.322 126.545 164.556 cv
126.31 164.79 126.179 165.108 126.179 165.44 cv
126.179 165.771 126.31 166.089 126.545 166.324 cv
126.779 166.558 127.097 166.69 127.429 166.69 cv
cp
@
grestore
gsave
161.391 189.615 mo
164.891 189.615 li
164.891 186.116 li
161.391 186.116 li
161.391 189.615 li
clp
163.141 189.115 mo
163.472 189.115 163.79 188.984 164.025 188.749 cv
164.259 188.515 164.391 188.197 164.391 187.865 cv
164.391 187.534 164.259 187.216 164.025 186.982 cv
163.79 186.747 163.472 186.615 163.141 186.615 cv
162.809 186.615 162.491 186.747 162.257 186.982 cv
162.022 187.216 161.891 187.534 161.891 187.865 cv
161.891 188.197 162.022 188.515 162.257 188.749 cv
162.491 188.984 162.809 189.115 163.141 189.115 cv
cp
f
1 lw
0 lc
163.141 189.115 mo
163.472 189.115 163.79 188.984 164.025 188.749 cv
164.259 188.515 164.391 188.197 164.391 187.865 cv
164.391 187.534 164.259 187.216 164.025 186.982 cv
163.79 186.747 163.472 186.615 163.141 186.615 cv
162.809 186.615 162.491 186.747 162.257 186.982 cv
162.022 187.216 161.891 187.534 161.891 187.865 cv
161.891 188.197 162.022 188.515 162.257 188.749 cv
162.491 188.984 162.809 189.115 163.141 189.115 cv
cp
@
grestore
gsave
197.103 203.631 mo
200.603 203.631 li
200.603 200.131 li
197.103 200.131 li
197.103 203.631 li
clp
198.853 203.132 mo
199.184 203.132 199.502 203 199.737 202.765 cv
199.971 202.531 200.103 202.213 200.103 201.882 cv
200.103 201.55 199.971 201.232 199.737 200.998 cv
199.502 200.763 199.184 200.632 198.853 200.632 cv
198.521 200.632 198.203 200.763 197.969 200.998 cv
197.734 201.232 197.603 201.55 197.603 201.882 cv
197.603 202.213 197.734 202.531 197.969 202.765 cv
198.203 203 198.521 203.132 198.853 203.132 cv
cp
f
1 lw
0 lc
198.853 203.132 mo
199.184 203.132 199.502 203 199.737 202.765 cv
199.971 202.531 200.103 202.213 200.103 201.882 cv
200.103 201.55 199.971 201.232 199.737 200.998 cv
199.502 200.763 199.184 200.632 198.853 200.632 cv
198.521 200.632 198.203 200.763 197.969 200.998 cv
197.734 201.232 197.603 201.55 197.603 201.882 cv
197.603 202.213 197.734 202.531 197.969 202.765 cv
198.203 203 198.521 203.132 198.853 203.132 cv
cp
@
grestore
gsave
232.815 228.86 mo
236.315 228.86 li
236.315 225.36 li
232.815 225.36 li
232.815 228.86 li
clp
234.565 228.36 mo
234.896 228.36 235.214 228.229 235.449 227.994 cv
235.683 227.76 235.815 227.442 235.815 227.11 cv
235.815 226.779 235.683 226.461 235.449 226.226 cv
235.214 225.992 234.896 225.86 234.565 225.86 cv
234.233 225.86 233.915 225.992 233.681 226.226 cv
233.446 226.461 233.315 226.779 233.315 227.11 cv
233.315 227.442 233.446 227.76 233.681 227.994 cv
233.915 228.229 234.233 228.36 234.565 228.36 cv
cp
f
1 lw
0 lc
234.565 228.36 mo
234.896 228.36 235.214 228.229 235.449 227.994 cv
235.683 227.76 235.815 227.442 235.815 227.11 cv
235.815 226.779 235.683 226.461 235.449 226.226 cv
235.214 225.992 234.896 225.86 234.565 225.86 cv
234.233 225.86 233.915 225.992 233.681 226.226 cv
233.446 226.461 233.315 226.779 233.315 227.11 cv
233.315 227.442 233.446 227.76 233.681 227.994 cv
233.915 228.229 234.233 228.36 234.565 228.36 cv
cp
@
grestore
gsave
268.527 234.467 mo
272.027 234.467 li
272.027 230.967 li
268.527 230.967 li
268.527 234.467 li
clp
270.277 233.967 mo
270.608 233.967 270.926 233.835 271.161 233.601 cv
271.395 233.366 271.527 233.048 271.527 232.717 cv
271.527 232.385 271.395 232.067 271.161 231.833 cv
270.926 231.598 270.608 231.467 270.277 231.467 cv
269.945 231.467 269.627 231.598 269.393 231.833 cv
269.158 232.067 269.027 232.385 269.027 232.717 cv
269.027 233.048 269.158 233.366 269.393 233.601 cv
269.627 233.835 269.945 233.967 270.277 233.967 cv
cp
f
1 lw
0 lc
270.277 233.967 mo
270.608 233.967 270.926 233.835 271.161 233.601 cv
271.395 233.366 271.527 233.048 271.527 232.717 cv
271.527 232.385 271.395 232.067 271.161 231.833 cv
270.926 231.598 270.608 231.467 270.277 231.467 cv
269.945 231.467 269.627 231.598 269.393 231.833 cv
269.158 232.067 269.027 232.385 269.027 232.717 cv
269.027 233.048 269.158 233.366 269.393 233.601 cv
269.627 233.835 269.945 233.967 270.277 233.967 cv
cp
@
grestore
gsave
304.239 237.27 mo
307.739 237.27 li
307.739 233.77 li
304.239 233.77 li
304.239 237.27 li
clp
305.989 236.77 mo
306.32 236.77 306.638 236.638 306.873 236.404 cv
307.107 236.169 307.239 235.851 307.239 235.52 cv
307.239 235.188 307.107 234.87 306.873 234.636 cv
306.638 234.402 306.32 234.27 305.989 234.27 cv
305.657 234.27 305.339 234.402 305.105 234.636 cv
304.87 234.87 304.739 235.188 304.739 235.52 cv
304.739 235.851 304.87 236.169 305.105 236.404 cv
305.339 236.638 305.657 236.77 305.989 236.77 cv
cp
f
1 lw
0 lc
305.989 236.77 mo
306.32 236.77 306.638 236.638 306.873 236.404 cv
307.107 236.169 307.239 235.851 307.239 235.52 cv
307.239 235.188 307.107 234.87 306.873 234.636 cv
306.638 234.402 306.32 234.27 305.989 234.27 cv
305.657 234.27 305.339 234.402 305.105 234.636 cv
304.87 234.87 304.739 235.188 304.739 235.52 cv
304.739 235.851 304.87 236.169 305.105 236.404 cv
305.339 236.638 305.657 236.77 305.989 236.77 cv
cp
@
grestore
gsave
339.951 240.073 mo
343.451 240.073 li
343.451 236.573 li
339.951 236.573 li
339.951 240.073 li
clp
341.701 239.573 mo
342.032 239.573 342.35 239.441 342.585 239.207 cv
342.819 238.973 342.951 238.655 342.951 238.323 cv
342.951 237.992 342.819 237.674 342.585 237.439 cv
342.35 237.205 342.032 237.073 341.701 237.073 cv
341.369 237.073 341.051 237.205 340.817 237.439 cv
340.582 237.674 340.451 237.992 340.451 238.323 cv
340.451 238.655 340.582 238.973 340.817 239.207 cv
341.051 239.441 341.369 239.573 341.701 239.573 cv
cp
f
1 lw
0 lc
341.701 239.573 mo
342.032 239.573 342.35 239.441 342.585 239.207 cv
342.819 238.973 342.951 238.655 342.951 238.323 cv
342.951 237.992 342.819 237.674 342.585 237.439 cv
342.35 237.205 342.032 237.073 341.701 237.073 cv
341.369 237.073 341.051 237.205 340.817 237.439 cv
340.582 237.674 340.451 237.992 340.451 238.323 cv
340.451 238.655 340.582 238.973 340.817 239.207 cv
341.051 239.441 341.369 239.573 341.701 239.573 cv
cp
@
grestore
gsave
375.663 240.073 mo
379.163 240.073 li
379.163 236.573 li
375.663 236.573 li
375.663 240.073 li
clp
377.413 239.573 mo
377.744 239.573 378.062 239.441 378.297 239.207 cv
378.531 238.973 378.663 238.655 378.663 238.323 cv
378.663 237.992 378.531 237.674 378.297 237.439 cv
378.062 237.205 377.744 237.073 377.413 237.073 cv
377.081 237.073 376.763 237.205 376.529 237.439 cv
376.294 237.674 376.163 237.992 376.163 238.323 cv
376.163 238.655 376.294 238.973 376.529 239.207 cv
376.763 239.441 377.081 239.573 377.413 239.573 cv
cp
f
1 lw
0 lc
377.413 239.573 mo
377.744 239.573 378.062 239.441 378.297 239.207 cv
378.531 238.973 378.663 238.655 378.663 238.323 cv
378.663 237.992 378.531 237.674 378.297 237.439 cv
378.062 237.205 377.744 237.073 377.413 237.073 cv
377.081 237.073 376.763 237.205 376.529 237.439 cv
376.294 237.674 376.163 237.992 376.163 238.323 cv
376.163 238.655 376.294 238.973 376.529 239.207 cv
376.763 239.441 377.081 239.573 377.413 239.573 cv
cp
@
grestore
gsave
411.375 241.475 mo
414.875 241.475 li
414.875 237.975 li
411.375 237.975 li
411.375 241.475 li
clp
413.125 240.975 mo
413.456 240.975 413.774 240.843 414.009 240.609 cv
414.243 240.374 414.375 240.056 414.375 239.725 cv
414.375 239.393 414.243 239.075 414.009 238.841 cv
413.774 238.606 413.456 238.475 413.125 238.475 cv
412.793 238.475 412.475 238.606 412.241 238.841 cv
412.006 239.075 411.875 239.393 411.875 239.725 cv
411.875 240.056 412.006 240.374 412.241 240.609 cv
412.475 240.843 412.793 240.975 413.125 240.975 cv
cp
f
1 lw
0 lc
413.125 240.975 mo
413.456 240.975 413.774 240.843 414.009 240.609 cv
414.243 240.374 414.375 240.056 414.375 239.725 cv
414.375 239.393 414.243 239.075 414.009 238.841 cv
413.774 238.606 413.456 238.475 413.125 238.475 cv
412.793 238.475 412.475 238.606 412.241 238.841 cv
412.006 239.075 411.875 239.393 411.875 239.725 cv
411.875 240.056 412.006 240.374 412.241 240.609 cv
412.475 240.843 412.793 240.975 413.125 240.975 cv
cp
@
grestore
0 lj
73.8606 257.945 mo
73.8606 5.6575 li
1 /0 /CSD get_res sepcs
1 sep
@
430.981 257.945 mo
430.981 5.6575 li
@
73.8606 257.945 mo
430.981 257.945 li
@
73.8606 5.6575 mo
430.981 5.6575 li
@
212.97 86.5169 mo
199.253 86.5169 li
199.253 83.2256 li
198.453 83.2256 li
198.453 86.5169 li
195.578 86.5169 li
197.919 82.2907 li
202.603 82.2907 li
202.603 76.624 li
214.47 66.3772 li
214.47 85.0169 li
214.468 85.6068 214.326 85.9541 214.116 86.1633 cv
213.907 86.3728 213.56 86.515 212.97 86.5169 cv
/1 
<<
/Name (Black)
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
199.253 86.5169 mo
198.453 86.5169 li
198.453 83.2256 li
199.253 83.2256 li
199.253 86.5169 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
193.291 86.5169 mo
163.541 86.5169 li
163.541 83.2256 li
162.741 83.2256 li
162.741 86.5169 li
127.829 86.5169 li
127.829 83.2256 li
127.029 83.2256 li
127.029 86.5169 li
92.1166 86.5169 li
92.1166 83.2256 li
91.3166 83.2256 li
91.3166 86.5169 li
80.8607 86.5169 li
80.2708 86.515 79.9233 86.3728 79.7141 86.1633 cv
79.5046 85.9541 79.3624 85.6068 79.3607 85.0169 cv
79.3607 12.6575 li
79.3624 12.0676 79.5046 11.7201 79.7141 11.5111 cv
79.9233 11.3016 80.2708 11.1593 80.8607 11.1575 cv
91.3166 11.1575 li
91.3166 12.0257 li
92.1166 12.0257 li
92.1166 11.1575 li
127.029 11.1575 li
127.029 12.0257 li
127.829 12.0257 li
127.829 11.1575 li
162.741 11.1575 li
162.741 12.0257 li
163.541 12.0257 li
163.541 11.1575 li
198.453 11.1575 li
198.453 12.0257 li
199.253 12.0257 li
199.253 11.1575 li
212.97 11.1575 li
213.56 11.1593 213.907 11.3016 214.116 11.5111 cv
214.326 11.7201 214.468 12.0676 214.47 12.6575 cv
214.47 33.2895 li
209.541 33.2895 li
209.541 34.0895 li
214.47 34.0895 li
214.47 61.3215 li
209.541 61.3215 li
209.541 62.1215 li
214.47 62.1215 li
214.47 63.7348 li
201.666 74.7907 li
199.253 74.7907 li
199.253 74.7456 li
198.453 74.7456 li
198.453 74.7907 li
195.103 74.7907 li
195.103 81.7907 li
195.603 81.7907 li
195.103 81.7907 li
195.103 82.2907 li
195.632 82.2907 li
193.291 86.5169 li
162.741 81.1455 mo
162.741 81.9456 li
163.541 81.9456 li
163.541 81.1455 li
162.741 81.1455 li
127.029 81.1455 mo
127.029 81.9456 li
127.829 81.9456 li
127.829 81.1455 li
127.029 81.1455 li
91.3166 81.1455 mo
91.3166 81.9456 li
92.1166 81.9456 li
92.1166 81.1455 li
91.3166 81.1455 li
162.741 74.7456 mo
162.741 79.8656 li
163.541 79.8656 li
163.541 74.7456 li
162.741 74.7456 li
127.029 74.7456 mo
127.029 79.8656 li
127.829 79.8656 li
127.829 74.7456 li
127.029 74.7456 li
91.3166 74.7456 mo
91.3166 79.8656 li
92.1166 79.8656 li
92.1166 74.7456 li
91.3166 74.7456 li
198.453 72.6656 mo
198.453 73.4655 li
199.253 73.4655 li
199.253 72.6656 li
198.453 72.6656 li
162.741 72.6656 mo
162.741 73.4655 li
163.541 73.4655 li
163.541 72.6656 li
162.741 72.6656 li
127.029 72.6656 mo
127.029 73.4655 li
127.829 73.4655 li
127.829 72.6656 li
127.029 72.6656 li
91.3166 72.6656 mo
91.3166 73.4655 li
92.1166 73.4655 li
92.1166 72.6656 li
91.3166 72.6656 li
198.453 66.2655 mo
198.453 71.3856 li
199.253 71.3856 li
199.253 66.2655 li
198.453 66.2655 li
162.741 66.2655 mo
162.741 71.3856 li
163.541 71.3856 li
163.541 66.2655 li
162.741 66.2655 li
127.029 66.2655 mo
127.029 71.3856 li
127.829 71.3856 li
127.829 66.2655 li
127.029 66.2655 li
91.3166 66.2655 mo
91.3166 71.3856 li
92.1166 71.3856 li
92.1166 66.2655 li
91.3166 66.2655 li
198.453 64.1856 mo
198.453 64.9856 li
199.253 64.9856 li
199.253 64.1856 li
198.453 64.1856 li
162.741 64.1856 mo
162.741 64.9856 li
163.541 64.9856 li
163.541 64.1856 li
162.741 64.1856 li
127.029 64.1856 mo
127.029 64.9856 li
127.829 64.9856 li
127.829 64.1856 li
127.029 64.1856 li
91.3166 64.1856 mo
91.3166 64.9856 li
92.1166 64.9856 li
92.1166 64.1856 li
91.3166 64.1856 li
198.453 57.7856 mo
198.453 62.9057 li
199.253 62.9057 li
199.253 62.1215 li
199.781 62.1215 li
199.781 61.3215 li
199.253 61.3215 li
199.253 57.7856 li
198.453 57.7856 li
162.741 62.1215 mo
162.741 62.9057 li
163.541 62.9057 li
163.541 62.1215 li
163.781 62.1215 li
163.781 61.3215 li
163.541 61.3215 li
163.541 57.7856 li
162.741 57.7856 li
162.741 61.3215 li
158.661 61.3215 li
158.661 62.1215 li
162.741 62.1215 li
127.029 62.1215 mo
127.029 62.9057 li
127.829 62.9057 li
127.829 62.1215 li
129.861 62.1215 li
129.861 61.3215 li
127.829 61.3215 li
127.829 57.7856 li
127.029 57.7856 li
127.029 61.3215 li
124.741 61.3215 li
124.741 62.1215 li
127.029 62.1215 li
91.3166 62.1215 mo
91.3166 62.9057 li
92.1166 62.9057 li
92.1166 62.1215 li
95.9406 62.1215 li
95.9406 61.3215 li
92.1166 61.3215 li
92.1166 57.7856 li
91.3166 57.7856 li
91.3166 61.3215 li
90.8207 61.3215 li
90.8207 62.1215 li
91.3166 62.1215 li
207.461 61.3215 mo
207.461 62.1215 li
208.261 62.1215 li
208.261 61.3215 li
207.461 61.3215 li
201.061 61.3215 mo
201.061 62.1215 li
206.181 62.1215 li
206.181 61.3215 li
201.061 61.3215 li
192.581 61.3215 mo
192.581 62.1215 li
197.701 62.1215 li
197.701 61.3215 li
192.581 61.3215 li
190.501 61.3215 mo
190.501 62.1215 li
191.301 62.1215 li
191.301 61.3215 li
190.501 61.3215 li
184.101 61.3215 mo
184.101 62.1215 li
189.221 62.1215 li
189.221 61.3215 li
184.101 61.3215 li
182.021 61.3215 mo
182.021 62.1215 li
182.821 62.1215 li
182.821 61.3215 li
182.021 61.3215 li
175.621 61.3215 mo
175.621 62.1215 li
180.741 62.1215 li
180.741 61.3215 li
175.621 61.3215 li
173.541 61.3215 mo
173.541 62.1215 li
174.341 62.1215 li
174.341 61.3215 li
173.541 61.3215 li
167.141 61.3215 mo
167.141 62.1215 li
172.261 62.1215 li
172.261 61.3215 li
167.141 61.3215 li
165.061 61.3215 mo
165.061 62.1215 li
165.861 62.1215 li
165.861 61.3215 li
165.061 61.3215 li
156.581 61.3215 mo
156.581 62.1215 li
157.381 62.1215 li
157.381 61.3215 li
156.581 61.3215 li
150.181 61.3215 mo
150.181 62.1215 li
155.301 62.1215 li
155.301 61.3215 li
150.181 61.3215 li
148.101 61.3215 mo
148.101 62.1215 li
148.901 62.1215 li
148.901 61.3215 li
148.101 61.3215 li
141.701 61.3215 mo
141.701 62.1215 li
146.821 62.1215 li
146.821 61.3215 li
141.701 61.3215 li
139.621 61.3215 mo
139.621 62.1215 li
140.421 62.1215 li
140.421 61.3215 li
139.621 61.3215 li
133.221 61.3215 mo
133.221 62.1215 li
138.341 62.1215 li
138.341 61.3215 li
133.221 61.3215 li
131.141 61.3215 mo
131.141 62.1215 li
131.941 62.1215 li
131.941 61.3215 li
131.141 61.3215 li
122.661 61.3215 mo
122.661 62.1215 li
123.461 62.1215 li
123.461 61.3215 li
122.661 61.3215 li
116.261 61.3215 mo
116.261 62.1215 li
121.381 62.1215 li
121.381 61.3215 li
116.261 61.3215 li
114.181 61.3215 mo
114.181 62.1215 li
114.981 62.1215 li
114.981 61.3215 li
114.181 61.3215 li
107.781 61.3215 mo
107.781 62.1215 li
112.901 62.1215 li
112.901 61.3215 li
107.781 61.3215 li
105.701 61.3215 mo
105.701 62.1215 li
106.501 62.1215 li
106.501 61.3215 li
105.701 61.3215 li
99.3006 61.3215 mo
99.3006 62.1215 li
104.421 62.1215 li
104.421 61.3215 li
99.3006 61.3215 li
97.2206 61.3215 mo
97.2206 62.1215 li
98.0207 62.1215 li
98.0207 61.3215 li
97.2206 61.3215 li
88.7406 61.3215 mo
88.7406 62.1215 li
89.5406 62.1215 li
89.5406 61.3215 li
88.7406 61.3215 li
82.3406 61.3215 mo
82.3406 62.1215 li
87.4607 62.1215 li
87.4607 61.3215 li
82.3406 61.3215 li
80.2607 61.3215 mo
80.2607 62.1215 li
81.0606 62.1215 li
81.0606 61.3215 li
80.2607 61.3215 li
198.453 55.7057 mo
198.453 56.5056 li
199.253 56.5056 li
199.253 55.7057 li
198.453 55.7057 li
162.741 55.7057 mo
162.741 56.5056 li
163.541 56.5056 li
163.541 55.7057 li
162.741 55.7057 li
127.029 55.7057 mo
127.029 56.5056 li
127.829 56.5056 li
127.829 55.7057 li
127.029 55.7057 li
91.3166 55.7057 mo
91.3166 56.5056 li
92.1166 56.5056 li
92.1166 55.7057 li
91.3166 55.7057 li
198.453 49.3056 mo
198.453 54.4256 li
199.253 54.4256 li
199.253 49.3056 li
198.453 49.3056 li
162.741 49.3056 mo
162.741 54.4256 li
163.541 54.4256 li
163.541 49.3056 li
162.741 49.3056 li
127.029 49.3056 mo
127.029 54.4256 li
127.829 54.4256 li
127.829 49.3056 li
127.029 49.3056 li
91.3166 49.3056 mo
91.3166 54.4256 li
92.1166 54.4256 li
92.1166 49.3056 li
91.3166 49.3056 li
198.453 47.2256 mo
198.453 48.0257 li
199.253 48.0257 li
199.253 47.2256 li
198.453 47.2256 li
162.741 47.2256 mo
162.741 48.0257 li
163.541 48.0257 li
163.541 47.2256 li
162.741 47.2256 li
127.029 47.2256 mo
127.029 48.0257 li
127.829 48.0257 li
127.829 47.2256 li
127.029 47.2256 li
91.3166 47.2256 mo
91.3166 48.0257 li
92.1166 48.0257 li
92.1166 47.2256 li
91.3166 47.2256 li
198.453 40.8257 mo
198.453 45.9456 li
199.253 45.9456 li
199.253 40.8257 li
198.453 40.8257 li
162.741 40.8257 mo
162.741 45.9456 li
163.541 45.9456 li
163.541 40.8257 li
162.741 40.8257 li
127.029 40.8257 mo
127.029 45.9456 li
127.829 45.9456 li
127.829 40.8257 li
127.029 40.8257 li
91.3166 40.8257 mo
91.3166 45.9456 li
92.1166 45.9456 li
92.1166 40.8257 li
91.3166 40.8257 li
198.453 38.7457 mo
198.453 39.5456 li
199.253 39.5456 li
199.253 38.7457 li
198.453 38.7457 li
162.741 38.7457 mo
162.741 39.5456 li
163.541 39.5456 li
163.541 38.7457 li
162.741 38.7457 li
127.029 38.7457 mo
127.029 39.5456 li
127.829 39.5456 li
127.829 38.7457 li
127.029 38.7457 li
91.3166 38.7457 mo
91.3166 39.5456 li
92.1166 39.5456 li
92.1166 38.7457 li
91.3166 38.7457 li
198.453 32.3456 mo
198.453 37.4657 li
199.253 37.4657 li
199.253 34.0895 li
199.781 34.0895 li
199.781 33.2895 li
199.253 33.2895 li
199.253 32.3456 li
198.453 32.3456 li
162.741 34.0895 mo
162.741 37.4657 li
163.541 37.4657 li
163.541 34.0895 li
163.781 34.0895 li
163.781 33.2895 li
163.541 33.2895 li
163.541 32.3456 li
162.741 32.3456 li
162.741 33.2895 li
158.661 33.2895 li
158.661 34.0895 li
162.741 34.0895 li
127.029 34.0895 mo
127.029 37.4657 li
127.829 37.4657 li
127.829 34.0895 li
129.861 34.0895 li
129.861 33.2895 li
127.829 33.2895 li
127.829 32.3456 li
127.029 32.3456 li
127.029 33.2895 li
124.741 33.2895 li
124.741 34.0895 li
127.029 34.0895 li
91.3166 34.0895 mo
91.3166 37.4657 li
92.1166 37.4657 li
92.1166 34.0895 li
95.9406 34.0895 li
95.9406 33.2895 li
92.1166 33.2895 li
92.1166 32.3456 li
91.3166 32.3456 li
91.3166 33.2895 li
90.8207 33.2895 li
90.8207 34.0895 li
91.3166 34.0895 li
207.461 33.2895 mo
207.461 34.0895 li
208.261 34.0895 li
208.261 33.2895 li
207.461 33.2895 li
201.061 33.2895 mo
201.061 34.0895 li
206.181 34.0895 li
206.181 33.2895 li
201.061 33.2895 li
192.581 33.2895 mo
192.581 34.0895 li
197.701 34.0895 li
197.701 33.2895 li
192.581 33.2895 li
190.501 33.2895 mo
190.501 34.0895 li
191.301 34.0895 li
191.301 33.2895 li
190.501 33.2895 li
184.101 33.2895 mo
184.101 34.0895 li
189.221 34.0895 li
189.221 33.2895 li
184.101 33.2895 li
182.021 33.2895 mo
182.021 34.0895 li
182.821 34.0895 li
182.821 33.2895 li
182.021 33.2895 li
175.621 33.2895 mo
175.621 34.0895 li
180.741 34.0895 li
180.741 33.2895 li
175.621 33.2895 li
173.541 33.2895 mo
173.541 34.0895 li
174.341 34.0895 li
174.341 33.2895 li
173.541 33.2895 li
167.141 33.2895 mo
167.141 34.0895 li
172.261 34.0895 li
172.261 33.2895 li
167.141 33.2895 li
165.061 33.2895 mo
165.061 34.0895 li
165.861 34.0895 li
165.861 33.2895 li
165.061 33.2895 li
156.581 33.2895 mo
156.581 34.0895 li
157.381 34.0895 li
157.381 33.2895 li
156.581 33.2895 li
150.181 33.2895 mo
150.181 34.0895 li
155.301 34.0895 li
155.301 33.2895 li
150.181 33.2895 li
148.101 33.2895 mo
148.101 34.0895 li
148.901 34.0895 li
148.901 33.2895 li
148.101 33.2895 li
141.701 33.2895 mo
141.701 34.0895 li
146.821 34.0895 li
146.821 33.2895 li
141.701 33.2895 li
139.621 33.2895 mo
139.621 34.0895 li
140.421 34.0895 li
140.421 33.2895 li
139.621 33.2895 li
133.221 33.2895 mo
133.221 34.0895 li
138.341 34.0895 li
138.341 33.2895 li
133.221 33.2895 li
131.141 33.2895 mo
131.141 34.0895 li
131.941 34.0895 li
131.941 33.2895 li
131.141 33.2895 li
122.661 33.2895 mo
122.661 34.0895 li
123.461 34.0895 li
123.461 33.2895 li
122.661 33.2895 li
116.261 33.2895 mo
116.261 34.0895 li
121.381 34.0895 li
121.381 33.2895 li
116.261 33.2895 li
114.181 33.2895 mo
114.181 34.0895 li
114.981 34.0895 li
114.981 33.2895 li
114.181 33.2895 li
107.781 33.2895 mo
107.781 34.0895 li
112.901 34.0895 li
112.901 33.2895 li
107.781 33.2895 li
105.701 33.2895 mo
105.701 34.0895 li
106.501 34.0895 li
106.501 33.2895 li
105.701 33.2895 li
99.3006 33.2895 mo
99.3006 34.0895 li
104.421 34.0895 li
104.421 33.2895 li
99.3006 33.2895 li
97.2206 33.2895 mo
97.2206 34.0895 li
98.0207 34.0895 li
98.0207 33.2895 li
97.2206 33.2895 li
88.7406 33.2895 mo
88.7406 34.0895 li
89.5406 34.0895 li
89.5406 33.2895 li
88.7406 33.2895 li
82.3406 33.2895 mo
82.3406 34.0895 li
87.4607 34.0895 li
87.4607 33.2895 li
82.3406 33.2895 li
80.2607 33.2895 mo
80.2607 34.0895 li
81.0606 34.0895 li
81.0606 33.2895 li
80.2607 33.2895 li
198.453 30.2657 mo
198.453 31.0657 li
199.253 31.0657 li
199.253 30.2657 li
198.453 30.2657 li
162.741 30.2657 mo
162.741 31.0657 li
163.541 31.0657 li
163.541 30.2657 li
162.741 30.2657 li
127.029 30.2657 mo
127.029 31.0657 li
127.829 31.0657 li
127.829 30.2657 li
127.029 30.2657 li
91.3166 30.2657 mo
91.3166 31.0657 li
92.1166 31.0657 li
92.1166 30.2657 li
91.3166 30.2657 li
198.453 23.8657 mo
198.453 28.9856 li
199.253 28.9856 li
199.253 23.8657 li
198.453 23.8657 li
162.741 23.8657 mo
162.741 28.9856 li
163.541 28.9856 li
163.541 23.8657 li
162.741 23.8657 li
127.029 23.8657 mo
127.029 28.9856 li
127.829 28.9856 li
127.829 23.8657 li
127.029 23.8657 li
91.3166 23.8657 mo
91.3166 28.9856 li
92.1166 28.9856 li
92.1166 23.8657 li
91.3166 23.8657 li
198.453 21.7857 mo
198.453 22.5857 li
199.253 22.5857 li
199.253 21.7857 li
198.453 21.7857 li
162.741 21.7857 mo
162.741 22.5857 li
163.541 22.5857 li
163.541 21.7857 li
162.741 21.7857 li
127.029 21.7857 mo
127.029 22.5857 li
127.829 22.5857 li
127.829 21.7857 li
127.029 21.7857 li
91.3166 21.7857 mo
91.3166 22.5857 li
92.1166 22.5857 li
92.1166 21.7857 li
91.3166 21.7857 li
198.453 15.3857 mo
198.453 20.5057 li
199.253 20.5057 li
199.253 15.3857 li
198.453 15.3857 li
162.741 15.3857 mo
162.741 20.5057 li
163.541 20.5057 li
163.541 15.3857 li
162.741 15.3857 li
127.029 15.3857 mo
127.029 20.5057 li
127.829 20.5057 li
127.829 15.3857 li
127.029 15.3857 li
91.3166 15.3857 mo
91.3166 20.5057 li
92.1166 20.5057 li
92.1166 15.3857 li
91.3166 15.3857 li
198.453 13.3057 mo
198.453 14.1058 li
199.253 14.1058 li
199.253 13.3057 li
198.453 13.3057 li
162.741 13.3057 mo
162.741 14.1058 li
163.541 14.1058 li
163.541 13.3057 li
162.741 13.3057 li
127.029 13.3057 mo
127.029 14.1058 li
127.829 14.1058 li
127.829 13.3057 li
127.029 13.3057 li
91.3166 13.3057 mo
91.3166 14.1058 li
92.1166 14.1058 li
92.1166 13.3057 li
91.3166 13.3057 li
1 /1 /CSD get_res sepcs
0 sep
f
92.1166 86.5169 mo
91.3166 86.5169 li
91.3166 83.2256 li
92.1166 83.2256 li
92.1166 86.5169 li
92.1166 81.9456 mo
91.3166 81.9456 li
91.3166 81.1455 li
92.1166 81.1455 li
92.1166 81.9456 li
92.1166 79.8656 mo
91.3166 79.8656 li
91.3166 74.7456 li
92.1166 74.7456 li
92.1166 79.8656 li
92.1166 73.4655 mo
91.3166 73.4655 li
91.3166 72.6656 li
92.1166 72.6656 li
92.1166 73.4655 li
92.1166 71.3856 mo
91.3166 71.3856 li
91.3166 66.2655 li
92.1166 66.2655 li
92.1166 71.3856 li
92.1166 64.9856 mo
91.3166 64.9856 li
91.3166 64.1856 li
92.1166 64.1856 li
92.1166 64.9856 li
92.1166 62.9057 mo
91.3166 62.9057 li
91.3166 62.1215 li
92.1166 62.1215 li
92.1166 62.9057 li
92.1166 61.3215 mo
91.3166 61.3215 li
91.3166 57.7856 li
92.1166 57.7856 li
92.1166 61.3215 li
92.1166 56.5056 mo
91.3166 56.5056 li
91.3166 55.7057 li
92.1166 55.7057 li
92.1166 56.5056 li
92.1166 54.4256 mo
91.3166 54.4256 li
91.3166 49.3056 li
92.1166 49.3056 li
92.1166 54.4256 li
92.1166 48.0257 mo
91.3166 48.0257 li
91.3166 47.2256 li
92.1166 47.2256 li
92.1166 48.0257 li
92.1166 45.9456 mo
91.3166 45.9456 li
91.3166 40.8257 li
92.1166 40.8257 li
92.1166 45.9456 li
92.1166 39.5456 mo
91.3166 39.5456 li
91.3166 38.7457 li
92.1166 38.7457 li
92.1166 39.5456 li
92.1166 37.4657 mo
91.3166 37.4657 li
91.3166 34.0895 li
92.1166 34.0895 li
92.1166 37.4657 li
92.1166 33.2895 mo
91.3166 33.2895 li
91.3166 32.3456 li
92.1166 32.3456 li
92.1166 33.2895 li
92.1166 31.0657 mo
91.3166 31.0657 li
91.3166 30.2657 li
92.1166 30.2657 li
92.1166 31.0657 li
92.1166 28.9856 mo
91.3166 28.9856 li
91.3166 23.8657 li
92.1166 23.8657 li
92.1166 28.9856 li
92.1166 22.5857 mo
91.3166 22.5857 li
91.3166 21.7857 li
92.1166 21.7857 li
92.1166 22.5857 li
92.1166 20.5057 mo
91.3166 20.5057 li
91.3166 15.3857 li
92.1166 15.3857 li
92.1166 20.5057 li
92.1166 14.1058 mo
91.3166 14.1058 li
91.3166 13.3057 li
92.1166 13.3057 li
92.1166 14.1058 li
92.1166 12.0257 mo
91.3166 12.0257 li
91.3166 11.1575 li
92.1166 11.1575 li
92.1166 12.0257 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
127.829 86.5169 mo
127.029 86.5169 li
127.029 83.2256 li
127.829 83.2256 li
127.829 86.5169 li
127.829 81.9456 mo
127.029 81.9456 li
127.029 81.1455 li
127.829 81.1455 li
127.829 81.9456 li
127.829 79.8656 mo
127.029 79.8656 li
127.029 74.7456 li
127.829 74.7456 li
127.829 79.8656 li
127.829 73.4655 mo
127.029 73.4655 li
127.029 72.6656 li
127.829 72.6656 li
127.829 73.4655 li
127.829 71.3856 mo
127.029 71.3856 li
127.029 66.2655 li
127.829 66.2655 li
127.829 71.3856 li
127.829 64.9856 mo
127.029 64.9856 li
127.029 64.1856 li
127.829 64.1856 li
127.829 64.9856 li
127.829 62.9057 mo
127.029 62.9057 li
127.029 62.1215 li
127.829 62.1215 li
127.829 62.9057 li
127.829 61.3215 mo
127.029 61.3215 li
127.029 57.7856 li
127.829 57.7856 li
127.829 61.3215 li
127.829 56.5056 mo
127.029 56.5056 li
127.029 55.7057 li
127.829 55.7057 li
127.829 56.5056 li
127.829 54.4256 mo
127.029 54.4256 li
127.029 49.3056 li
127.829 49.3056 li
127.829 54.4256 li
127.829 48.0257 mo
127.029 48.0257 li
127.029 47.2256 li
127.829 47.2256 li
127.829 48.0257 li
127.829 45.9456 mo
127.029 45.9456 li
127.029 40.8257 li
127.829 40.8257 li
127.829 45.9456 li
127.829 39.5456 mo
127.029 39.5456 li
127.029 38.7457 li
127.829 38.7457 li
127.829 39.5456 li
127.829 37.4657 mo
127.029 37.4657 li
127.029 34.0895 li
127.829 34.0895 li
127.829 37.4657 li
127.829 33.2895 mo
127.029 33.2895 li
127.029 32.3456 li
127.829 32.3456 li
127.829 33.2895 li
127.829 31.0657 mo
127.029 31.0657 li
127.029 30.2657 li
127.829 30.2657 li
127.829 31.0657 li
127.829 28.9856 mo
127.029 28.9856 li
127.029 23.8657 li
127.829 23.8657 li
127.829 28.9856 li
127.829 22.5857 mo
127.029 22.5857 li
127.029 21.7857 li
127.829 21.7857 li
127.829 22.5857 li
127.829 20.5057 mo
127.029 20.5057 li
127.029 15.3857 li
127.829 15.3857 li
127.829 20.5057 li
127.829 14.1058 mo
127.029 14.1058 li
127.029 13.3057 li
127.829 13.3057 li
127.829 14.1058 li
127.829 12.0257 mo
127.029 12.0257 li
127.029 11.1575 li
127.829 11.1575 li
127.829 12.0257 li
f
163.541 86.5169 mo
162.741 86.5169 li
162.741 83.2256 li
163.541 83.2256 li
163.541 86.5169 li
163.541 81.9456 mo
162.741 81.9456 li
162.741 81.1455 li
163.541 81.1455 li
163.541 81.9456 li
163.541 79.8656 mo
162.741 79.8656 li
162.741 74.7456 li
163.541 74.7456 li
163.541 79.8656 li
163.541 73.4655 mo
162.741 73.4655 li
162.741 72.6656 li
163.541 72.6656 li
163.541 73.4655 li
163.541 71.3856 mo
162.741 71.3856 li
162.741 66.2655 li
163.541 66.2655 li
163.541 71.3856 li
163.541 64.9856 mo
162.741 64.9856 li
162.741 64.1856 li
163.541 64.1856 li
163.541 64.9856 li
163.541 62.9057 mo
162.741 62.9057 li
162.741 62.1215 li
163.541 62.1215 li
163.541 62.9057 li
163.541 61.3215 mo
162.741 61.3215 li
162.741 57.7856 li
163.541 57.7856 li
163.541 61.3215 li
163.541 56.5056 mo
162.741 56.5056 li
162.741 55.7057 li
163.541 55.7057 li
163.541 56.5056 li
163.541 54.4256 mo
162.741 54.4256 li
162.741 49.3056 li
163.541 49.3056 li
163.541 54.4256 li
163.541 48.0257 mo
162.741 48.0257 li
162.741 47.2256 li
163.541 47.2256 li
163.541 48.0257 li
163.541 45.9456 mo
162.741 45.9456 li
162.741 40.8257 li
163.541 40.8257 li
163.541 45.9456 li
163.541 39.5456 mo
162.741 39.5456 li
162.741 38.7457 li
163.541 38.7457 li
163.541 39.5456 li
163.541 37.4657 mo
162.741 37.4657 li
162.741 34.0895 li
163.541 34.0895 li
163.541 37.4657 li
163.541 33.2895 mo
162.741 33.2895 li
162.741 32.3456 li
163.541 32.3456 li
163.541 33.2895 li
163.541 31.0657 mo
162.741 31.0657 li
162.741 30.2657 li
163.541 30.2657 li
163.541 31.0657 li
163.541 28.9856 mo
162.741 28.9856 li
162.741 23.8657 li
163.541 23.8657 li
163.541 28.9856 li
163.541 22.5857 mo
162.741 22.5857 li
162.741 21.7857 li
163.541 21.7857 li
163.541 22.5857 li
163.541 20.5057 mo
162.741 20.5057 li
162.741 15.3857 li
163.541 15.3857 li
163.541 20.5057 li
163.541 14.1058 mo
162.741 14.1058 li
162.741 13.3057 li
163.541 13.3057 li
163.541 14.1058 li
163.541 12.0257 mo
162.741 12.0257 li
162.741 11.1575 li
163.541 11.1575 li
163.541 12.0257 li
f
199.253 74.7907 mo
198.453 74.7907 li
198.453 74.7456 li
199.253 74.7456 li
199.253 74.7907 li
199.253 73.4655 mo
198.453 73.4655 li
198.453 72.6656 li
199.253 72.6656 li
199.253 73.4655 li
199.253 71.3856 mo
198.453 71.3856 li
198.453 66.2655 li
199.253 66.2655 li
199.253 71.3856 li
199.253 64.9856 mo
198.453 64.9856 li
198.453 64.1856 li
199.253 64.1856 li
199.253 64.9856 li
199.253 62.9057 mo
198.453 62.9057 li
198.453 57.7856 li
199.253 57.7856 li
199.253 61.3215 li
198.981 61.3215 li
198.981 62.1215 li
199.253 62.1215 li
199.253 62.9057 li
199.253 56.5056 mo
198.453 56.5056 li
198.453 55.7057 li
199.253 55.7057 li
199.253 56.5056 li
199.253 54.4256 mo
198.453 54.4256 li
198.453 49.3056 li
199.253 49.3056 li
199.253 54.4256 li
199.253 48.0257 mo
198.453 48.0257 li
198.453 47.2256 li
199.253 47.2256 li
199.253 48.0257 li
199.253 45.9456 mo
198.453 45.9456 li
198.453 40.8257 li
199.253 40.8257 li
199.253 45.9456 li
199.253 39.5456 mo
198.453 39.5456 li
198.453 38.7457 li
199.253 38.7457 li
199.253 39.5456 li
199.253 37.4657 mo
198.453 37.4657 li
198.453 32.3456 li
199.253 32.3456 li
199.253 33.2895 li
198.981 33.2895 li
198.981 34.0895 li
199.253 34.0895 li
199.253 37.4657 li
199.253 31.0657 mo
198.453 31.0657 li
198.453 30.2657 li
199.253 30.2657 li
199.253 31.0657 li
199.253 28.9856 mo
198.453 28.9856 li
198.453 23.8657 li
199.253 23.8657 li
199.253 28.9856 li
199.253 22.5857 mo
198.453 22.5857 li
198.453 21.7857 li
199.253 21.7857 li
199.253 22.5857 li
199.253 20.5057 mo
198.453 20.5057 li
198.453 15.3857 li
199.253 15.3857 li
199.253 20.5057 li
199.253 14.1058 mo
198.453 14.1058 li
198.453 13.3057 li
199.253 13.3057 li
199.253 14.1058 li
199.253 12.0257 mo
198.453 12.0257 li
198.453 11.1575 li
199.253 11.1575 li
199.253 12.0257 li
f
214.47 62.1215 mo
209.541 62.1215 li
209.541 61.3215 li
214.47 61.3215 li
214.47 62.1215 li
208.261 62.1215 mo
207.461 62.1215 li
207.461 61.3215 li
208.261 61.3215 li
208.261 62.1215 li
206.181 62.1215 mo
201.061 62.1215 li
201.061 61.3215 li
206.181 61.3215 li
206.181 62.1215 li
199.781 62.1215 mo
199.253 62.1215 li
198.981 62.1215 li
198.981 61.3215 li
199.253 61.3215 li
199.781 61.3215 li
199.781 62.1215 li
197.701 62.1215 mo
192.581 62.1215 li
192.581 61.3215 li
197.701 61.3215 li
197.701 62.1215 li
191.301 62.1215 mo
190.501 62.1215 li
190.501 61.3215 li
191.301 61.3215 li
191.301 62.1215 li
189.221 62.1215 mo
184.101 62.1215 li
184.101 61.3215 li
189.221 61.3215 li
189.221 62.1215 li
182.821 62.1215 mo
182.021 62.1215 li
182.021 61.3215 li
182.821 61.3215 li
182.821 62.1215 li
180.741 62.1215 mo
175.621 62.1215 li
175.621 61.3215 li
180.741 61.3215 li
180.741 62.1215 li
174.341 62.1215 mo
173.541 62.1215 li
173.541 61.3215 li
174.341 61.3215 li
174.341 62.1215 li
172.261 62.1215 mo
167.141 62.1215 li
167.141 61.3215 li
172.261 61.3215 li
172.261 62.1215 li
165.861 62.1215 mo
165.061 62.1215 li
165.061 61.3215 li
165.861 61.3215 li
165.861 62.1215 li
163.781 62.1215 mo
163.541 62.1215 li
162.741 62.1215 li
158.661 62.1215 li
158.661 61.3215 li
162.741 61.3215 li
163.541 61.3215 li
163.781 61.3215 li
163.781 62.1215 li
157.381 62.1215 mo
156.581 62.1215 li
156.581 61.3215 li
157.381 61.3215 li
157.381 62.1215 li
155.301 62.1215 mo
150.181 62.1215 li
150.181 61.3215 li
155.301 61.3215 li
155.301 62.1215 li
148.901 62.1215 mo
148.101 62.1215 li
148.101 61.3215 li
148.901 61.3215 li
148.901 62.1215 li
146.821 62.1215 mo
141.701 62.1215 li
141.701 61.3215 li
146.821 61.3215 li
146.821 62.1215 li
140.421 62.1215 mo
139.621 62.1215 li
139.621 61.3215 li
140.421 61.3215 li
140.421 62.1215 li
138.341 62.1215 mo
133.221 62.1215 li
133.221 61.3215 li
138.341 61.3215 li
138.341 62.1215 li
131.941 62.1215 mo
131.141 62.1215 li
131.141 61.3215 li
131.941 61.3215 li
131.941 62.1215 li
129.861 62.1215 mo
127.829 62.1215 li
127.029 62.1215 li
124.741 62.1215 li
124.741 61.3215 li
127.029 61.3215 li
127.829 61.3215 li
129.861 61.3215 li
129.861 62.1215 li
123.461 62.1215 mo
122.661 62.1215 li
122.661 61.3215 li
123.461 61.3215 li
123.461 62.1215 li
121.381 62.1215 mo
116.261 62.1215 li
116.261 61.3215 li
121.381 61.3215 li
121.381 62.1215 li
114.981 62.1215 mo
114.181 62.1215 li
114.181 61.3215 li
114.981 61.3215 li
114.981 62.1215 li
112.901 62.1215 mo
107.781 62.1215 li
107.781 61.3215 li
112.901 61.3215 li
112.901 62.1215 li
106.501 62.1215 mo
105.701 62.1215 li
105.701 61.3215 li
106.501 61.3215 li
106.501 62.1215 li
104.421 62.1215 mo
99.3006 62.1215 li
99.3006 61.3215 li
104.421 61.3215 li
104.421 62.1215 li
98.0207 62.1215 mo
97.2206 62.1215 li
97.2206 61.3215 li
98.0207 61.3215 li
98.0207 62.1215 li
95.9406 62.1215 mo
92.1166 62.1215 li
91.3166 62.1215 li
90.8207 62.1215 li
90.8207 61.3215 li
91.3166 61.3215 li
92.1166 61.3215 li
95.9406 61.3215 li
95.9406 62.1215 li
89.5406 62.1215 mo
88.7406 62.1215 li
88.7406 61.3215 li
89.5406 61.3215 li
89.5406 62.1215 li
87.4607 62.1215 mo
82.3406 62.1215 li
82.3406 61.3215 li
87.4607 61.3215 li
87.4607 62.1215 li
81.0606 62.1215 mo
80.2607 62.1215 li
80.2607 61.3215 li
81.0606 61.3215 li
81.0606 62.1215 li
f
214.47 34.0895 mo
209.541 34.0895 li
209.541 33.2895 li
214.47 33.2895 li
214.47 34.0895 li
208.261 34.0895 mo
207.461 34.0895 li
207.461 33.2895 li
208.261 33.2895 li
208.261 34.0895 li
206.181 34.0895 mo
201.061 34.0895 li
201.061 33.2895 li
206.181 33.2895 li
206.181 34.0895 li
199.781 34.0895 mo
199.253 34.0895 li
198.981 34.0895 li
198.981 33.2895 li
199.253 33.2895 li
199.781 33.2895 li
199.781 34.0895 li
197.701 34.0895 mo
192.581 34.0895 li
192.581 33.2895 li
197.701 33.2895 li
197.701 34.0895 li
191.301 34.0895 mo
190.501 34.0895 li
190.501 33.2895 li
191.301 33.2895 li
191.301 34.0895 li
189.221 34.0895 mo
184.101 34.0895 li
184.101 33.2895 li
189.221 33.2895 li
189.221 34.0895 li
182.821 34.0895 mo
182.021 34.0895 li
182.021 33.2895 li
182.821 33.2895 li
182.821 34.0895 li
180.741 34.0895 mo
175.621 34.0895 li
175.621 33.2895 li
180.741 33.2895 li
180.741 34.0895 li
174.341 34.0895 mo
173.541 34.0895 li
173.541 33.2895 li
174.341 33.2895 li
174.341 34.0895 li
172.261 34.0895 mo
167.141 34.0895 li
167.141 33.2895 li
172.261 33.2895 li
172.261 34.0895 li
165.861 34.0895 mo
165.061 34.0895 li
165.061 33.2895 li
165.861 33.2895 li
165.861 34.0895 li
163.781 34.0895 mo
163.541 34.0895 li
162.741 34.0895 li
158.661 34.0895 li
158.661 33.2895 li
162.741 33.2895 li
163.541 33.2895 li
163.781 33.2895 li
163.781 34.0895 li
157.381 34.0895 mo
156.581 34.0895 li
156.581 33.2895 li
157.381 33.2895 li
157.381 34.0895 li
155.301 34.0895 mo
150.181 34.0895 li
150.181 33.2895 li
155.301 33.2895 li
155.301 34.0895 li
148.901 34.0895 mo
148.101 34.0895 li
148.101 33.2895 li
148.901 33.2895 li
148.901 34.0895 li
146.821 34.0895 mo
141.701 34.0895 li
141.701 33.2895 li
146.821 33.2895 li
146.821 34.0895 li
140.421 34.0895 mo
139.621 34.0895 li
139.621 33.2895 li
140.421 33.2895 li
140.421 34.0895 li
138.341 34.0895 mo
133.221 34.0895 li
133.221 33.2895 li
138.341 33.2895 li
138.341 34.0895 li
131.941 34.0895 mo
131.141 34.0895 li
131.141 33.2895 li
131.941 33.2895 li
131.941 34.0895 li
129.861 34.0895 mo
127.829 34.0895 li
127.029 34.0895 li
124.741 34.0895 li
124.741 33.2895 li
127.029 33.2895 li
127.829 33.2895 li
129.861 33.2895 li
129.861 34.0895 li
123.461 34.0895 mo
122.661 34.0895 li
122.661 33.2895 li
123.461 33.2895 li
123.461 34.0895 li
121.381 34.0895 mo
116.261 34.0895 li
116.261 33.2895 li
121.381 33.2895 li
121.381 34.0895 li
114.981 34.0895 mo
114.181 34.0895 li
114.181 33.2895 li
114.981 33.2895 li
114.981 34.0895 li
112.901 34.0895 mo
107.781 34.0895 li
107.781 33.2895 li
112.901 33.2895 li
112.901 34.0895 li
106.501 34.0895 mo
105.701 34.0895 li
105.701 33.2895 li
106.501 33.2895 li
106.501 34.0895 li
104.421 34.0895 mo
99.3006 34.0895 li
99.3006 33.2895 li
104.421 33.2895 li
104.421 34.0895 li
98.0207 34.0895 mo
97.2206 34.0895 li
97.2206 33.2895 li
98.0207 33.2895 li
98.0207 34.0895 li
95.9406 34.0895 mo
92.1166 34.0895 li
91.3166 34.0895 li
90.8207 34.0895 li
90.8207 33.2895 li
91.3166 33.2895 li
92.1166 33.2895 li
95.9406 33.2895 li
95.9406 34.0895 li
89.5406 34.0895 mo
88.7406 34.0895 li
88.7406 33.2895 li
89.5406 33.2895 li
89.5406 34.0895 li
87.4607 34.0895 mo
82.3406 34.0895 li
82.3406 33.2895 li
87.4607 33.2895 li
87.4607 34.0895 li
81.0606 34.0895 mo
80.2607 34.0895 li
80.2607 33.2895 li
81.0606 33.2895 li
81.0606 34.0895 li
f
195.578 86.5169 mo
193.291 86.5169 li
195.632 82.2907 li
197.919 82.2907 li
195.578 86.5169 li
202.603 76.624 mo
202.603 74.7907 li
201.666 74.7907 li
214.47 63.7348 li
214.47 66.3772 li
202.603 76.624 li
.168627 .0980392 .0117647 0 cmyk
f
201.603 81.2907 mo
196.103 81.2907 li
196.103 75.7907 li
201.603 75.7907 li
201.603 81.2907 li
.0588235 .00784314 .0117647 0 cmyk
f
202.603 82.2907 mo
197.919 82.2907 li
195.632 82.2907 li
195.103 82.2907 li
195.103 81.7907 li
195.603 81.7907 li
195.103 81.7907 li
195.103 74.7907 li
198.453 74.7907 li
199.253 74.7907 li
201.666 74.7907 li
202.603 74.7907 li
202.603 76.624 li
202.603 82.2907 li
196.103 81.2907 mo
201.603 81.2907 li
201.603 75.7907 li
196.103 75.7907 li
196.103 81.2907 li
.176471 .152941 0 0 cmyk
f
212.981 87.5169 mo
212.977 87.5169 212.974 87.5169 212.97 87.5169 cv
199.253 87.5169 li
199.253 86.5169 li
212.97 86.5169 li
213.56 86.515 213.907 86.3728 214.116 86.1633 cv
214.326 85.9541 214.468 85.6068 214.47 85.0169 cv
214.47 66.3772 li
215.47 65.5138 li
215.47 85.0169 li
215.472 85.7603 215.281 86.4129 214.824 86.8705 cv
214.368 87.3254 213.72 87.5169 212.981 87.5169 cv
198.453 87.5169 mo
195.024 87.5169 li
195.578 86.5169 li
198.453 86.5169 li
198.453 87.5169 li
1 /1 /CSD get_res sepcs
.160784 sep
f
199.253 87.5169 mo
198.453 87.5169 li
198.453 86.5169 li
199.253 86.5169 li
199.253 87.5169 li
1 /1 /CSD get_res sepcs
.223529 sep
f
80.85 87.5169 mo
80.1109 87.5169 79.4624 87.3254 79.0071 86.8705 cv
78.5499 86.4129 78.3589 85.7603 78.3606 85.0169 cv
78.3606 62.1215 li
78.9806 62.1215 li
78.9806 61.3215 li
78.3606 61.3215 li
78.3606 34.0895 li
78.9806 34.0895 li
78.9806 33.2895 li
78.3606 33.2895 li
78.3606 12.6575 li
78.3589 11.914 78.5499 11.2615 79.0071 10.8039 cv
79.4624 10.349 80.1109 10.1575 80.85 10.1575 cv
80.8536 10.1575 80.8571 10.1575 80.8607 10.1575 cv
91.3166 10.1575 li
91.3166 11.1575 li
80.8607 11.1575 li
80.2708 11.1593 79.9233 11.3016 79.7141 11.5111 cv
79.5046 11.7201 79.3624 12.0676 79.3607 12.6575 cv
79.3607 85.0169 li
79.3624 85.6068 79.5046 85.9541 79.7141 86.1633 cv
79.9233 86.3728 80.2708 86.515 80.8607 86.5169 cv
80.8607 86.5169 li
91.3166 86.5169 li
91.3166 87.5169 li
80.8607 87.5169 li
80.8571 87.5169 80.8535 87.5169 80.85 87.5169 cv
192.738 87.5169 mo
163.541 87.5169 li
163.541 86.5169 li
193.291 86.5169 li
192.738 87.5169 li
162.741 87.5169 mo
127.829 87.5169 li
127.829 86.5169 li
162.741 86.5169 li
162.741 87.5169 li
127.029 87.5169 mo
92.1166 87.5169 li
92.1166 86.5169 li
127.029 86.5169 li
127.029 87.5169 li
214.47 63.7348 mo
214.47 62.1215 li
214.661 62.1215 li
214.661 61.3215 li
214.47 61.3215 li
214.47 34.0895 li
214.661 34.0895 li
214.661 33.2895 li
214.47 33.2895 li
214.47 12.6575 li
214.468 12.0676 214.326 11.7201 214.116 11.5111 cv
213.907 11.3016 213.56 11.1593 212.97 11.1575 cv
199.253 11.1575 li
199.253 10.1575 li
212.97 10.1575 li
212.974 10.1575 212.977 10.1575 212.981 10.1575 cv
213.72 10.1575 214.368 10.349 214.824 10.8039 cv
215.281 11.2615 215.472 11.914 215.47 12.6575 cv
215.47 62.8714 li
214.47 63.7348 li
198.453 11.1575 mo
163.541 11.1575 li
163.541 10.1575 li
198.453 10.1575 li
198.453 11.1575 li
162.741 11.1575 mo
127.829 11.1575 li
127.829 10.1575 li
162.741 10.1575 li
162.741 11.1575 li
127.029 11.1575 mo
92.1166 11.1575 li
92.1166 10.1575 li
127.029 10.1575 li
127.029 11.1575 li
1 /1 /CSD get_res sepcs
.160784 sep
f
92.1166 87.5169 mo
91.3166 87.5169 li
91.3166 86.5169 li
92.1166 86.5169 li
92.1166 87.5169 li
92.1166 11.1575 mo
91.3166 11.1575 li
91.3166 10.1575 li
92.1166 10.1575 li
92.1166 11.1575 li
1 /1 /CSD get_res sepcs
.223529 sep
f
127.829 87.5169 mo
127.029 87.5169 li
127.029 86.5169 li
127.829 86.5169 li
127.829 87.5169 li
127.829 11.1575 mo
127.029 11.1575 li
127.029 10.1575 li
127.829 10.1575 li
127.829 11.1575 li
f
163.541 87.5169 mo
162.741 87.5169 li
162.741 86.5169 li
163.541 86.5169 li
163.541 87.5169 li
163.541 11.1575 mo
162.741 11.1575 li
162.741 10.1575 li
163.541 10.1575 li
163.541 11.1575 li
f
199.253 11.1575 mo
198.453 11.1575 li
198.453 10.1575 li
199.253 10.1575 li
199.253 11.1575 li
f
214.661 62.1215 mo
214.47 62.1215 li
214.47 61.3215 li
214.661 61.3215 li
214.661 62.1215 li
78.9806 62.1215 mo
78.3606 62.1215 li
78.3606 61.3215 li
78.9806 61.3215 li
78.9806 62.1215 li
f
214.661 34.0895 mo
214.47 34.0895 li
214.47 33.2895 li
214.661 33.2895 li
214.661 34.0895 li
78.9806 34.0895 mo
78.3606 34.0895 li
78.3606 33.2895 li
78.9806 33.2895 li
78.9806 34.0895 li
f
195.024 87.5169 mo
192.738 87.5169 li
193.291 86.5169 li
195.578 86.5169 li
195.024 87.5169 li
214.47 66.3772 mo
214.47 63.7348 li
215.47 62.8714 li
215.47 65.5138 li
214.47 66.3772 li
.168627 .0980392 .0117647 .160784 cmyk
f
2 lw
1 lj
82.8606 18.7513 mo
102.861 18.7513 li
.847868 .481636 .0599985 .000640879 cmyk
@
89.6106 22.0013 mo
96.1106 22.0013 li
96.1106 15.5013 li
89.6106 15.5013 li
cp
.302342 .0311284 .066041 0 cmyk
f
1 lw
0 lc
0 lj
89.6106 22.0013 mo
96.1106 22.0013 li
96.1106 15.5013 li
89.6106 15.5013 li
cp
.883665 .769162 0 0 cmyk
@
111.841 14.9613 mo
112.831 14.9613 li
112.831 17.9513 li
116.411 17.9513 li
116.411 14.9613 li
117.401 14.9613 li
117.401 22.2513 li
116.411 22.2513 li
116.411 18.7813 li
112.831 18.7813 li
112.831 22.2513 li
111.841 22.2513 li
111.841 14.9613 li
1 /0 /CSD get_res sepcs
1 sep
f
124.001 19.2913 mo
124.001 19.7313 li
119.871 19.7313 li
119.911 20.3513 120.091 20.8313 120.431 21.1513 cv
120.761 21.4713 121.221 21.6313 121.821 21.6313 cv
122.161 21.6313 122.501 21.5913 122.821 21.5113 cv
123.141 21.4313 123.471 21.3013 123.791 21.1213 cv
123.791 21.9713 li
123.471 22.1113 123.141 22.2213 122.801 22.2813 cv
122.461 22.3413 122.111 22.3813 121.771 22.3813 cv
120.891 22.3813 120.201 22.1313 119.691 21.6313 cv
119.181 21.1313 118.931 20.4413 118.931 19.5713 cv
118.931 18.6813 119.171 17.9713 119.651 17.4412 cv
120.131 16.9213 120.791 16.6513 121.611 16.6513 cv
122.351 16.6513 122.931 16.8913 123.361 17.3613 cv
123.781 17.8413 124.001 18.4813 124.001 19.2913 cv
123.101 19.0313 mo
123.091 18.5413 122.951 18.1513 122.691 17.8513 cv
122.421 17.5613 122.061 17.4113 121.621 17.4113 cv
121.121 17.4113 120.721 17.5613 120.421 17.8413 cv
120.121 18.1213 119.941 18.5213 119.901 19.0313 cv
123.101 19.0313 li
f
130.021 16.7813 mo
128.041 19.4413 li
130.121 22.2513 li
129.061 22.2513 li
127.471 20.1013 li
125.881 22.2513 li
124.821 22.2513 li
126.941 19.3913 li
125.001 16.7813 li
126.061 16.7813 li
127.511 18.7313 li
128.961 16.7813 li
130.021 16.7813 li
f
136.401 21.2113 mo
136.401 19.2513 li
134.791 19.2513 li
134.791 18.4413 li
137.381 18.4413 li
137.381 21.5713 li
137.001 21.8513 136.581 22.0513 136.121 22.1813 cv
135.661 22.3113 135.171 22.3813 134.651 22.3813 cv
133.511 22.3813 132.611 22.0513 131.971 21.3913 cv
131.331 20.7313 131.011 19.8013 131.011 18.6113 cv
131.011 17.4313 131.331 16.5013 131.971 15.8313 cv
132.611 15.1713 133.511 14.8313 134.651 14.8313 cv
135.121 14.8313 135.571 14.8913 136.001 15.0113 cv
136.431 15.1313 136.831 15.3013 137.191 15.5213 cv
137.191 16.5713 li
136.821 16.2713 136.431 16.0413 136.021 15.8813 cv
135.611 15.7213 135.181 15.6413 134.731 15.6413 cv
133.831 15.6413 133.161 15.8913 132.721 16.3913 cv
132.271 16.8913 132.051 17.6313 132.051 18.6113 cv
132.051 19.6013 132.271 20.3413 132.721 20.8413 cv
133.161 21.3413 133.831 21.5813 134.731 21.5813 cv
135.071 21.5813 135.381 21.5513 135.661 21.4913 cv
135.941 21.4313 136.181 21.3413 136.401 21.2113 cv
f
141.621 15.9313 mo
140.281 19.5613 li
142.961 19.5613 li
141.621 15.9313 li
141.061 14.9613 mo
142.181 14.9613 li
144.961 22.2513 li
143.931 22.2513 li
143.271 20.3813 li
139.981 20.3813 li
139.321 22.2513 li
138.281 22.2513 li
141.061 14.9613 li
f
146.021 14.9613 mo
147.351 14.9613 li
150.581 21.0613 li
150.581 14.9613 li
151.541 14.9613 li
151.541 22.2513 li
150.211 22.2513 li
146.981 16.1513 li
146.981 22.2513 li
146.021 22.2513 li
146.021 14.9613 li
f
153.501 14.9613 mo
157.691 14.9613 li
157.691 15.7913 li
154.491 15.7913 li
154.491 17.9412 li
157.381 17.9412 li
157.381 18.7713 li
154.491 18.7713 li
154.491 22.2513 li
153.501 22.2513 li
153.501 14.9613 li
f
159.121 20.0913 mo
159.121 16.7813 li
160.021 16.7813 li
160.021 20.0613 li
160.021 20.5813 160.121 20.9613 160.321 21.2213 cv
160.521 21.4813 160.821 21.6113 161.231 21.6113 cv
161.711 21.6113 162.101 21.4613 162.381 21.1513 cv
162.661 20.8413 162.801 20.4213 162.801 19.8813 cv
162.801 16.7813 li
163.701 16.7813 li
163.701 22.2513 li
162.801 22.2513 li
162.801 21.4113 li
162.581 21.7513 162.321 21.9913 162.041 22.1513 cv
161.751 22.3013 161.421 22.3813 161.041 22.3813 cv
160.411 22.3813 159.931 22.1913 159.611 21.8013 cv
159.281 21.4213 159.121 20.8513 159.121 20.0913 cv
161.381 16.6513 mo
161.381 16.6513 li
f
165.161 16.7813 mo
169.431 16.7813 li
169.431 17.6013 li
166.051 21.5313 li
169.431 21.5313 li
169.431 22.2513 li
165.041 22.2513 li
165.041 21.4313 li
168.421 17.5013 li
165.161 17.5013 li
165.161 16.7813 li
f
170.411 16.7813 mo
174.681 16.7813 li
174.681 17.6013 li
171.301 21.5313 li
174.681 21.5313 li
174.681 22.2513 li
170.291 22.2513 li
170.291 21.4313 li
173.671 17.5013 li
170.411 17.5013 li
170.411 16.7813 li
f
180.73 19.2913 mo
180.73 19.7313 li
176.601 19.7313 li
176.641 20.3513 176.821 20.8313 177.161 21.1513 cv
177.491 21.4713 177.951 21.6313 178.551 21.6313 cv
178.891 21.6313 179.23 21.5913 179.551 21.5113 cv
179.87 21.4313 180.201 21.3013 180.521 21.1213 cv
180.521 21.9713 li
180.201 22.1113 179.87 22.2213 179.531 22.2813 cv
179.191 22.3413 178.84 22.3813 178.501 22.3813 cv
177.62 22.3813 176.931 22.1313 176.421 21.6313 cv
175.911 21.1313 175.661 20.4413 175.661 19.5713 cv
175.661 18.6813 175.9 17.9713 176.381 17.4412 cv
176.861 16.9213 177.521 16.6513 178.34 16.6513 cv
179.081 16.6513 179.661 16.8913 180.09 17.3613 cv
180.51 17.8413 180.73 18.4813 180.73 19.2913 cv
179.831 19.0313 mo
179.821 18.5413 179.681 18.1513 179.421 17.8513 cv
179.15 17.5613 178.79 17.4113 178.351 17.4113 cv
177.851 17.4113 177.451 17.5613 177.15 17.8413 cv
176.851 18.1213 176.671 18.5213 176.631 19.0313 cv
179.831 19.0313 li
f
185.371 17.6213 mo
185.271 17.5613 185.161 17.5213 185.041 17.4913 cv
184.921 17.4713 184.791 17.4513 184.651 17.4513 cv
184.141 17.4513 183.751 17.6213 183.481 17.9513 cv
183.201 18.2813 183.071 18.7513 183.071 19.3713 cv
183.071 22.2513 li
182.171 22.2513 li
182.171 16.7813 li
183.071 16.7813 li
183.071 17.6313 li
183.251 17.3013 183.501 17.0513 183.801 16.8913 cv
184.101 16.7313 184.471 16.6513 184.911 16.6513 cv
185.121 16.6613 li
185.191 16.6713 185.271 16.6813 185.371 16.7013 cv
185.371 17.6213 li
f
.8 lw
2 lc
1 lj
82.8606 33.4231 mo
102.861 33.4231 li
0 .620539 1 0 cmyk
@
92.8606 35.9231 mo
93.5236 35.9231 94.1596 35.6597 94.6284 35.1909 cv
95.0972 34.7221 95.3606 34.0861 95.3606 33.4231 cv
95.3606 32.7601 95.0972 32.1242 94.6284 31.6554 cv
94.1596 31.1865 93.5236 30.9231 92.8606 30.9231 cv
92.1976 30.9231 91.5617 31.1865 91.0929 31.6554 cv
90.624 32.1242 90.3606 32.7601 90.3606 33.4231 cv
90.3606 34.0861 90.624 34.7221 91.0929 35.1909 cv
91.5617 35.6597 92.1976 35.9231 92.8606 35.9231 cv
cp
f
1 lw
0 lc
92.8606 35.9231 mo
93.5236 35.9231 94.1596 35.6597 94.6284 35.1909 cv
95.0972 34.7221 95.3606 34.0861 95.3606 33.4231 cv
95.3606 32.7601 95.0972 32.1242 94.6284 31.6554 cv
94.1596 31.1865 93.5236 30.9231 92.8606 30.9231 cv
92.1976 30.9231 91.5617 31.1865 91.0929 31.6554 cv
90.624 32.1242 90.3606 32.7601 90.3606 33.4231 cv
90.3606 34.0861 90.624 34.7221 91.0929 35.1909 cv
91.5617 35.6597 92.1976 35.9231 92.8606 35.9231 cv
cp
@
111.191 29.6331 mo
112.191 29.6331 li
113.721 35.7931 li
115.251 29.6331 li
116.361 29.6331 li
117.891 35.7931 li
119.421 29.6331 li
120.421 29.6331 li
118.591 36.9231 li
117.351 36.9231 li
115.811 30.5931 li
114.261 36.9231 li
113.021 36.9231 li
111.191 29.6331 li
1 /0 /CSD get_res sepcs
1 sep
f
126.701 35.8831 mo
126.701 33.9231 li
125.091 33.9231 li
125.091 33.1131 li
127.681 33.1131 li
127.681 36.2431 li
127.301 36.5231 126.881 36.7231 126.421 36.8531 cv
125.961 36.9831 125.471 37.0531 124.951 37.0531 cv
123.811 37.0531 122.911 36.7231 122.271 36.0631 cv
121.631 35.4031 121.311 34.4731 121.311 33.2831 cv
121.311 32.1031 121.631 31.1731 122.271 30.5031 cv
122.911 29.8431 123.811 29.5031 124.951 29.5031 cv
125.421 29.5031 125.871 29.5631 126.301 29.6831 cv
126.731 29.8031 127.131 29.9731 127.491 30.1931 cv
127.491 31.2431 li
127.121 30.9431 126.731 30.7131 126.321 30.5531 cv
125.911 30.3931 125.481 30.3131 125.031 30.3131 cv
124.131 30.3131 123.461 30.5631 123.021 31.0631 cv
122.571 31.5631 122.351 32.3031 122.351 33.2831 cv
122.351 34.2731 122.571 35.0131 123.021 35.5131 cv
123.461 36.0131 124.131 36.2531 125.031 36.2531 cv
125.371 36.2531 125.681 36.2231 125.961 36.1631 cv
126.241 36.1031 126.481 36.0131 126.701 35.8831 cv
f
131.921 30.6031 mo
130.581 34.2331 li
133.261 34.2331 li
131.921 30.6031 li
131.361 29.6331 mo
132.481 29.6331 li
135.261 36.9231 li
134.231 36.9231 li
133.571 35.0531 li
130.281 35.0531 li
129.621 36.9231 li
128.581 36.9231 li
131.361 29.6331 li
f
136.321 29.6331 mo
137.651 29.6331 li
140.881 35.7331 li
140.881 29.6331 li
141.841 29.6331 li
141.841 36.9231 li
140.511 36.9231 li
137.281 30.8231 li
137.281 36.9231 li
136.321 36.9231 li
136.321 29.6331 li
f
143.311 33.7831 mo
145.941 33.7831 li
145.941 34.5831 li
143.311 34.5831 li
143.311 33.7831 li
f
151.301 34.1931 mo
151.301 33.5331 151.161 33.0231 150.891 32.6431 cv
150.611 32.2631 150.241 32.0731 149.771 32.0731 cv
149.291 32.0731 148.921 32.2631 148.651 32.6431 cv
148.371 33.0231 148.241 33.5331 148.241 34.1931 cv
148.241 34.8531 148.371 35.3731 148.651 35.7531 cv
148.921 36.1331 149.291 36.3131 149.771 36.3131 cv
150.241 36.3131 150.611 36.1331 150.891 35.7531 cv
151.161 35.3731 151.301 34.8531 151.301 34.1931 cv
148.241 32.2831 mo
148.421 31.9631 148.661 31.7231 148.951 31.5631 cv
149.241 31.4031 149.591 31.3231 149.991 31.3231 cv
150.651 31.3231 151.191 31.5931 151.611 32.1131 cv
152.021 32.6431 152.231 33.3331 152.231 34.1931 cv
152.231 35.0531 152.021 35.7531 151.611 36.2731 cv
151.191 36.7931 150.651 37.0531 149.991 37.0531 cv
149.591 37.0531 149.241 36.9731 148.951 36.8231 cv
148.661 36.6731 148.421 36.4331 148.241 36.1031 cv
148.241 36.9231 li
147.341 36.9231 li
147.341 29.3231 li
148.241 29.3231 li
148.241 32.2831 li
f
156.21 34.1731 mo
155.48 34.1731 154.98 34.2631 154.7 34.4231 cv
154.42 34.5931 154.28 34.8731 154.28 35.2731 cv
154.28 35.5931 154.38 35.8531 154.59 36.0331 cv
154.8 36.2231 155.09 36.3131 155.45 36.3131 cv
155.95 36.3131 156.35 36.1431 156.65 35.7831 cv
156.95 35.4331 157.1 34.9631 157.1 34.3731 cv
157.1 34.1731 li
156.21 34.1731 li
158 33.8031 mo
158 36.9231 li
157.1 36.9231 li
157.1 36.0931 li
156.89 36.4331 156.63 36.6731 156.33 36.8231 cv
156.03 36.9731 155.65 37.0531 155.21 37.0531 cv
154.65 37.0531 154.2 36.9031 153.87 36.5931 cv
153.54 36.2831 153.38 35.8631 153.38 35.3331 cv
153.38 34.7231 153.58 34.2631 154 33.9431 cv
154.41 33.6331 155.02 33.4731 155.84 33.4731 cv
157.1 33.4731 li
157.1 33.3831 li
157.1 32.9731 156.96 32.6531 156.69 32.4231 cv
156.42 32.2031 156.04 32.0831 155.55 32.0831 cv
155.23 32.0831 154.93 32.1231 154.63 32.2031 cv
154.33 32.2831 154.05 32.3931 153.78 32.5331 cv
153.78 31.7031 li
154.1 31.5831 154.42 31.4831 154.73 31.4231 cv
155.04 31.3631 155.34 31.3231 155.64 31.3231 cv
156.43 31.3231 157.02 31.5331 157.41 31.9431 cv
157.8 32.3531 158 32.9731 158 33.8031 cv
f
163.341 31.6131 mo
163.341 32.4631 li
163.081 32.3431 162.821 32.2431 162.551 32.1731 cv
162.271 32.1131 161.991 32.0731 161.701 32.0731 cv
161.251 32.0731 160.911 32.1431 160.691 32.2831 cv
160.471 32.4231 160.361 32.6231 160.361 32.8931 cv
160.361 33.1031 160.441 33.2631 160.601 33.3831 cv
160.761 33.5031 161.081 33.6231 161.561 33.7231 cv
161.871 33.7931 li
162.511 33.9331 162.961 34.1331 163.231 34.3731 cv
163.491 34.6231 163.631 34.9731 163.631 35.4131 cv
163.631 35.9231 163.431 36.3231 163.031 36.6131 cv
162.631 36.9131 162.071 37.0531 161.371 37.0531 cv
161.071 37.0531 160.771 37.0231 160.451 36.9731 cv
160.131 36.9231 159.801 36.8431 159.451 36.7231 cv
159.451 35.7931 li
159.781 35.9731 160.111 36.1031 160.431 36.1831 cv
160.751 36.2731 161.071 36.3131 161.391 36.3131 cv
161.811 36.3131 162.141 36.2431 162.371 36.1031 cv
162.591 35.9631 162.711 35.7531 162.711 35.4831 cv
162.711 35.2431 162.621 35.0531 162.461 34.9231 cv
162.301 34.7931 161.941 34.6631 161.381 34.5431 cv
161.071 34.4731 li
160.511 34.3531 160.101 34.1731 159.861 33.9331 cv
159.611 33.6931 159.491 33.3631 159.491 32.9331 cv
159.491 32.4231 159.671 32.0231 160.031 31.7431 cv
160.391 31.4631 160.911 31.3231 161.591 31.3231 cv
161.921 31.3231 162.231 31.3531 162.531 31.4031 cv
162.821 31.4531 163.091 31.5231 163.341 31.6131 cv
f
169.741 33.9631 mo
169.741 34.4031 li
165.611 34.4031 li
165.651 35.0231 165.831 35.5031 166.171 35.8231 cv
166.501 36.1431 166.961 36.3031 167.561 36.3031 cv
167.901 36.3031 168.241 36.2631 168.561 36.1831 cv
168.881 36.1031 169.211 35.9731 169.531 35.7931 cv
169.531 36.6431 li
169.211 36.7831 168.881 36.8931 168.541 36.9531 cv
168.201 37.0131 167.851 37.0531 167.511 37.0531 cv
166.631 37.0531 165.941 36.8031 165.431 36.3031 cv
164.921 35.8031 164.671 35.1131 164.671 34.2431 cv
164.671 33.3531 164.911 32.6431 165.391 32.1131 cv
165.871 31.5931 166.531 31.3231 167.351 31.3231 cv
168.091 31.3231 168.671 31.5631 169.101 32.0331 cv
169.521 32.5131 169.741 33.1531 169.741 33.9631 cv
168.841 33.7031 mo
168.831 33.2131 168.691 32.8231 168.431 32.5231 cv
168.161 32.2331 167.801 32.0831 167.361 32.0831 cv
166.861 32.0831 166.461 32.2331 166.161 32.5131 cv
165.861 32.7931 165.681 33.1931 165.641 33.7031 cv
168.841 33.7031 li
f
174.811 32.2831 mo
174.811 29.3231 li
175.711 29.3231 li
175.711 36.9231 li
174.811 36.9231 li
174.811 36.1031 li
174.621 36.4331 174.381 36.6731 174.091 36.8231 cv
173.801 36.9731 173.461 37.0531 173.061 37.0531 cv
172.401 37.0531 171.861 36.7931 171.441 36.2731 cv
171.021 35.7531 170.821 35.0531 170.821 34.1931 cv
170.821 33.3331 171.021 32.6431 171.441 32.1131 cv
171.861 31.5931 172.401 31.3231 173.061 31.3231 cv
173.461 31.3231 173.801 31.4031 174.091 31.5631 cv
174.381 31.7231 174.621 31.9631 174.811 32.2831 cv
171.751 34.1931 mo
171.751 34.8531 171.881 35.3731 172.151 35.7531 cv
172.421 36.1331 172.801 36.3131 173.281 36.3131 cv
173.751 36.3131 174.121 36.1331 174.401 35.7531 cv
174.671 35.3731 174.811 34.8531 174.811 34.1931 cv
174.811 33.5331 174.671 33.0231 174.401 32.6431 cv
174.121 32.2631 173.751 32.0731 173.281 32.0731 cv
172.801 32.0731 172.421 32.2631 172.151 32.6431 cv
171.881 33.0231 171.751 33.5331 171.751 34.1931 cv
f
185 32.5031 mo
185.22 32.1031 185.49 31.8131 185.8 31.6131 cv
186.11 31.4231 186.48 31.3231 186.91 31.3231 cv
187.47 31.3231 187.91 31.5231 188.22 31.9231 cv
188.53 32.3231 188.69 32.8931 188.69 33.6231 cv
188.69 36.9231 li
187.79 36.9231 li
187.79 33.6531 li
187.79 33.1331 187.69 32.7431 187.51 32.4831 cv
187.32 32.2331 187.04 32.1031 186.66 32.1031 cv
186.19 32.1031 185.82 32.2631 185.55 32.5731 cv
185.28 32.8831 185.15 33.3031 185.15 33.8331 cv
185.15 36.9231 li
184.25 36.9231 li
184.25 33.6531 li
184.25 33.1331 184.15 32.7431 183.97 32.4831 cv
183.78 32.2331 183.49 32.1031 183.11 32.1031 cv
182.65 32.1031 182.28 32.2631 182.01 32.5731 cv
181.74 32.8831 181.61 33.3031 181.61 33.8331 cv
181.61 36.9231 li
180.71 36.9231 li
180.71 31.4531 li
181.61 31.4531 li
181.61 32.3031 li
181.81 31.9731 182.06 31.7231 182.35 31.5631 cv
182.63 31.4031 182.97 31.3231 183.37 31.3231 cv
183.77 31.3231 184.1 31.4231 184.38 31.6231 cv
184.66 31.8231 184.86 32.1231 185 32.5031 cv
f
192.6 32.0831 mo
192.12 32.0831 191.74 32.2731 191.46 32.6531 cv
191.18 33.0331 191.04 33.5431 191.04 34.1931 cv
191.04 34.8531 191.17 35.3631 191.45 35.7431 cv
191.73 36.1231 192.11 36.3031 192.6 36.3031 cv
193.08 36.3031 193.46 36.1231 193.74 35.7431 cv
194.02 35.3631 194.16 34.8531 194.16 34.1931 cv
194.16 33.5531 194.02 33.0331 193.74 32.6531 cv
193.46 32.2731 193.08 32.0831 192.6 32.0831 cv
192.6 31.3231 mo
193.38 31.3231 193.99 31.5831 194.44 32.0831 cv
194.88 32.5931 195.11 33.2931 195.11 34.1931 cv
195.11 35.0931 194.88 35.7931 194.44 36.2931 cv
193.99 36.8031 193.38 37.0531 192.6 37.0531 cv
191.81 37.0531 191.19 36.8031 190.75 36.2931 cv
190.31 35.7931 190.09 35.0931 190.09 34.1931 cv
190.09 33.2931 190.31 32.5931 190.75 32.0831 cv
191.19 31.5831 191.81 31.3231 192.6 31.3231 cv
f
200.2 32.2831 mo
200.2 29.3231 li
201.1 29.3231 li
201.1 36.9231 li
200.2 36.9231 li
200.2 36.1031 li
200.01 36.4331 199.77 36.6731 199.48 36.8231 cv
199.19 36.9731 198.85 37.0531 198.45 37.0531 cv
197.79 37.0531 197.25 36.7931 196.83 36.2731 cv
196.41 35.7531 196.21 35.0531 196.21 34.1931 cv
196.21 33.3331 196.41 32.6431 196.83 32.1131 cv
197.25 31.5931 197.79 31.3231 198.45 31.3231 cv
198.85 31.3231 199.19 31.4031 199.48 31.5631 cv
199.77 31.7231 200.01 31.9631 200.2 32.2831 cv
197.14 34.1931 mo
197.14 34.8531 197.27 35.3731 197.54 35.7531 cv
197.81 36.1331 198.19 36.3131 198.67 36.3131 cv
199.14 36.3131 199.51 36.1331 199.79 35.7531 cv
200.06 35.3731 200.2 34.8531 200.2 34.1931 cv
200.2 33.5331 200.06 33.0231 199.79 32.6431 cv
199.51 32.2631 199.14 32.0731 198.67 32.0731 cv
198.19 32.0731 197.81 32.2631 197.54 32.6431 cv
197.27 33.0231 197.14 33.5331 197.14 34.1931 cv
f
207.63 33.9631 mo
207.63 34.4031 li
203.5 34.4031 li
203.54 35.0231 203.72 35.5031 204.06 35.8231 cv
204.39 36.1431 204.85 36.3031 205.45 36.3031 cv
205.79 36.3031 206.13 36.2631 206.45 36.1831 cv
206.77 36.1031 207.1 35.9731 207.42 35.7931 cv
207.42 36.6431 li
207.1 36.7831 206.77 36.8931 206.43 36.9531 cv
206.09 37.0131 205.74 37.0531 205.4 37.0531 cv
204.52 37.0531 203.83 36.8031 203.32 36.3031 cv
202.81 35.8031 202.56 35.1131 202.56 34.2431 cv
202.56 33.3531 202.8 32.6431 203.28 32.1131 cv
203.76 31.5931 204.42 31.3231 205.24 31.3231 cv
205.98 31.3231 206.56 31.5631 206.99 32.0331 cv
207.41 32.5131 207.63 33.1531 207.63 33.9631 cv
206.73 33.7031 mo
206.72 33.2131 206.58 32.8231 206.32 32.5231 cv
206.05 32.2331 205.69 32.0831 205.25 32.0831 cv
204.75 32.0831 204.35 32.2331 204.05 32.5131 cv
203.75 32.7931 203.57 33.1931 203.53 33.7031 cv
206.73 33.7031 li
f
209.1 29.3231 mo
210 29.3231 li
210 36.9231 li
209.1 36.9231 li
209.1 29.3231 li
f
.8 lw
2 lc
82.8606 48.095 mo
102.861 48.095 li
.801419 .109255 1 .0133364 cmyk
@
92.8606 50.595 mo
95.3606 45.595 li
90.3606 45.595 li
cp
f
1 lw
0 lc
0 lj
92.8606 50.595 mo
95.3606 45.595 li
90.3606 45.595 li
cp
@
111.841 44.305 mo
112.831 44.305 li
112.831 50.765 li
116.381 50.765 li
116.381 51.595 li
111.841 51.595 li
111.841 44.305 li
1 /0 /CSD get_res sepcs
1 sep
f
121.781 44.545 mo
121.781 45.505 li
121.401 45.325 121.051 45.195 120.721 45.105 cv
120.381 45.025 120.061 44.975 119.761 44.975 cv
119.221 44.975 118.801 45.085 118.511 45.285 cv
118.221 45.495 118.081 45.795 118.081 46.175 cv
118.081 46.495 118.171 46.745 118.371 46.905 cv
118.561 47.075 118.931 47.205 119.471 47.305 cv
120.071 47.425 li
120.801 47.565 121.341 47.815 121.691 48.165 cv
122.041 48.525 122.221 48.995 122.221 49.585 cv
122.221 50.295 121.981 50.825 121.511 51.185 cv
121.031 51.545 120.341 51.725 119.431 51.725 cv
119.081 51.725 118.711 51.685 118.321 51.615 cv
117.931 51.545 117.531 51.435 117.121 51.275 cv
117.121 50.255 li
117.521 50.485 117.911 50.655 118.291 50.765 cv
118.671 50.885 119.051 50.935 119.431 50.935 cv
119.991 50.935 120.421 50.825 120.731 50.605 cv
121.031 50.385 121.191 50.075 121.191 49.655 cv
121.191 49.295 121.081 49.015 120.861 48.815 cv
120.641 48.615 120.281 48.465 119.781 48.365 cv
119.181 48.245 li
118.441 48.105 117.911 47.875 117.581 47.555 cv
117.251 47.245 117.091 46.815 117.091 46.255 cv
117.091 45.615 117.311 45.105 117.771 44.735 cv
118.221 44.365 118.851 44.175 119.651 44.175 cv
119.991 44.175 120.331 44.205 120.691 44.265 cv
121.041 44.325 121.401 44.425 121.781 44.545 cv
f
122.761 44.305 mo
128.921 44.305 li
128.921 45.135 li
126.331 45.135 li
126.331 51.595 li
125.341 51.595 li
125.341 45.135 li
122.761 45.135 li
122.761 44.305 li
f
129.871 44.305 mo
131.341 44.305 li
133.201 49.265 li
135.071 44.305 li
136.541 44.305 li
136.541 51.595 li
135.581 51.595 li
135.581 45.195 li
133.701 50.195 li
132.711 50.195 li
130.831 45.195 li
130.831 51.595 li
129.871 51.595 li
129.871 44.305 li
f
138.011 48.455 mo
140.641 48.455 li
140.641 49.255 li
138.011 49.255 li
138.011 48.455 li
f
146.001 48.865 mo
146.001 48.205 145.861 47.695 145.591 47.315 cv
145.311 46.935 144.941 46.745 144.471 46.745 cv
143.991 46.745 143.621 46.935 143.351 47.315 cv
143.071 47.695 142.941 48.205 142.941 48.865 cv
142.941 49.525 143.071 50.045 143.351 50.425 cv
143.621 50.805 143.991 50.985 144.471 50.985 cv
144.941 50.985 145.311 50.805 145.591 50.425 cv
145.861 50.045 146.001 49.525 146.001 48.865 cv
142.941 46.955 mo
143.121 46.635 143.361 46.395 143.651 46.235 cv
143.941 46.075 144.291 45.995 144.691 45.995 cv
145.351 45.995 145.891 46.265 146.311 46.785 cv
146.721 47.315 146.931 48.005 146.931 48.865 cv
146.931 49.725 146.721 50.425 146.311 50.945 cv
145.891 51.465 145.351 51.725 144.691 51.725 cv
144.291 51.725 143.941 51.645 143.651 51.495 cv
143.361 51.345 143.121 51.105 142.941 50.775 cv
142.941 51.595 li
142.041 51.595 li
142.041 43.995 li
142.941 43.995 li
142.941 46.955 li
f
150.91 48.845 mo
150.18 48.845 149.68 48.935 149.4 49.095 cv
149.12 49.265 148.98 49.545 148.98 49.945 cv
148.98 50.265 149.081 50.525 149.29 50.705 cv
149.501 50.895 149.79 50.985 150.15 50.985 cv
150.65 50.985 151.051 50.815 151.35 50.455 cv
151.65 50.105 151.801 49.635 151.801 49.045 cv
151.801 48.845 li
150.91 48.845 li
152.701 48.475 mo
152.701 51.595 li
151.801 51.595 li
151.801 50.765 li
151.59 51.105 151.331 51.345 151.031 51.495 cv
150.73 51.645 150.35 51.725 149.91 51.725 cv
149.35 51.725 148.9 51.575 148.57 51.265 cv
148.24 50.955 148.081 50.535 148.081 50.005 cv
148.081 49.395 148.281 48.935 148.701 48.615 cv
149.111 48.305 149.721 48.145 150.54 48.145 cv
151.801 48.145 li
151.801 48.055 li
151.801 47.645 151.66 47.325 151.391 47.095 cv
151.12 46.875 150.74 46.755 150.251 46.755 cv
149.93 46.755 149.63 46.795 149.331 46.875 cv
149.031 46.955 148.751 47.065 148.48 47.205 cv
148.48 46.375 li
148.801 46.255 149.12 46.155 149.43 46.095 cv
149.74 46.035 150.04 45.995 150.34 45.995 cv
151.13 45.995 151.721 46.205 152.111 46.615 cv
152.501 47.025 152.701 47.645 152.701 48.475 cv
f
158.041 46.285 mo
158.041 47.135 li
157.781 47.015 157.521 46.915 157.251 46.845 cv
156.971 46.785 156.691 46.745 156.401 46.745 cv
155.951 46.745 155.611 46.815 155.391 46.955 cv
155.171 47.095 155.061 47.295 155.061 47.565 cv
155.061 47.775 155.141 47.935 155.301 48.055 cv
155.461 48.175 155.781 48.295 156.261 48.395 cv
156.571 48.465 li
157.211 48.605 157.661 48.805 157.931 49.045 cv
158.191 49.295 158.331 49.645 158.331 50.085 cv
158.331 50.595 158.131 50.995 157.731 51.285 cv
157.331 51.585 156.771 51.725 156.071 51.725 cv
155.771 51.725 155.471 51.695 155.151 51.645 cv
154.831 51.595 154.501 51.515 154.151 51.395 cv
154.151 50.465 li
154.481 50.645 154.811 50.775 155.131 50.855 cv
155.451 50.945 155.771 50.985 156.091 50.985 cv
156.511 50.985 156.841 50.915 157.071 50.775 cv
157.291 50.635 157.411 50.425 157.411 50.155 cv
157.411 49.915 157.321 49.725 157.161 49.595 cv
157.001 49.465 156.641 49.335 156.081 49.215 cv
155.771 49.145 li
155.211 49.025 154.801 48.845 154.561 48.605 cv
154.311 48.365 154.191 48.035 154.191 47.605 cv
154.191 47.095 154.371 46.695 154.731 46.415 cv
155.091 46.135 155.611 45.995 156.291 45.995 cv
156.621 45.995 156.931 46.025 157.231 46.075 cv
157.521 46.125 157.791 46.195 158.041 46.285 cv
f
164.441 48.635 mo
164.441 49.075 li
160.311 49.075 li
160.351 49.695 160.531 50.175 160.871 50.495 cv
161.201 50.815 161.661 50.975 162.261 50.975 cv
162.601 50.975 162.941 50.935 163.261 50.855 cv
163.581 50.775 163.911 50.645 164.231 50.465 cv
164.231 51.315 li
163.911 51.455 163.581 51.565 163.241 51.625 cv
162.901 51.685 162.551 51.725 162.211 51.725 cv
161.331 51.725 160.641 51.475 160.131 50.975 cv
159.621 50.475 159.371 49.785 159.371 48.915 cv
159.371 48.025 159.611 47.315 160.091 46.785 cv
160.571 46.265 161.231 45.995 162.051 45.995 cv
162.791 45.995 163.371 46.235 163.801 46.705 cv
164.221 47.185 164.441 47.825 164.441 48.635 cv
163.541 48.375 mo
163.531 47.885 163.391 47.495 163.131 47.195 cv
162.861 46.905 162.501 46.755 162.061 46.755 cv
161.561 46.755 161.161 46.905 160.861 47.185 cv
160.561 47.465 160.381 47.865 160.341 48.375 cv
163.541 48.375 li
f
169.511 46.955 mo
169.511 43.995 li
170.411 43.995 li
170.411 51.595 li
169.511 51.595 li
169.511 50.775 li
169.321 51.105 169.081 51.345 168.791 51.495 cv
168.501 51.645 168.161 51.725 167.761 51.725 cv
167.101 51.725 166.561 51.465 166.141 50.945 cv
165.721 50.425 165.521 49.725 165.521 48.865 cv
165.521 48.005 165.721 47.315 166.141 46.785 cv
166.561 46.265 167.101 45.995 167.761 45.995 cv
168.161 45.995 168.501 46.075 168.791 46.235 cv
169.081 46.395 169.321 46.635 169.511 46.955 cv
166.451 48.865 mo
166.451 49.525 166.581 50.045 166.851 50.425 cv
167.121 50.805 167.501 50.985 167.981 50.985 cv
168.451 50.985 168.821 50.805 169.101 50.425 cv
169.371 50.045 169.511 49.525 169.511 48.865 cv
169.511 48.205 169.371 47.695 169.101 47.315 cv
168.821 46.935 168.451 46.745 167.981 46.745 cv
167.501 46.745 167.121 46.935 166.851 47.315 cv
166.581 47.695 166.451 48.205 166.451 48.865 cv
f
179.7 47.175 mo
179.92 46.775 180.19 46.485 180.5 46.285 cv
180.81 46.095 181.18 45.995 181.61 45.995 cv
182.17 45.995 182.61 46.195 182.92 46.595 cv
183.23 46.995 183.39 47.565 183.39 48.295 cv
183.39 51.595 li
182.49 51.595 li
182.49 48.325 li
182.49 47.805 182.39 47.415 182.21 47.155 cv
182.02 46.905 181.74 46.775 181.36 46.775 cv
180.89 46.775 180.52 46.935 180.25 47.245 cv
179.98 47.555 179.85 47.975 179.85 48.505 cv
179.85 51.595 li
178.95 51.595 li
178.95 48.325 li
178.95 47.805 178.85 47.415 178.67 47.155 cv
178.48 46.905 178.19 46.775 177.81 46.775 cv
177.35 46.775 176.98 46.935 176.71 47.245 cv
176.44 47.555 176.31 47.975 176.31 48.505 cv
176.31 51.595 li
175.41 51.595 li
175.41 46.125 li
176.31 46.125 li
176.31 46.975 li
176.51 46.645 176.76 46.395 177.05 46.235 cv
177.33 46.075 177.67 45.995 178.07 45.995 cv
178.47 45.995 178.8 46.095 179.08 46.295 cv
179.36 46.495 179.56 46.795 179.7 47.175 cv
f
187.3 46.755 mo
186.82 46.755 186.44 46.945 186.16 47.325 cv
185.88 47.705 185.74 48.215 185.74 48.865 cv
185.74 49.525 185.87 50.035 186.15 50.415 cv
186.43 50.795 186.81 50.975 187.3 50.975 cv
187.78 50.975 188.16 50.795 188.44 50.415 cv
188.72 50.035 188.86 49.525 188.86 48.865 cv
188.86 48.225 188.72 47.705 188.44 47.325 cv
188.16 46.945 187.78 46.755 187.3 46.755 cv
187.3 45.995 mo
188.08 45.995 188.69 46.255 189.14 46.755 cv
189.58 47.265 189.81 47.965 189.81 48.865 cv
189.81 49.765 189.58 50.465 189.14 50.965 cv
188.69 51.475 188.08 51.725 187.3 51.725 cv
186.51 51.725 185.89 51.475 185.45 50.965 cv
185.01 50.465 184.79 49.765 184.79 48.865 cv
184.79 47.965 185.01 47.265 185.45 46.755 cv
185.89 46.255 186.51 45.995 187.3 45.995 cv
f
194.9 46.955 mo
194.9 43.995 li
195.8 43.995 li
195.8 51.595 li
194.9 51.595 li
194.9 50.775 li
194.71 51.105 194.47 51.345 194.18 51.495 cv
193.89 51.645 193.55 51.725 193.15 51.725 cv
192.49 51.725 191.95 51.465 191.53 50.945 cv
191.11 50.425 190.91 49.725 190.91 48.865 cv
190.91 48.005 191.11 47.315 191.53 46.785 cv
191.95 46.265 192.49 45.995 193.15 45.995 cv
193.55 45.995 193.89 46.075 194.18 46.235 cv
194.47 46.395 194.71 46.635 194.9 46.955 cv
191.84 48.865 mo
191.84 49.525 191.97 50.045 192.24 50.425 cv
192.51 50.805 192.89 50.985 193.37 50.985 cv
193.84 50.985 194.21 50.805 194.49 50.425 cv
194.76 50.045 194.9 49.525 194.9 48.865 cv
194.9 48.205 194.76 47.695 194.49 47.315 cv
194.21 46.935 193.84 46.745 193.37 46.745 cv
192.89 46.745 192.51 46.935 192.24 47.315 cv
191.97 47.695 191.84 48.205 191.84 48.865 cv
f
202.33 48.635 mo
202.33 49.075 li
198.2 49.075 li
198.24 49.695 198.42 50.175 198.76 50.495 cv
199.09 50.815 199.55 50.975 200.15 50.975 cv
200.49 50.975 200.83 50.935 201.15 50.855 cv
201.47 50.775 201.8 50.645 202.12 50.465 cv
202.12 51.315 li
201.8 51.455 201.47 51.565 201.13 51.625 cv
200.79 51.685 200.44 51.725 200.1 51.725 cv
199.22 51.725 198.53 51.475 198.02 50.975 cv
197.51 50.475 197.26 49.785 197.26 48.915 cv
197.26 48.025 197.5 47.315 197.98 46.785 cv
198.46 46.265 199.12 45.995 199.94 45.995 cv
200.68 45.995 201.26 46.235 201.69 46.705 cv
202.11 47.185 202.33 47.825 202.33 48.635 cv
201.43 48.375 mo
201.42 47.885 201.28 47.495 201.02 47.195 cv
200.75 46.905 200.39 46.755 199.95 46.755 cv
199.45 46.755 199.05 46.905 198.75 47.185 cv
198.45 47.465 198.27 47.865 198.23 48.375 cv
201.43 48.375 li
f
203.8 43.995 mo
204.7 43.995 li
204.7 51.595 li
203.8 51.595 li
203.8 43.995 li
f
.8 lw
2 lc
1 lj
82.8606 62.7669 mo
102.861 62.7669 li
.101625 .977569 .984863 .015259 cmyk
@
92.8606 60.2669 mo
90.3606 65.2669 li
95.3606 65.2669 li
cp
f
1 lw
0 lc
0 lj
92.8606 60.2669 mo
90.3606 65.2669 li
95.3606 65.2669 li
cp
@
117.301 59.5369 mo
117.301 60.5769 li
116.961 60.2769 116.611 60.0469 116.231 59.8869 cv
115.851 59.7369 115.461 59.6569 115.041 59.6569 cv
114.201 59.6569 113.561 59.9169 113.121 60.4269 cv
112.681 60.9369 112.461 61.6669 112.461 62.6269 cv
112.461 63.5869 112.681 64.3269 113.121 64.8369 cv
113.561 65.3469 114.201 65.5969 115.041 65.5969 cv
115.461 65.5969 115.851 65.5269 116.231 65.3669 cv
116.611 65.2169 116.961 64.9869 117.301 64.6769 cv
117.301 65.7069 li
116.951 65.9469 116.581 66.1169 116.201 66.2269 cv
115.821 66.3369 115.411 66.3969 114.981 66.3969 cv
113.881 66.3969 113.011 66.0669 112.371 65.3969 cv
111.731 64.7269 111.421 63.8069 111.421 62.6269 cv
111.421 61.4569 111.731 60.5369 112.371 59.8569 cv
113.011 59.1869 113.881 58.8469 114.981 58.8469 cv
115.421 58.8469 115.831 58.9069 116.211 59.0169 cv
116.591 59.1369 116.961 59.3069 117.301 59.5369 cv
1 /0 /CSD get_res sepcs
1 sep
f
118.821 58.9769 mo
120.151 58.9769 li
123.381 65.0769 li
123.381 58.9769 li
124.341 58.9769 li
124.341 66.2669 li
123.011 66.2669 li
119.781 60.1669 li
119.781 66.2669 li
118.821 66.2669 li
118.821 58.9769 li
f
126.301 58.9769 mo
127.631 58.9769 li
130.861 65.0769 li
130.861 58.9769 li
131.821 58.9769 li
131.821 66.2669 li
130.491 66.2669 li
127.261 60.1669 li
127.261 66.2669 li
126.301 66.2669 li
126.301 58.9769 li
f
133.291 63.1269 mo
135.921 63.1269 li
135.921 63.9269 li
133.291 63.9269 li
133.291 63.1269 li
f
137.651 65.4369 mo
139.261 65.4369 li
139.261 59.8769 li
137.511 60.2269 li
137.511 59.3269 li
139.251 58.9769 li
140.241 58.9769 li
140.241 65.4369 li
141.851 65.4369 li
141.851 66.2669 li
137.651 66.2669 li
137.651 65.4369 li
f
144.741 59.7869 mo
144.741 65.4569 li
145.931 65.4569 li
146.931 65.4569 147.671 65.2369 148.141 64.7769 cv
148.601 64.3169 148.841 63.5969 148.841 62.6169 cv
148.841 61.6369 148.601 60.9269 148.141 60.4669 cv
147.671 60.0169 146.931 59.7869 145.931 59.7869 cv
144.741 59.7869 li
143.751 58.9769 mo
145.781 58.9769 li
147.191 58.9769 148.231 59.2769 148.891 59.8569 cv
149.551 60.4469 149.881 61.3669 149.881 62.6169 cv
149.881 63.8769 149.541 64.7969 148.881 65.3869 cv
148.221 65.9769 147.181 66.2669 145.781 66.2669 cv
143.751 66.2669 li
143.751 58.9769 li
f
.8 lw
2 lc
1 lj
82.8606 77.4388 mo
102.861 77.4388 li
.470466 .680446 0 0 cmyk
@
92.8606 78.6888 mo
93.1921 78.6888 93.5101 78.557 93.7445 78.3226 cv
93.9789 78.0882 94.1106 77.7702 94.1106 77.4388 cv
94.1106 77.1072 93.9789 76.7893 93.7445 76.5549 cv
93.5101 76.3204 93.1921 76.1888 92.8606 76.1888 cv
92.5291 76.1888 92.2112 76.3204 91.9767 76.5549 cv
91.7423 76.7893 91.6106 77.1072 91.6106 77.4388 cv
91.6106 77.7702 91.7423 78.0882 91.9767 78.3226 cv
92.2112 78.557 92.5291 78.6888 92.8606 78.6888 cv
cp
f
1 lw
0 lc
92.8606 78.6888 mo
93.1921 78.6888 93.5101 78.557 93.7445 78.3226 cv
93.9789 78.0882 94.1106 77.7702 94.1106 77.4388 cv
94.1106 77.1072 93.9789 76.7893 93.7445 76.5549 cv
93.5101 76.3204 93.1921 76.1888 92.8606 76.1888 cv
92.5291 76.1888 92.2112 76.3204 91.9767 76.5549 cv
91.7423 76.7893 91.6106 77.1072 91.6106 77.4388 cv
91.6106 77.7702 91.7423 78.0882 91.9767 78.3226 cv
92.2112 78.557 92.5291 78.6888 92.8606 78.6888 cv
cp
@
116.811 79.8988 mo
116.811 77.9388 li
115.201 77.9388 li
115.201 77.1288 li
117.791 77.1288 li
117.791 80.2588 li
117.411 80.5387 116.991 80.7388 116.531 80.8688 cv
116.071 80.9987 115.581 81.0687 115.061 81.0687 cv
113.921 81.0687 113.021 80.7388 112.381 80.0788 cv
111.741 79.4188 111.421 78.4888 111.421 77.2988 cv
111.421 76.1188 111.741 75.1888 112.381 74.5188 cv
113.021 73.8587 113.921 73.5188 115.061 73.5188 cv
115.531 73.5188 115.981 73.5788 116.411 73.6988 cv
116.841 73.8187 117.241 73.9888 117.601 74.2087 cv
117.601 75.2588 li
117.231 74.9587 116.841 74.7288 116.431 74.5687 cv
116.021 74.4088 115.591 74.3288 115.141 74.3288 cv
114.241 74.3288 113.571 74.5788 113.131 75.0788 cv
112.681 75.5788 112.461 76.3187 112.461 77.2988 cv
112.461 78.2887 112.681 79.0287 113.131 79.5287 cv
113.571 80.0287 114.241 80.2688 115.141 80.2688 cv
115.481 80.2688 115.791 80.2388 116.071 80.1787 cv
116.351 80.1188 116.591 80.0287 116.811 79.8988 cv
1 /0 /CSD get_res sepcs
1 sep
f
120.581 74.4587 mo
120.581 77.1988 li
121.821 77.1988 li
122.281 77.1988 122.631 77.0888 122.881 76.8488 cv
123.131 76.6087 123.261 76.2688 123.261 75.8288 cv
123.261 75.3887 123.131 75.0588 122.881 74.8187 cv
122.631 74.5788 122.281 74.4587 121.821 74.4587 cv
120.581 74.4587 li
119.591 73.6488 mo
121.821 73.6488 li
122.631 73.6488 123.251 73.8388 123.671 74.2087 cv
124.091 74.5788 124.301 75.1188 124.301 75.8288 cv
124.301 76.5488 124.091 77.0988 123.671 77.4587 cv
123.251 77.8288 122.631 78.0088 121.821 78.0088 cv
120.581 78.0088 li
120.581 80.9388 li
119.591 80.9388 li
119.591 73.6488 li
f
125.621 73.6488 mo
129.811 73.6488 li
129.811 74.4788 li
126.611 74.4788 li
126.611 76.6288 li
129.501 76.6288 li
129.501 77.4587 li
126.611 77.4587 li
126.611 80.9388 li
125.621 80.9388 li
125.621 73.6488 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
